{"pages":[{"title":"About","date":"2022-02-24T07:06:50.409Z","path":"about/index.html","text":""},{"title":"Categories","date":"2022-02-24T07:06:50.409Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2022-02-24T07:06:50.409Z","path":"tags/index.html","text":""}],"posts":[{"title":"数据库综述","date":"2022-02-22T03:27:19.000Z","path":"wiki/数据库综述/","text":"书籍来源：Abraham Silberschatz 等：数据库系统概念@2006 (第 5 版 扫描版).pdf​ 1.1-1.7 数据库本身概念介绍 1.7-1.9 数据库用户介绍 第二章 对数据库的设计理念进一步延伸，实体与联系模型 第三章应该是基于第二章的技术概念上的一次升级 第四章——SQL 单独介绍、第五章——其他的类型介绍，予读者一种对比 ​ 概念书，从设计理念到实际设计都有描述 DBMS（数据库管理系统）：由一个互相关联的数据的集合和一组用以访问这些数据程序组成，这个数据集合通常被称为数据库 数据库概念 数据库系统的目的——解决问题 数据的冗余和不一致 数据孤立 完整性问题 数据访问困难 原子性问题 并发访问异常 安全性问题 …… 数据视图——系统隐藏关于数据存储和维护的某些细节 数据抽象 用户界面 物理层——最低层次的抽象，描述数据实际上怎么存储 逻辑层——高于物理层，描述数据库中存储什么数据，以及数据之间的关系 视图层——最高层次的抽象，但只描述整个数据库的某个部分 实例和模式 数据库模式：数据库总体设计数据库实例：存储在数据库中的信息的集合 3. **数据独立性** 数据独立性：在某个层次上修改模式定义而不影响位于其上一层模式的能力 数据模型 数据模型：描述数据、数据联系、数据语义及一致性约束的概念工具的集合 1. **基于对象的逻辑模型** 用于在逻辑层和视图层上描述数据 1. **实体-联系模型（E-R）** 该模型基于对现实世界的一种认识：现实世界是由一组称作实体的基本对象以及这些对象间的联系构成的 - E-R图 - 矩形：代表实体集 - 椭圆：代表属性 - 菱形：代表实体集间的联系 - 段：将属性与实体集相连或将实体集与联系相连 2. **面向对象的模型** 面对对象的模型是基于对象的一个集合。对象划分为不同的类，含有相同类型的值和相同方法的对象属于同一个类。 3. **基于记录的逻辑模型** 基于记录的模型既用来定义数据库的全局逻辑结构，又用来提供关于实现的高层描述 1. **关系模型** 用表的集合来表示数据和数据间的关系 2. **网状模型** 数据用记录的集合来表示 3. **层次模型** 与网状模型类似，分别用记录和链接来表示数据和数据间的联系 4. **三种模型的差别** 关系模型同其他的不同在于关系模型不适用指针或链接，而是通过记录所包含的值把记录联系起来。这样的方式可以为关系模型定义规范的数学基础 4. **物理数据模型** 最低层次上描述数据。不在本书讨论范围内 数据库语言 数据定义语言（DDL） DDL(数据定义语言)——该语句的编译结构是产生了存储在一个特殊文件中的一系列表，称作数据字典或数据目录数据库中定义存储结构和访问方式由 DDL 语句来定义数据字典：一个包含元数据的文件，元数据是关于数据的数据。数据库，实际的读取修改前总要先查询该表 2. **数据操纵语言(DML)** 数据操作——增删查改两类数据操纵语言： - 过程化的DML要求用户指定要什么数据以及如何获取 - 非过程化的DML要求用户要什么数据，而不需要指明如何获取 事务管理 按几个操作合起来形成一个逻辑执行单元事务管理是数据库应用中完成单一逻辑功能的操作集合 存储管理 数据库系统对数据的组织必须满足使磁盘和主存间数据移动的需求最小化存储管理器负责与文件管理器交互——通过 DML 语句翻译成底层文件系统命令存储管理器负责数据库中的数据存储、检索和更新 数据库管理员（DBA） 数据库管理员：对系统进行集中控制的人责任： - 模式定义 - 存储结构及存取方式定义 - 模式及物理组织的修改 - 数据访问授权 - 完整性约束的定义 数据库用户 四种类型： - 应用程序设计人员——编写通过DML调用的程序，与系统交互 - 富有经验的用户——并非通过编写语言来同系统交互，而是用数据库查询语言来交互 - 专门的用户——编写专门的、不适用传统的模式的富有经验的用户 - 没有经验的用户——通过已经写好的程序同数据库进行交互 系统总体结构 大致可以分成——查询处理器部件、存储管理器部件 - 查询处理器部件 - DML编译器：将DML翻译成引擎能理解的低级指令 - 嵌入式DML预编译器：将嵌在应用程序中的DML转换成宿主语言中普遍的过程调用语句，必须同DML编译器相配合 - DDL解释器：解释DDL语句并将其记录到包含元数据的一系列表中 - 查询求值引擎 - 存储管理器部件 - 权限及完整性管理器 - 事务管理器 - 文件管理器 - 缓冲管理器 - 一些数据结构 - 数据文件 - 数据字典 - 索引 - 统计数据 ​ ​ ​ LZL: 任何系统都是为了解决问题而生 知道如何用，不知道为什么这样用。这是可行的策略。——这可能仅适用于被设计出来的东西","tags":[{"name":"​","slug":"​","permalink":"http://liaozonglong.github.io/tags/%E2%80%8B/"}],"categories":[]},{"title":"Metasploit 渗透测试指南","date":"2022-02-21T03:16:59.000Z","path":"wiki/Metasploit 渗透测试指南/","text":"结构笔记： 这是什么样的一本书？ 带有针对性的工具书，主要是为了让你理解某个工具 整本书在谈的是什么？ 核心是围绕 meterpreter mixins 来展开。一切其他方面的补充都是为了更好理解 meterpreter mixins 作者是借着怎样的整体架构，来发展他的观点或陈述他对这个主题的理解？ 标准化的基础知识 一些术语解释（应该顺带介绍这个程序） 各种情报扫描工具、各种漏洞扫描（结合两者进行一次攻击行为）——理解标准攻击的行为 正式开始 meterpreter 相关内容（攻击行为） 具备攻击后，加强反杀能力 一些其他的攻击手段 从创建一个攻击代码到组成 metasploit 框架的一部分 整个行为的总结 附录让你开放可能存在的漏洞并进行攻击。这是理解这个应用更好的方法 一个很普通的指南书，目的是 meterpreter 框架。作者每次让读者看框架执行之前总会从常规模式入手，让读者理解这一模式。因此，理解前者是理解后者的基础，并且也占比绝大部分。​ ##渗透测试的基础​","tags":[{"name":"​","slug":"​","permalink":"http://liaozonglong.github.io/tags/%E2%80%8B/"}],"categories":[]},{"title":"丽晶打印机更换打印格式","date":"2022-02-18T05:43:23.000Z","path":"wiki/丽晶打印机更换打印格式/","text":"针打机格式：","tags":[{"name":"丽晶","slug":"丽晶","permalink":"http://liaozonglong.github.io/tags/%E4%B8%BD%E6%99%B6/"}],"categories":[]},{"title":"hexo","date":"2022-02-18T05:16:39.000Z","path":"wiki/hexo/","text":"install nodejs npm Git yay 123pacman -S yayyay -S nodejs npmnpm install -g hexo-cli station construction 12345678910hexo initgit clone https://github.com/zthxxx/hexo-theme-Wikitten.git themes/Wikitten##overwrite default pagecp -rf themes/Wikitten/_source/* source/cp -rf themes/Wikitten/_scaffolds/* scaffolds/##set profilecp -f themes/Wikitten/_config.yml.example themes/Wikitten/_config.ymlvim themes/Wikitten/_config.yml yuque 1YUQUE_TOKEN=&quot;$YUQUE_TOKEN&quot; yuque-hexo sync ​ ​","tags":[{"name":"​","slug":"​","permalink":"http://liaozonglong.github.io/tags/%E2%80%8B/"}],"categories":[]},{"title":"布谷鸟问题","date":"2022-02-17T07:37:39.000Z","path":"wiki/布谷鸟问题/","text":"无法截图 检查计算机名。 例：用户名为 f’f。即系统环境变量为：C:\\Users\\f’f.…..解决方法：修改回不带特殊符号的用户名 1. 重命名用户文件夹 1. 修改注册表HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Profilelist中的ProfileImagePath的路径地址 ​ 补充布谷鸟临时截图路径C:\\Users\\计算机用户名\\Documents\\SisenMESS\\用户名\\TempFiles\\年+月例：C:\\Users\\Administrator\\Documents\\SisenMESS\\zhangsan\\TempFiles\\202202​ ​ ​","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"布谷鸟","slug":"布谷鸟","permalink":"http://liaozonglong.github.io/tags/%E5%B8%83%E8%B0%B7%E9%B8%9F/"},{"name":"软件","slug":"软件","permalink":"http://liaozonglong.github.io/tags/%E8%BD%AF%E4%BB%B6/"}],"categories":[]},{"title":"Python","date":"2022-02-07T01:00:25.000Z","path":"wiki/Python/","text":"编程之路计算机科学家像数学家一样，使用规范的语言来阐述思想（尤其是一些计算）；像工程师一样设计、组装系统，并且在多重选择中寻找最优解；像自然科学家一样观察复杂系统的行为模式，建立猜想，测试预估的结果。唯一最重要的技能就是『解决问题』。解决问题意味着要有能力把问题进行方程化，创造性地考虑解决思路，并且清晰又精确地表达出解决方案 程序是什么？程序是一个指令的序列，来告诉机器如何进行一组运算。这种运算也许是数学上的，比如求解一组等式或者求多项式的根；当然也可以是符号运算，比如在文档中搜索和替换文字，或者一些图形化过程，比如处理图像或者播放一段视频编程的基础指令：输入系统、输出系统、数学运算、条件判断、重复判断编程的过程理解成一个把庞大复杂任务进行拆分来解决的过程，分解到适合使用上述的基本指令来解决为止。 运算符“+”、”-“、”*“、”&#x2F;“、”%” 值和类型type(需要判断的对象) #判断一个值是什么类型 公示语言和自然语言定义：自然语言：就是人说的语言，比如英语、西班牙语、法语，当然包括中文了。他们往往都不是人主动去设计出来的（当然，人会试图去分析语言的规律），自然而然地发生演进。公式语言：人们为了特定用途设计出来的。比如数学的符号就是一种公式语言，特别适合表达数字和符号只见的关系。化学家也用元素符号和化学方程式来表示分子的化学结构。 语法规则体现在两个方面，代号和结构。公式语言的语法规则是代号必须有严格的组合结构。你读一句英语或者公式语言中的语句时候，你必须搞清楚结构（虽然在自然语言中大家潜意识就能搞定了）。这就叫做解译。两者的差异：二义性、冗余性、文字修辞计算机程序的意义必须是无歧义和文采修饰的，能完全用代号和结构的方式进行解析。 变量，表达式，语句赋值语句赋值语句的作用是创建一个新的变量，并且赋值给这个变量 变量名称编程的人总得给变量起个有一定意义的名字才能记得住，一般情况就用名字来表示这个变量的用途了不能用数字来开头。大写字母也能用，不过还是建议都用小写字母来给变量命名，这个比较传统哈变量名里面可以有下划线_，一般在多个单词组成的变量名里面往往用到下划线，比如 your_name 等等。 表达式和语句表达式是数值,变量和操作符的组合。单个值本身也被当作一个表达式，变量也是如此语句是一组具有某些效果的代码，比如创建变量，或者显示值。 脚本模式以上我们一直在用 Python 的交互模式，就是直接咱们人跟解释器来交互。开始学的候这样挺好的，但如果你要想一次运行多行代码，这样就很不方便了。所以就有另一种选择了，把代码保存成脚本，然后用脚本模式让解释器来运行这些脚本。通常 Python 脚本文件的扩展名是.pyPython 两种模式都支持，所以你可以先用交互模式做点测试，然后再写成脚本。但是两种模式之间有些区别的，所以可能也挺麻烦。 运算符优先级括号&gt;乘方&gt;乘除&gt;加减 字符串操作+：字符串拼接 *：字符串重复 n 次 注释使用”#”来开头变量命名得当的话，就没必要用太多注释了，不过名字要是太长了，表达式读起来也挺麻烦，所以就得权衡着来了 调试定义：前置条件：要在函数开始运行之前就要实现才行后置条件：后置条件包含函数的预期效果（如画线段）和其他作用 语法错误运行错误：显而易见了，就是直到运行的时候才会出现的错误。这种错误也被叫做异常，因为一般表示一些意外的尤其是比较糟糕的情况发生了语义错误：这种错误是指你的程序运行没问题，也不产生错误信息，但不能正确工作。程序可能做一些和设计目的不同的事情。调试也有点像一门实验科学。一旦你有了一个关于所出现的错误的想法，你就修改一下程序再试试看。如果你的假设是正确的，你就能够预料到修改导致的结果，这样在编程的水平上，你就上了一层台阶了，距离让程序工作起来也更近了。​ 前置条件是准备给函数调用者的。如果调用者违背了（妥当标注的）前置条件，然后函数不能正常工作，这个 bug 就会反馈在函数调用者上，而不是函数本身。如果前置条件得到了满足，而后置条件未能满足，这个 bug 就是函数的了。所以如果你的前后置条件都弄清晰，对调试很有帮助。​ 『对折调试』是一种节省调试时间的方法。比如，如果你的程序有 100 行，你检查一遍就要大概 100 步了。而对折方法就是把程序分成两半。看程序中间位置，或者靠近中间位置的，检查一些中间值。在这些位置添加一些 print 语句（或者其他能够能起到验证效果的东西），然后运行程序 函数函数调用一般来说，函数都要“传入”一个参数，“返回”一个结果。结果也被叫做返回值。Python 提供了一些转换数值类型的函数。 Math functionsPython 内置了一个数学模块，这一模块提供了绝大部分常用的数学函数。模块就是一系列相关函数的集合成的文件。import math #导入语句 组合一门编程语言最有用的功能莫过于能够用一个个小模块来拼接创作。例如函数的参数可以是任何一种表达式，包括代数运算符：x &#x3D; math.sin(degrees &#x2F; 360.0 _ 2 _ math.pi) ßx &#x3D; math.exp(math.log(x+1)) #函数的调用本身也可以作为参数你可以在任何地方放一个值，放任何一个表达式，只有一个例外：一个声明语句的左边必须是变量名。任何其他的表达式放到等号左边都会导致语法错误（当然也有例外） 添加新函数函数定义要指定这个心函数的名字，还需要一系列语句放到这个函数里面，当调用这个函数的时候，就会运行这些语句了。​ def 函数名(): &lt;–头部执行语句… &lt;–函数体​ 如果你在交互模式下面定义函数，解释器会显示三个小点来提醒你定义还没有完成 定义并使用函数名() 运行流程一个 Python 程序都是从第一个语句开始运行的。从首至尾，每次运行一个语句。函数的定义并不会改变程序的运行流程，但要注意，函数体内部的语句只有在函数被调用的时候才会运行。总的来说，你阅读一个程序的时候，并不一定总是要从头到尾来读的。有时候你要按照运行流程来读才更好理解。 形式参数和实际参数在函数里面，实际参数会被赋值给形式参数 1234def print_twice(bruce): print(bruce) print(bruce)这个函数把传来的实际参数的值赋给了一个名字叫做burce的形式参数 适用于 Python 内置函数的组合规则对自定义的函数也是适用的，所以我们可以把表达式作为实际参数传递参数的时候用的是实际参数，是把这个实际参数的值交给调用的函数，函数内部接收这个值，可以命名成任意其他名字的形式参数 函数内部变量和形参都是局部的在函数内部建立一个变量，这个变量是仅在函数体内部才存在形式参数也是局部起作用的。例如在 print_twice 这个函数之外，是不存在 bruce 这个变量的。 栈图要追踪一个变量能在哪些位置使用，咱们就可以画个图表来实现，这种图表叫做栈图。栈图和我们之前提到的状态图有些相似，也会表征每个变量的值，不同的是栈图还会标识出每个变量所属的函数。每个函数都用一个框架来表示。框架的边上要标明函数的名字，框内填写函数内部的形参和变量。如果函数调用的时候出错了，Python 会打印出这个出错函数的名字，调用这个出错函数的函数名，以及调用这个调用了出错函数的函数的函数名，一直追溯到主函数这个一系列的函数列表，就是一个追溯了。这回告诉你哪个程序文件出了错误，哪一行出了错误，以及当时哪些函数在运行。还会告诉你引起错误的代码所在行号。 有返回值的函数 和 无返回值的函数定义：有返回值的函数：比如数学的函数，都会返回各种结果无返回值的函数：比如 print_twice，都是进行一些操作，但不返回值 如果是脚本模式，你运行一个有返回值的函数，但没有利用这个返回值，这个返回值就会永远丢失了！（译者注：只要有返回值就一定要利用！） 为什么要用函数？ 创建一个新的函数，你就可以把一组语句用一个名字来命名，这样你的程序读起来就清晰多了，后期维护调试也方便 函数的出现能够避免代码冗余，程序内的一些重复的内容就会简化了，变得更小巧。而且在后期进行修改的时候，你只要改函数中的一处地方就可以了，很方便 把长的程序切分成一个个函数，你就可以一步步来 debug 调试，每次只应对一小部分就可以，然后把它们组合起来就可以用了 精细设计的函数会对很多程序都有用处。一旦你写好了并且除了错，这种函数代码可以再利用 一个实例开发计划定义：泛化：给函数添加参数，就叫做泛化，因为者可以让函数的功能更广泛 开发计划是写程序的一系列过程。我们本章所用的就是『封装-泛化』的模式。这一过程的步骤如下： 开始写一个特别小的程序，没有函数定义。 一旦有你的程序能用了，确定一下实现功能的这部分有练习的语句，封装成函数，并命名一下。 通过逐步给这个函数增加参数的方式来泛化。 重复 1-3 步骤，一直到你有了一系列能工作的函数为止。把函数复制粘贴出来，避免重复输入或者修改了。 看看是不是有通过重构来改进函数的可能。比如，假设你在一些地方看到了相似的代码，就可以把这部分代码做成一个函数。 文档字符串文档字符串是指：在函数开头部位，解释函数的交互界面的字符串，doc 是文档documentation 的缩写。下面是一个例子 1234567def polyline(t, n, length, angle):&quot;&quot;&quot;Draws n line segments with the given length and angle (in degrees) between them.t is a turtle. &quot;&quot;&quot;for i in range(n):t.fd(length)t.lt(angle) 条件循环地板除和求模floor 除法（地板除法）——运算符”&#x2F;&#x2F;“：地板除法会把运算结果的小数位舍弃，返回整值求模——运算符”%”：会把两个数相除然后返回余数。 布尔表达式运算符”&#x3D;&#x3D;”：一种非对即错的表达式，仅有 true（真）或者 false（假） 逻辑运算符逻辑运算符有三种：且，或以及非且：比如 x&gt;0 且 x&lt;10或：非：非运算，是针对布尔表达式的，非（x&gt;y）为真，那么 x&gt;y 就是假的，意味着 x 小于等于 y。 条件执行if 后面的布尔表达式就叫做条件。如果条件为真，随后缩进的语句就运行。如果条件为假，就不运行复合语句中语句体内的语句数量是不限制的，但至少要有一个。有的时候会遇到一个语句体内不放语句的情况，比如空出来用来后续补充。这种情况下，你就可以用 pass 语句，就是啥也不会做的。 12if x &lt; 0: pass 选择执行if 语句的第二种形式就是『选择执行』，这种情况下会存在两种备选的语句，根据条件来判断执行哪一个。语法如下所示： 1234if x % 2 == 0: print(&#x27;x is even&#x27;)else: print(&#x27;x is odd&#x27;) 链式条件有时我们要面对的可能性不只有两种，需要更多的分支。这时候可以使用连锁条件来实现： 123456if x &lt; y:print(&#x27;x is less than y&#x27;)elif x &gt; y: #elif是『else if』的缩写print(&#x27;x is greater than y&#x27;)else: #else语句必须放到整个条件链；不过else语句并不是必须有的print(&#x27;x and y are equal&#x27;) 嵌套条件一个条件判断也可以嵌套在另一个条件判断内 1234567if x == y: print(&#x27;x and y are equal&#x27;)else: if x &lt; y: print(&#x27;x is less than y&#x27;) else: print(&#x27;x is greater than y&#x27;) 递归运算一个函数可以去调用另一个函数；函数来调用自己也是允许的。这就是递归;执行这种函数的过程就叫递归运算 123456def countdown(n): if n &lt;= 0: print(&#x27;Blastoff!&#x27;) else: print(n) countdown(n-1) 递归函数的栈图每次有一个函数被调用的时候，Python 都会创建一个框架来包含这个函数的局部变量和形式参数。对于递归函数来说，可能会在栈中同时生成多层次的框架。 无穷递归如果一个递归一直都不能到达基准条件，那就会持续不断地进行自我调用，程序也就永远不会终止了。这就叫无穷递归 12def recurse(): recurse() 键盘输入内置的一个函数”input”函数这个函数会停止程序运行，等待用户来输入一些内容。用户按下 ESC 或者 Enter 回车键，程序就恢复运行，input 函数就把用户输入的内容作为字符串返回。 1name = input(&#x27;What...is your name?\\n&#x27;) 有返回值的函数返回值对函数进行调用，就会产生一个返回的值，我们一般把这个值赋给某个变量，或者放进表达式中来用。 123def area(radius): a = math.pi * radius**2 return a 有一些临时变量可以让后续的调试过程更简单。所以有时候可以多设置几条返回语句，每一条都对应一种情况 12345def absolute_value(x): if x &lt; 0: return -x else: return x 返回语句运行的时候，函数就结束了，也不会运行任何其他的语句了。返回语句后面的代码，执行流程里所有其他的位置都无法再触碰了，这种代码叫做『死亡代码』 增量式开发要应对越来越复杂的程序，你不妨来试试增量式开发的办法。增量式开发的目的是避免长时间的调试过程，一点点对已有的小规模代码进行增补和测试​ 这个函数只需要返回一个值。我们写得这些 print 打印语句都是用来调试的，但一旦程序能正常工作了，就应该把 print 语句去掉。这些 print 代码也叫『脚手架代码』因为是用来构建程序的，但不会被存放在最终版本的程序中​ 这个过程的核心如下： 一定要用一个能工作的程序来开始，每次逐渐添加一些细小增补。在任何时候遇到错误，都应该弄明白错误的位置。 用一些变量来存储中间值，这样你可以显示一下这些值，来检查一下。 程序一旦能工作了，你就应该把一些发挥『脚手架作用』的代码删掉，并且把重复的语句改写成精简版本，但尽量别让程序变得难以阅读。 布尔函数函数也可以返回布尔值，这种情况便于隐藏函数内部的复杂测试。例如： 12345def is_divisible(x, y): if x % y == 0: return True else: return False 迭代再赋值对同一个变量可以多次进行赋值。一次新的赋值使得已有的变量获得新的值对变量进行再赋值总是很有用的，但你用的时候要做好备注和提示。如果变量的值频繁变化，就可能让代码难以阅读和调试 更新变量这种情况下新的值是在旧值基础上进行修改得到的。 1x = x + 1 循环：While 语句在一个计算机程序里面，重复操作也被叫做迭代。 12345def countdown(n): while n &gt; 0: print(n) n = n - 1 print(&#x27;Blastoff!&#x27;) 中断123456while True: line = input(&#x27;&gt; &#x27;) if line == &#x27;done&#x27;: break #中断语句&quot;break&quot; print(line) print(&#x27;Done!&#x27;) 平方根循环经常被用于进行数值运算的程序中，这种程序往往是有一个近似值作为初始值，然后逐渐迭代去改进以接近真实值。​ 通过对比两个数字之间是否相当，可以判断是否接近了真实值。但是这个如果用在浮点型上就会有很大的问题。相比之下，与其对比 x 和 y 是否精确相等，倒不如以下方法更安全：用内置的绝对值函数来计算一下差值的绝对值，也叫做数量级。 12if abs(y-x) &lt; epsilon: break 算法比如找到一个 n 与 9 的成绩，你可以把 n-1 写成第一位，10-n 携程第二位。这个技巧是应对任何个位数字乘以 9 的算式。这就是一个算法了！执行算法是很无聊的，但设计算法很有趣，是智力上的一种挑战，也是计算机科学的核心部分 字符串一个字符串是一个序列，意味着是对其他值的有序排列 字符串是字符字符串就是一串有序的字符。你可以通过方括号操作符，每次去访问字符串中的一个字符： 12fruit = &#x27;banana&#x27;letter = fruit[0] len 长度12fruit = &#x27;banana&#x27;len(fruit) 用 for 循环进行遍历很多计算过程都需要每次从一个字符串中拿一个字符。一般都是从头开始，依次得到每个字符，然后做点处理，然后一直到末尾。这种处理模式叫遍历。写一个遍历可以使用 while 循环： 12345index = 0while index &lt; len(fruit): letter = fruit[index] print(letter) index = index + 1 另外一种遍历的方法就是 for 循环了 12for letter in fruit: print(letter) 字符串切片12x[n:m]x[:] #全部输出 字符串不可修改你不能对一个已经存在的字符串进行任何改动。你顶多也就能建立一个新字符串，新字符串可以基于旧字符串进行一些改动。 12greeting = &#x27;Hello, world!&#x27;new_greeting = &#x27;J&#x27; + greeting[1:] 运算符 inin 这个词在字符串操作中是一个布尔操作符，它读取两个字符串，如果前者的字符串为后者所包含，就返回真，否则为假： 12&gt;&gt;&gt; &#x27;a&#x27; in &#x27;banana&#x27;True 列表Python 里面最有用的一种内置类型：列表。 列表即序列和字符串差不多，列表是一系列的数值的序列。在字符串里面，这些值是字符；在列表里面，这些值可以是任意类型的。一个列表中的值一般叫做列表的元素，有时候也叫列表项。 12[10, 20, 30, 40][&#x27;crunchy frog&#x27;, &#x27;ram bladder&#x27;, &#x27;lark vomit&#x27;] 列表内部可以包含一个列表作为元素 1[&#x27;spam&#x27;, 2.0, 5, [10, 20]] 列表元素可修改1cheeses[0] #方括号内的数字用来确定索引位置 修改列表的元素 12numbers = [42, 123]numbers[1] = 5 遍历一个列表最常用的办法就是 for 循环了 12for cheese in cheeses: print(cheese) 列表运算符加号+运算符可以把列表拼接在一起： 123a = [1, 2, 3]b = [4, 5, 6]c = a + b 星号*运算符可以将列表重复指定的次数： 1[1, 2, 3] * 3 列表切片12t = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;] t[1:3] 列表的方法append 就可以在列表末尾添加一个新的元素： 12t = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;] t.append(&#x27;d&#x27;) extend 使用另一个列表做参数，然后把所有的元素添加到一个列表上。 123t1 = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]t2 = [&#x27;d&#x27;, &#x27;e&#x27;]t1.extend(t2) sort 把列表中的元素从低到高（译者注：下面的例子中是按照 ASCII 码的大小从小到大）排列： 12t = [&#x27;d&#x27;, &#x27;c&#x27;, &#x27;e&#x27;, &#x27;b&#x27;, &#x27;a&#x27;]t.sort() 删除元素从一个列表中删除元素有几种方法。如果你知道你要删除元素的索引，你就可以用 pop 这个方法来实现： 123456&gt;&gt;&gt; a = [1,2,3]&gt;&gt;&gt; x = a.pop(1)&gt;&gt;&gt; a[1,3]&gt;&gt;&gt; x[2] 如果你不需要删掉的值了，你可以用 del 运算符来实现： 1234&gt;&gt;&gt; a = [1,2,3]&gt;&gt;&gt; del a[1] #可切片：del a[1:5]&gt;&gt;&gt; a[1,3] 如果你知道你要删除的元素值，但不知道索引位置，你可以使用 remove 这个方法： 1234&gt;&gt;&gt; a = [1,2,3]&gt;&gt;&gt; a.remove(2)&gt;&gt;&gt; a[1,3] 列表和字符串123456join：将字符串转换成一个个元素，并转变成列表&gt;&gt;&gt; a = &#x27;test-and-test&#x27;&gt;&gt;&gt; b = &#x27;-&#x27;&gt;&gt;&gt; t = s.split(b)&gt;&gt;&gt; t[&#x27;test&#x27;,&#x27;and&#x27;,&#x27;test&#x27;] 123456solit：将列表的元素转变成字符串&gt;&gt;&gt; a = [&#x27;test&#x27;,&#x27;and&#x27;,&#x27;test&#x27;]&gt;&gt;&gt; b = &#x27; &#x27;&gt;&gt;&gt; c = b.join(a)&gt;&gt;&gt; c&#x27;test and test&#x27; 对象和值1234&gt;&gt;&gt; a = &#x27;test&#x27;&gt;&gt;&gt; b = &#x27;test&#x27;&gt;&gt;&gt; a is bTrue #结果为真，即两个变量指向的是同一个对象。如果你创建的是一个列表，那么就是两个对象，结果即False 别名1234&gt;&gt;&gt; a = [1, 2, 3]&gt;&gt;&gt; b = a&gt;&gt;&gt; b is a #修改其中任何一个的值，也会导致另外一个值一起变化True 字典字典是一种映射列表概念的推广。在列表里面，索引必须是整数；而在字典里面，你可以用几乎任何类型来做索引了​ 字典包括一系列的索引，不过就已经不叫索引了，而是叫键，然后还对应着一个个值，就叫键值。每个键对应着各自的一个单独的键值。这种键和键值的对应关系也叫键值对，有时候也叫项​ 12test = &#123;one: &quot;test&quot;&#125; #创建新字典&gt;&gt;&gt; &#x27;one&#x27; in test #判断该字典是否存在one键 循环与字典如果你在 for 语句里面用字典，程序会遍历字典中的所有键。 逆向查找给定一个字典 d，以及一个键 k，很容易找到对应的键值 v&#x3D;d[k]。这个操作就叫查找。 123456def reverse_lookup(d, v): for k in d: if d[k] == v: return k raise LookupError() 没有一种简单的语法能实现这样一种逆向查找；你必须搜索一下 全局变量在主函数中的变量也叫全局变量，因为所有函数都可以访问这些变量。局部变量在所属的函数结束后就消失了，而主函数在其他函数调用结束后依然还存在一般常用全局变量作为 flag，也就是标识​ 元组元组不可修改元组是一系列的值。这些值可以是任意类型的，并且用整数序号作为索引，所以可以发现元组和列表非常相似。二者间重要的区别就是元组是不可修改的。 1234567&gt;&gt;&gt; t = (&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;)#元组的语法是一系列用逗号分隔的值，通常都用一对圆括号把元组的元素包括起来，当然不这样也没事&gt;&gt;&gt; t1 = &#x27;a&#x27;, #要建立一个单个元素构成的元组，必须要在结尾加上逗号&gt;&gt;&gt; t = (&#x27;A&#x27;,) + t[1:] #元组是不能修改的，你不能修改其中的元素。但是可以用另一个元组来替换已有的元组——该语句建立了一个新的元组 元组赋值对两个变量的值进行交换是一种常用操作。用常见语句来实现的话，就必须有一个临时变量 12345&gt;&gt;&gt; temp = a&gt;&gt;&gt; a = b&gt;&gt;&gt; b = temp#上一段语句可以转换成下面条语句&gt;&gt;&gt; a, b = b, a 用元组做返回值严格来说，一个函数只能返回一个值，但如果这个值是一个元组，效果就和返回多个值一样了将结果存储为一个元组，然后使用元组复制分别调用​ 参数长度可变的元组函数的参数可以有任意多个。用星号*开头来作为形式参数名，可以将所有实际参数收录到一个元组中。 123456def printall(*args): print(args)printall(1, 2.0, &#x27;3&#x27;)(1, 2.0, &#x27;3&#x27;) 列表和元组zip 是一个内置函数，接收两个或更多的序列作为参数，然后返回返回一个元组列表，该列表中每个元组都包含了从各个序列中的一个元素。​ 词典与元组字典有一个名为 items 的方法，会返回一个由元组组成的序列，每一个元组都是字典中的一个键值对​ 文件『持久的』程序，就是把数据进行永久存储 持久程序持久的特征：它们运行时间很长（甚至一直在运行）；这些程序还会至少永久保存一部分数据（比如存在硬盘上等等）；然后如果程序关闭了或者重新始了，也能从之前停留的状态继续工作。——例如：操作系统​ 读写文件open 函数会返回一个文件对象，文件对象会提供各种方法来处理文件 123456#这样用写入的模式来打开，会把旧的文件都清除掉，然后重新写入文件&gt;&gt;&gt; fout = open(&#x27;output.txt&#x27;, &#x27;w&#x27;)#write 这个方法就把数据写入到文件中&gt;&gt;&gt; line1 = &quot;This here&#x27;s the wattle,\\n&quot;&gt;&gt;&gt; fout.write(line1) 文件名与路径文件都是按照目录（也叫文件夹）来组织存放的。每一个运行着的程序都有一个当前目录，也就是用来处理绝大多数运算和操作的默认目录 12&gt;&gt;&gt; import os&gt;&gt;&gt; cwd = os.getcwd() #获取当前工作目录 模块该模块可以把几乎所有类型的对象翻译成字符串模式，以便存储在数据库中，然后用的时候还可以把字符串再翻译回来 1234&gt;&gt;&gt; import pickle&gt;&gt;&gt; t = [1, 2, 3]&gt;&gt;&gt; pickle.dumps(t)b&#x27;\\x80\\x03]q\\x00(K\\x01K\\x02K\\x03e.&#x27; 编写模块以模块方式导入使用的程序一般用下面这样的惯用形式： 12if __name__ == &#x27;__main__&#x27;: print(linecount(&#x27;wc.py&#x27;)) name 是一个内置变量，当程序开始运行的时候被设置。如果程序是作为脚本来运行的，name 的值就是’main‘；这样的话，if 条件满足，测试代码就会运行而如果该代码被用作模块导入了，if 条件不满足，测试的代码就不会运行了​ 类和对象用户自定义类型12345678910111213class Point:&quot;&quot;&quot;Represents a point in 2-D space.&quot;&quot;&quot;#头部代码的意思是表示新建的类名字叫 Point。然后类的体内有一个文档字符串，解释类的用途。&gt;&gt;&gt; Point&lt;class &#x27;__main__.Point&#x27;&gt;#因为 Point 是在顶层位置定义的，所以全名就是__main__.Point&gt;&gt;&gt; blank = Point()&gt;&gt;&gt; blank&lt;__main__.Point object at 0xb7e9d3ac&gt;#类的对象就像是一个创建对象的工厂。要创建一个 Point，就可以像调用函数一样调用Point。#创建一个新的对象也叫做实例化，这个对象就是类的一个实例 属性123blank.x = 3.0 #用点号可以给实例进行赋值——不管该实例内是否存在该变量名的初始化x = blank.x #赋值print(blank.x) #直接打印 一个类去作为另外一个类的属性，就叫做嵌入​ 对象可以修改1234box.width = box.width + 50box.height = box.height + 100你还可以写专门的函数来修改对象 复制浅复制：复制一个对象中除了内嵌对象之外的所有引用；通过 copy 模块的 copy 函数来实现。深复制：复制一个对象的所有内容，包括内嵌对象，以及内嵌对象中的所有内嵌对象等等；通过 copy 模块的 deepcopy 函数来实现。​ 别名有可能让程序读起来有困难，因为在一个位置做出的修改有可能导致另外一个位置发生不可预知的情况。这样也很难去追踪指向一个对象的所有变量​ copy 模块包含了一个名叫 copy 的函数，可以复制任意对象 1234567&gt;&gt;&gt; p1 = Point()&gt;&gt;&gt; p1.x = 3.0&gt;&gt;&gt; p1.y = 4.0&gt;&gt;&gt; import copy&gt;&gt;&gt; p2 = copy.copy(p1)##p1跟p2数据相同，但不是同一个对象 类和函数纯函数，这种函数并不修改传来做参数的对象，也没有什么效果，比如显示值啊或者让用户输入啊等等，而只是返回一个值而已。​ 原型与规划原型与补丁模式：一种开发模式，先写一个程序的草稿，然后测试，再改正发现的错误，这样逐步演化的开发模式这种模式很有效率，尤其是在你对问题的理解不是很深入的时候。不过渐进式的修改也会产生过分复杂的代码——因为要应对很多特例情况，而且也不太靠靠——因为好确定你是否找到了所有的错误。​ 设计规划开发：这种开发模式要求对所面对问题的高程度的深刻理解，相比渐进式开发和原型增补模式要更具有计划性​ 类和方法对象往往代表着现实世界中的事物，方法则相对应地代表着现实世界中事物之间的相互作用 面向对象的特性Python 是一种面向对象的编程语言，这就意味着它提供了一些支持面向对象编程的功能，有以下这些特点： 程序包含类和方法的定义。 大多数运算都以对象运算的形式来实现。 ​ init 方法在对象被实例化的时候被调用 12345# inside class Time:def __init__(self, hour=0, minute=0, second=0): self.hour = hour self.minute = minute self.second = second str 方法str 是一种特殊的方法，就跟init差不多，str 方法是接收一个对象，返回一个代表该对象的字符串 123# inside class Time:def __str__(self): return &#x27;%.2d:%.2d:%.2d&#x27; % (self.hour, self.minute, self.second) 写一个新的类的时候，总要先写出来 init 方法，这样有利于简化对象的初始化，还要写个 str 方法，这个方法在调试的时候很有用​ 运算符重载运算符重载：像+加号这样的运算符，在处理用户自定义类型的时候改变为相应的运算​ 接口和实现面向对象编程设计的目的之一就是让软件更容易维护，这就意味着当系统中其他部分发生改变的时候依然能让程序运行，然后可以修改程序去符合新的需求。实现这一目标的程序设计原则就是要让接口和实现分开。对于对象来说，这就意着一个类包含的方法要不能被属性表达方式的变化所影响。","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"计算机语言","slug":"计算机语言","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"},{"name":"Python","slug":"Python","permalink":"http://liaozonglong.github.io/tags/Python/"}],"categories":[]},{"title":"MySQL","date":"2022-01-27T01:41:54.000Z","path":"wiki/MySQL/","text":"安装以及配置 ubuntu 下安装sudo apt-get install mysql-client mysql-server 卸载 MySQL查看 mysql：dpkg –list |grep mysql删除 mysql：sudo apt-get remove mysql-*清理残留的数据 ：dpkg -l |grep ^rc|awk ‘{print $2}’ |sudo xargs dpkg -P 配置信息开放远程访问123456789101112131415161718192021222324252627282930313233343536配置/etc/mysql/my.cnf!includedir /etc/mysql/conf.d/!includedir /etc/mysql/mysql.conf.d/[mysqld]# 设置3306端口port=3306# 设置mysql的安装目录# basedir=/usr/local/mysql# 设置mysql数据库的数据的存放目录# datadir= /var/lib/mysql# 允许最大连接数max_connections=200# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统max_connect_errors=10# 服务端使用的字符集默认为UTF8character-set-server=utf8mb4#使用–skip-external-locking MySQL选项以避免外部锁定。该选项默认开启external-locking = FALSE# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB# 默认使用“mysql_native_password”插件认证default_authentication_plugin=mysql_native_password[mysqld_safe]log-error=error.log#pid-file=mysqld.pid# 定义mysql应该支持的sql语法，数据校验sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES[mysql]# 设置mysql客户端默认字符集default-character-set=utf8mb4[client]# 设置mysql客户端连接服务端时默认使用的端口port=3306default-character-set=utf8mb4 [ ](https://www.cnblogs.com/zhongyehai/p/10695659.html) 默认密码所在位置Ubuntu18.04 安装过程中没有设置密码的环节(如果有就下面的不需要做了)sudo cat &#x2F;etc&#x2F;mysql&#x2F;debian.cnf 基础指令service mysql restart #重启 基础语句用户管理 创建\\删除\\查看\\修改use mysql; #进入 mysql 数据库 CREATE USER ‘username‘@’host’ IDENTIFIED BY ‘password’; #创建用户 drop user root; #删除用户 select host, user, authentication_string from mysql.user; #查看用户登陆主机\\用户名\\密码(不同版本 mysql 语句有出入) SET PASSWORD FOR ‘username‘@’host’ &#x3D; PASSWORD(‘newpassword’); #设置与更改用户密码​ flush privileges; #刷新系统权限表 权限管理12345678910用户授权GRANT privileges ON databasename.tablename TO &#x27;username&#x27;@&#x27;host&#x27; #授权语句规则格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by &quot;密码&quot;; 说明:privileges：用户的操作权限，如SELECT，INSERT，UPDATE等，如果要授予所的权限则使用ALLdatabasename：数据库名tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用*表示，如*.*例子：grant all privileges on tornado.* to &#x27;haidon&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;flush privileges; revoke all on tornado.* from “haidon”@”%”; #收回用户权限​ 数据库管理创建\\删除\\查看\\修改create database 数据库名; #创建数据库create database article character set utf8; #创建并设置 utf8 格式 drop database &lt;数据库名&gt;; #删除数据库​ show databses; #查看所有数据库 表管理select * from tb_info; #查看指定的表的现有数据 desc 表名; #查看指定表结构 1234写入数据INSERT INTO table_name ( field1, field2,...fieldN ) VALUES ( value1, value2,...valueN );","tags":[{"name":"服务","slug":"服务","permalink":"http://liaozonglong.github.io/tags/%E6%9C%8D%E5%8A%A1/"},{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"MySQL","slug":"MySQL","permalink":"http://liaozonglong.github.io/tags/MySQL/"},{"name":"数据库","slug":"数据库","permalink":"http://liaozonglong.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"categories":[]},{"title":"python连接MySQL","date":"2022-01-27T01:29:16.000Z","path":"wiki/python连接MySQL/","text":"python 连接 MySQL 123456789101112131415161718192021#!/usr/bin/python# -*- coding: UTF-8 -*-import MySQLdb# 打开数据库连接db = MySQLdb.connect(&quot;localhost&quot;, &quot;testuser&quot;, &quot;test123&quot;, &quot;TESTDB&quot;, charset=&#x27;utf8&#x27; )# 使用cursor()方法获取操作游标cursor = db.cursor()# 使用execute方法执行SQL语句cursor.execute(&quot;SELECT VERSION()&quot;)# 使用 fetchone() 方法获取一条数据data = cursor.fetchone()print &quot;Database version : %s &quot; % data# 关闭数据库连接db.close()","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"计算机语言","slug":"计算机语言","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"},{"name":"数据库","slug":"数据库","permalink":"http://liaozonglong.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Python","slug":"Python","permalink":"http://liaozonglong.github.io/tags/Python/"}],"categories":[]},{"title":"PPTPD","date":"2022-01-26T09:30:18.000Z","path":"wiki/Pptpd/","text":"安装 PPTPsudo apt-get updatesudo apt-get install pptpd配置 PPTPsudo vim &#x2F;etc&#x2F;pptpd.conf——取消掉 connention 行的注释，并根据需要修改内网网关以及地址池sudo vim &#x2F;etc&#x2F;ppp&#x2F;chap-secrets 123client server secret IPaddresses ---标题name pptpd password *用户名 连接方式 密码 指定IP(*即无指定) 设置 DNS 解析sudo vim &#x2F;etc&#x2F;ppp&#x2F;pptpd-options取消掉 ms-dns 行的注释，dns 修改成 8.8.8.8 8.8.4.4开启转发功能（必须，否则无法连接外网）sudo vim &#x2F;etc&#x2F;sysctl.conf————取消掉【net.ipv4.ip_forward&#x3D;1】的注释更新配置sudo sysctl -p开启 gre 协议并打开服务器 47,1723 号端口sudo iptables -A INPUT -p gre -j ACCEPTsudo iptables -A INPUT -p tcp –dport 1723 -j ACCEPTsudo iptables -A INPUT -p tcp –dport 47 -j ACCEPT开启 NAT 转发sudo iptables -t nat -A POSTROUTING -s 192.168.88.1&#x2F;24 -o eno1 -j MASQUERADEiptables 永久生效sudo iptables-save重启服务生效service pptpd restart","tags":[{"name":"服务","slug":"服务","permalink":"http://liaozonglong.github.io/tags/%E6%9C%8D%E5%8A%A1/"},{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"Pptpd","slug":"Pptpd","permalink":"http://liaozonglong.github.io/tags/Pptpd/"}],"categories":[]},{"title":"Python目录结构","date":"2022-01-25T07:20:41.000Z","path":"wiki/Python目录结构/","text":"&#x2F;–docs————说明文档–db————数据库相关–projectname————源代码—-pycache————标注该目录为模块–tests————测试文件目录–main.py————主程序入口–README.md————项目版本说明文件–readme.txt————项目说明文件–requirements.txt——依赖包记录 1pip freeze &gt; requirements.txt #生成requirements.txt文件 –setup——脚本安装–test_main.py——测试程序","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"计算机语言","slug":"计算机语言","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"},{"name":"Python目录结构","slug":"Python目录结构","permalink":"http://liaozonglong.github.io/tags/Python%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"},{"name":"Python","slug":"Python","permalink":"http://liaozonglong.github.io/tags/Python/"}],"categories":[]},{"title":"控制面板","date":"2022-01-21T02:45:34.000Z","path":"wiki/控制面板/","text":"工作网络 家庭网络 公共网络 家庭网络：充分信任的网络——“网络发现”开启、相互”权限”较高 工作网络：”网络发现”开启、允许共享文件与打印机等 公共网络：不信任网络——大部分设置都将关闭 国内时间服务器ntp1.aliyun.comntp2.aliyun.comntp3.aliyun.comntp4.aliyun.comntp5.aliyun.comntp6.aliyun.comntp7.aliyun.com 1","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"系统","slug":"系统","permalink":"http://liaozonglong.github.io/tags/%E7%B3%BB%E7%BB%9F/"},{"name":"Windows","slug":"Windows","permalink":"http://liaozonglong.github.io/tags/Windows/"},{"name":"系统设置","slug":"系统设置","permalink":"http://liaozonglong.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE/"}],"categories":[]},{"title":"Virtualbox虚拟机里运行Tails Linux","date":"2022-01-12T01:41:25.000Z","path":"wiki/Virtualbox虚拟机里运行Tails Linux/","text":"下载虚拟机版本，否则 img 镜像无法使用 选择虚拟机为 Linux，版本选择 32 位 Linux，因为 64 位的 Tails 不能使用 virtualbox 的增强功能。 ​ 不添加硬盘，因为 tails 不需要 1 ​","tags":[{"name":"虚拟机","slug":"虚拟机","permalink":"http://liaozonglong.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"}],"categories":[]},{"title":"行_如何阅读一本书","date":"2022-01-10T04:00:00.000Z","path":"wiki/行_如何阅读一本书/","text":"基础阅读 阅读一些简单的读物 快速建立字汇的能力——通过上下文等线索 精进前面的能力 检视阅读 有系统的略读或粗读 看书名 看目录页 看书中索引 看书衣 依据前面建立的对书的认识，寻找看起来与主题相关的阅读 随机翻阅，一两段\\几页(不要多)——寻找主要论点——不要忽略最后两三页 粗浅的阅读 1 阅读的速度 用手作为指针，一行行移动下去。然后不断加速 检视阅读笔记（结构笔记） 这是什么样的一本书？ 整本书在谈的是什么？ 作者是借着怎样的整体架构，来发展他的观点或陈述他对这个主题的理解？ 分析阅读 分析阅读的第一阶段：找出一本书在谈些什么的规则 依照书的种类与主题来分类。 使用最简短的文字说明整本书在谈些什么。 将主要部分按顺序与关联性列举出来。将全书的大纲列举出来，并将各个部分的大纲也列出来。 一套公式 作者将全书分成五个部分 第一部分谈什么 第二部分谈的是别的事 第三部分谈的是什么 第四部分则是另外的观点 第五部分又是另一些事 第一个主要部分又分成三个段落 第一段落为 X 第二段落为 Y 第三段落为 Z 在第一部分的第一阶段，作者有四个重点 第一个重点是 A 第二个重点是 B 第三个重点是 C …… 4. 确定作者想要解决的问题。 1. 理论问题 1. 实用问题 诠释一本书的内容的规则 诠释作者的关键字，与他达成共识。 由最重要的句子中，抓住作者的重要主旨。 知道作者的论述是什么，从内容中找出相关的句子，再重新架构出来。 确定作者已经解决了哪些问题，还有哪些是没解决的。再判断哪些是作者知道他没解决的问题。 像是沟通知识一样地评论一本书的规则 智慧礼节的一般规则 除非你已经完成大纲架构，也能诠释整本书了，否则不要轻易批评。（在你说出：“我读懂了!”之前，不要说你同意、不同意或暂缓评论。） 不要争强好胜，非辩到底不可。 在说出评论之前，你要能证明自己区别得出真正的知识与个人观点的不同。 批评观点的特别标准 证明作者的知识不足。 证明作者的知识错误。 证明作者不合逻辑。 证明作者的分析与理由是不完整的。 注意：关于最后这四点，前三点是表示不同意见的准则，如果你无法提出相关的佐证，就必须同意作者的说法，或至少一部分说法。你只能因为最后一点理由，对这本书暂缓评论。 主题阅读 第一阶段：收集书籍 观察研究范围：主题阅读的准备阶段 针对你要研究的主题，设计一份实验性的书目 浏览你这份书目上的所有书，确定哪些与你的主题相关，并就你的主题建立起清晰的概念 第二阶段：阅读所有第一阶段收集的书籍 浏览在第一阶段被认定与你主题相关的书，找出最相关的章节 根据主题创造出一套中立的词汇，带引作者达成共识 建立一个中立的主旨，列出一连串的问题 界定主要及次要的议题 分析这些讨论 自我要求 书的金字塔 第一类型：百分之九十九得书籍都对你得阅读技巧毫无帮助 第二类型：可以让你学习得书。当你获取主要概念了，你就不再需要再读一遍了，但你可能要常常翻阅，找出一些特定得重点 你怎么知道不用再读某一本书了呢？当你的心智反应已经与书中得经验合而为一 第三类型：无论你如何读，也不可能尽其究竟。 如何分辨？当你把书放回书架上时，你心中会有点疑惑，好像有什么还没弄清楚得事伟大的书可以适应不同层次得需求。 辅助阅读 相关经验 其他的书 导论与摘要 工具书 外在阅读的规则：除非你看完了一本书，否则不要看某个人的导读 如何阅读实用书任何书里包含了规则——原理、准则或任何一种一般的指导——你都要认定是一本实用性的书。但是一本实用性的书所包含的不只是规则而已。它可能会说明规则底下的原理，使之浅显易懂。 两种实用书 谈论关于某件事如何行动的书 主要谈的是规则背后的原理，主要解决的问题终究是实用的问题——行动的问题 主要获取对象：共识、主旨、论述 ​ ​","tags":[{"name":"如何阅读一本书","slug":"如何阅读一本书","permalink":"http://liaozonglong.github.io/tags/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/"},{"name":"方法论","slug":"方法论","permalink":"http://liaozonglong.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"categories":[]},{"title":"如何阅读一本书","date":"2022-01-10T04:00:00.000Z","path":"wiki/知_如何阅读一本书/","text":"序言 说明社会对于阅读书籍的状态。 介绍阅读的四种层次： 基础阅读、分析阅读、主题阅读 第一篇：阅读的层次test 第一章 阅读的活力与艺术此书的主要目的是为了将读书当作是增加理解能力的人而写。知识是理解力的前提但不等于理解力。太多的资讯就如同太少的资讯一样，都是一种对理解力的阻碍。long：其实也跟利弗莫尔的开头一样。核心就是为愿意努力的人而写 主动的阅读 以下阅读技巧适用于所有读物上 第一提醒 阅读可以是一件多少主动的事 第二指出 阅读越主动，效果越好听众或读者的“ 接收”，应该像是棒球赛中的捕手才对。 阅读的目标 你对一本书的内容的了解程度 你很明白一本书 这本书中的讯息只是将你还没读这本书之前，你们便共同了解的东西传达出来而已 2. 你并不完全了解这本书。 1. 你对这本书的了解程度，刚好让你明白其实你并不了解这本书 long：这个本身就要具备一定的能力，才能认识到自己的局限 1. 以下条件不是真正地在阅读 1. 把书给别人，让他解释 1. 决定不在为这本书伤脑筋，认为理解的已经够多了 2. 只有一种真正的阅读 不借助外力，凭内心的力量，玩味眼前的字句，从模糊到清晰作者：这个过程就是由许多不同活动所组成的阅读的艺术long：这一段跟作者第一个问题有关，也是联系后面的主要提要 2. 阅读的两种意义 1. 阅读报纸、杂志等一下子便能融会贯通的东西。 这样的读物能增加我们的咨询、不能增加我们的理解 2. 试着读一种他并不怎么了解的东西 1. 这个东西的水平要比阅读的人高一截 这种“学习”是指理解更多的事情，而不是知道更多信息 2. 从阅读信息中出发，但寻找其中的更加关键的信息。 这种阅读咨询的阅读，也事进行第二种增加理解理解力的阅读。作者：主要就是，从读物中超越原先的理解事实上，任何一本书能增进理解或增加资讯时，也就同时有了消遣的效果。就像一本能够增进我们理解力的书，也可以纯粹只读其中所包含的资讯一样。(这个情况并不是倒过来也成立：并不是每一种拿来消遣的书，都能当作增进我们的理解力来读。) 我们也绝不是在鼓励你绝不要阅读任何消遣的书。重点在于，如果你想要读一本有助于增进理解力的好书，那我们是可以帮得上忙的。因此，如果增进理解力是你的目标，我们的主题就是阅读好书的艺术。long：其实作者是做了一个关于好书的前提定义的，也就是说，这些阅读技巧虽然哪里都能用，但最好只用在好书上 阅读就是学习 如果你运用的只是你的记忆力，其实你除了那些讯息之外一无所获。你并没有被启发。要能被启发，除了知道作者所说的话之外,还要明白他的意思，懂得他为什么会这么说。 指导型学习 而被引导的学习就是要旁人的帮助。我们可以称指导 型的学习是辅助型的自我发现学习 自我发现型学习 自我发现的学习方式就是没有老师指导的方式思考只是主动阅读的一部分。一个人还必须运用他的感觉与想象力 两者差异 不论是哪一种方式，只有真正学习到的人才是主动的学习者。因此，如果说自我发现的学习是主动的，指导性的学习是被动的，很可能会造成谬误。其实，任何学习都不该没有活力，就像任何阅都不应该死气沉沉相对于主动的阅读——追求理解力的阅读——来说，一个人在被指导阅读或阅读资讯或消遣时，确实可能思考得较少 一些。出席的老师与缺席的老师。问一本书问题，你能做的只有自己找出答案。对于问题的回答，要懂得如何让自己变成出席的老师，让自己教导我们。除非我们能理解，否则我们什么都不会 阅读的艺术 阅读的艺术包括了所有非辅助型自我发现学习的技巧:敏锐的观察,灵敏可靠的记忆,想象的空间,再者当然就是训练有素的分析、和省思能力 作者的问题： 主动的阅读包括哪些条件？ 思考只是主动阅读的一部分。一个人还必须运用他的感觉与想象力。一个人必须观察，记忆，在看不到的地方运用想象力。 思考 感觉 想象力 作者的定义: 阅读的艺术： 这样我们就可以粗略地为所谓的阅读艺术下个定义:这是一个凭借着头脑运作，除了玩味读物中的些字句之外,不假任何外助，以一己之力来提升自我的过程。你的头脑会从粗浅的了解推进到深入的理解。 简单地说，阅读的艺术包括了所有非辅助型自我发现学习的技巧：敏锐的观察、灵敏可靠的记忆、想象的空间，再者当然就是训练有素的分析、省思能力 总结：​ ​ 第二章 阅读的层次一般来说，阅读的规则是：努力越多，效果越好阅读，就像是非辅助性的自我发现学习，是跟着一位缺席的老师在学习。只有当我们知道如何去读时，我们才可能真正读懂 四种层次 一共有四种层次的阅读。且高层次也包含低层次 第一层：基础阅读 在这个层次的阅读中，要问读者的问题是:“这个句子在说什么？——即认字识字 第二层：检视阅读： 特点 强调时间——在一定时间之内，抓出一本书的重点 2. 你要回答的问题 这是哪一类书——小说、历史还是科学论文？ 第三层：分析阅读： 全盘的阅读、完整的阅读。如果说检视阅读是在有限的时间内，最好也最完整的阅读，那么分析阅读就是在无限的时间里，最好也最完整的阅读。在这个层次的阅读中，读者会抓住一本书，一直要读到这本书成为他自己为止分析阅读就是要咀嚼与消化一本书 第四层：主题阅读 主题阅读时，阅读则会读很多书，而不是一本书，并列举这些书之间相关支出，提出一个所有的书都谈到的主题主题阅读可能是所有阅读活动中最有收获的 第三章 阅读的第一个层次：基础阅读 三个历史趋势 全民教育 阅读教育本身 ABC 教学法 发音发——认字不是由字母来认，而是由发音来辨识 视觉发——先看整个句子的含义，才学习单字 对教育系统的批评 学习阅读的四个阶段 第一阶段：阅读准备阶段——从出生，直到六七岁为止。即生理方面的准备 第二阶段：阅读一些简单的读物 第三阶段：快速建立字汇的能力——通过上下文的线索，“揭发”不熟悉的字眼 第四阶段：精炼与增进前面所学的技巧——最重要的，一个人开始消化他的阅读经验——从一本书所提出的观点转变成另一个观点，对不同作者的观点进行比较 更高层次的阅读与高等教育 个人文素养优良的高中,就算什么也没做，也该培养出能达到分析阅读的读者。个优秀的大学，就算什么也没贡献，也该培育出能进行题阅读的读者。大学的文凭应该代表着一般大学毕业生的阅读水平，不但能够阅读任何一种普通的资料，还能针对任何一种主题做个人的研究（这就是在所有阅读中，主题阅读能让你做到的事）。然而，通常大学生要在毕业以后，再读三四年的时间才能达到这样的程度，并且还不见得一定达到。 作者的定义： 矫正阅读：矫正阅读的指导并不算指导。他做的只是把学生带到一个他在小学毕业就该具备的阅读能力程度——例如：有效阅读法、竞读之类的课程 作者的理念： 阅读与民主教育的理念： 我们应该警觉,当务之急是必须从最低层次的、最小公倍数的阅读教起甚至，此刻我们也不想提是否需要另一种教育方式了。我们的历史一直强调，无限制的受教育机会是一个社会能提供给人民最有价值的服务或说得正确一点，只有当一个人的自我期许，能力与需要受限制时，教育机会才会受到限制。我们还没有办法提供这种机会之前，不表示我们就有理由要放弃尝试。但是我们包括学生、老师与门外汉等也要明白：就算我们完成了眼前的任务，仍然还没有完成整个工作。我们一定要比一个人人识字的国家更进一步。我们的国人应该变成一个个真正“有能力”的阅读者，能够真正认知“有能力”这个字眼中的涵义。达不到这样的境界，我们就无法应付未来世界的需求。 第四章 阅读的第二个层次：检视阅读检视阅读，才算真正进入阅读的层次首先要理解的是，检视阅读一共有两种。本来这是一体两面的事，但是对一个刚起步的阅读者来说，最好是将两者区别为不同的步骤与活动。 检视阅读一：有系统的略读或粗读 目标：你的目标是要发现这本书值不值得多花时间仔细阅读。 方法 先看书名页，然后如果有序就先看序。要很快地看过去。特别注意副标题，或其他相关说明或宗旨，或作者写这本书的特殊角度。到此为止，如果你愿意，你可以将这本书归为某个特定的类型。而在那个类型中，已经包含了哪些书 研究目录页，对这本书的基本架构做概括性的理解 如果书中附有索引，也要检阅一下。快速评估这本书涵盖哪些议题的范围。如果你发现列举出哪一条词汇很重要，至少要看一下引用这个词目的某几页内文 如果那是本包着书衣的新书，不妨读一下出版者的介绍 你从对一本书的目录很概略，甚至还有点模糊的印象中，挑几个看来跟主题息息相关的文章来看 最后一步，随机翻阅这本书，一两段，有时连续几页，但不要多。全书过一遍，随时寻早主要论点的信号。最重要的是，不要忽略最后的两三页，就算是后记。 检视阅读二粗浅的阅读 只要找对的方向，不论多难读的书，只要原来就是想写给大众读者看的，那就不该有望之却步的理由我们大多数人所受的教育，都说是要去注意那些我们不懂的地方。我们被教导说，碰到生字，就去查字典。我们被教导说，读到一些不明白的隐喻或论说，就去查百科全书或其他相关资料。我们被教导说，要去查注脚、学者的注释或其他的二手资料以获得帮助。但是如果时候不到就做这些事，却只会妨碍我们的阅读，而非帮助。 阅读的速度 我们大多数人应该有能力比他们现在读的速度还更快一点 1. 逗留与倒退 我们的视线会不自觉地逗留。 1. 矫正 用手作为指针，一行行移动下去。然后不断加速 2. 理解问题 用手作为指针也会加强你的注意力但加强注意力不等于理解——没有经过分析阅读，你就无法理解一本书 作者的问题： 检视阅读中究竟包含了些什么？你要怎样才能培养检视阅读的能力呢？ 什么是对的方向 头一次面对一本难读的书的时候，从头到尾先读完一遍，碰到不懂的地方不要停下来查询或思索 第五章 如何做一个自我要求的读者在阅读的时候想要保持清醒，或昏昏入睡，主要看你的阅读目标是什么。如果你的阅读目标是获得利益不论是心灵或精神上的成长你就得保持清醒。这也意味着在阅读时要尽可能 主动的阅读基础：一个阅读者要提出的四个基本问题 任何一种超越基础阅读的阅读层次，核心就在于你要努力提出问题（然后尽你可能地找出答案） 整体来说，这本书到底在谈什么？ 作者细部说了什么，怎么说的 这本书说的有道理吗？ 这本书跟你什么关系？ 如何让一本书真正属于你自己 笔记 俗话说：“你必须读出言外之意，才会有更大的收获”。我们也鼓励你“写出言外之意” 1. 关于用笔的好处 1. 第一：这会让你保持非常清醒 1. 第二：主动的阅读就是一种思考，而思考倾向于用语言表达出来 1. 第三：将你的感想写下来，能帮助你记住作者的思想 2. 用笔的方法 1. 画底线 1. 底下下再加一道线——二次强调 1. 用其他特殊符号标记——特别强调——慎用，只用来强调书中十来个最重要的声明或段落即可 1. 在空白处编号——作者的论点发展 1. 空白处记下其他页码——说明作者在别处有同样的论点——集中思想 1. 圈字——类似画底线 1. 书页空白处笔记——主要论点发展顺序。书中最后一页可以用来作为个人的索引页，将作者的主要观点依序记下来 3. 三种做笔记的方法 1. 结构笔记 1. 第一：这是一本什么样的书？ 1. 第二：整本书在谈的是什么？ 1. 第三：作者是借着怎样的架构，来发展或陈述他对这个主题的理解？ 2. 概念笔记 这些概念是作者的观点，而当你读得越深越广时，便也会出现你自己的观点了 3. 辩证笔记 培养阅读的习惯 除了不断练习，别无他法我们谈到一个有技术的人时，并不是在说他指导该如何去做那件事，而是他已经养成去做那件事的习惯了 由许多规则中养成一个习惯 应当做的不是将所有动作分开来想，而是连贯在一起。但是为了忘掉这些单一的动作，一开始你必须先分别学会每一个单一的动作等所有的动作不再分离，渐渐融为一体，学习者便能将注意力转移到目标上了，而他也具备了要达成目标的能力了 第二篇：阅读的第三个层次：分析阅读第六章 一本书的分类 书籍分类的重要性 分析阅读的第一个规则可以这么说：规则你一定要知道自己在读的是哪一类书，而且要越早知道越好。最好早在你开始阅读之前就先知道。我们要知道的不只是哪一类的书带给我们指导，还要知道是用什么方法指导。历史类的书与哲学类的书，所提供的知识与启发方式就截然不同。在物理学或伦理学上，处理同一个问题的方法可能也不尽相同。更别提各个不同作者在处理这么多不同问题时所应用的各种不同方法了。 从一本书的书名中你能学到什么 作者不怕麻烦再前言中做说明。通常也试着想让他的书名——至少副标题——是让人能理解的要跟随第一个阅读步骤，你一定要知道这个种类的书到底是在谈些什么？书名不会告诉你，前言等等也不会说明，有时甚至整本书都说不清楚，只有当你自己心中有一个分类的标准，你才能做明智的判断。 实用性 vs 理论性作品 实用性的书 任何一本指南类的书都是实用的。任何一本书告诉你要该做什么，或如何去做，都是实用的书。严格来说，任何一本教我们如何生活，该做什么，不该做什么，同时说明做了会有什么奖赏，不做会有什么惩罚的伦理的书，不论我们是否同意他的结论，都得认定这是一本实用的书。 理论性性的书 有些现代的社会学研究只提供人类的行为观察，而不加以批判，既非伦理也无关实用，那就是理论型的书 1. 理论性作品的分类 1. 历史就是纪事——即发生在一段特定时间的真实事情 1. 科学不会太在意过去——面对的是任何时间、地点都会发生的事情——定律或通则 哲学比较像科学，不像历史，追求的是一般真理，而非发生在过去的特定事件 1. 如何判断哲学与科学的书 有一个判断依据我觉得永远有效，不过你可能要把一本书的内容读了相当多之后才能应用。——如果一本理论的书所强调的内容，超乎你日常、例行、正常的生活的经验，那就是科学的书。否则就是一本哲学的书 区别 质疑某件事的有效性是理论，而质疑任何事的目的，却是实用。Jack 注解：质疑某件事，之所以是理论，即对事物的原理进行质疑，论述。；质疑所有事，之所以是实用，即对事物的原理，以及行为的有效性质疑。 作者追加说明 你会发现有很多读者分不清理论与实用的区别，就像一个小说家搞不清楚什么是虚构故事，什么是社会学。你也会发现有些书，一部分是这类，另一部分是另一类。但是，作为一个读者，具有辨识的优势，通过这个优势，你会更好的处理这个作品 作者的问题： 你可能会问，我们在看论说性的作品时，不就是在接受知识的传递吗？这样怎么会有行动可言？ 答案是，当然有，明智的行动就是来自知识。知识可以用在许多方面，不只是控制自然，发明工具，还可以指导人类的行为等等要让知识变成实用，就要有操作的规则。我们一定要超越“知道这是怎么回事”,进而明白“如果我们想做些什么，应该怎么利用它” 第七章 透视一本书 分析阅读的第一个规则可以这么说：规则你一定要知道自己在读的是哪一类书，而且要越早知道越好。最好早在你开始阅读之前就先知道。分析阅读的第二个规则是：使用一个单一的句子，或最多几句话来叙述整本书的内容第三个规则是：将书中重要的篇章列举出来，说明他们如何按照顺序组成一个整体的架构第四个规则是：找出作者要问的问题。一本书作者在开始写作时，都是有一个或一连串的问题，而这本书的内容就是一个答案，或许多答案 一本好书，就像一栋好房子，每个部分都要很有秩序地排列起来。每个重要部分都要有一定独立性。装饰、架构可能跟其他部分不同。但是却一定要跟其他部分连接起来——这是与功能相关——否则这个部分便无法对整体的智能架构做出任何贡献了。一本好书的架构通常比差一些的书要复杂，但是复杂也事一种单纯，因为他们的各个部分都组织得更完善，也更统一只要大致还可以，只要内容不仅是集合体，还够得上是某种程度的整体组合，那其中就必然有一个架构规划，而你一定要找出来才行 四个规则之后三个： 结构与规划：叙述整本书的大意 通过了解一个故事的大意后，透过整体调性统一的叙述，你就能将不同情节部分放入正确的位置了同样的基本情节，一位作者写出来的是好故事或怀故事，端看他如何装点这幅骨架如果作者提供帮助，不要因为太骄傲而拒绝。但是，也不要完全依赖他在前言中所说的话。你可以借着指引来读，但是永远要记住，最后找出一个架构是读者的责任，就跟当初作者有责任自己设定一个架构一样。只有当你读完整本书时，才能诚实地放下这个责任 驾驭复杂的内容：为一本书拟大纲的技巧 这个规则要求我们将一本书最重要的部分按照秩序与关系，列举出来。与第二个规则的联系是，你不清楚构成部分，就没法理解全书。 1. 一套公式 1. 作者将全书分成五个部分 1. 第一部分谈什么 1. 第二部分谈的是别的事 1. 第三部分谈的是什么 1. 第四部分则是另外的观点 1. 第五部分又是另一些事 2. 第一个主要部分又分成三个段落 1. 第一段落为X 1. 第二段落为Y 1. 第三段落为Z 3. 在第一部分的第一阶段，作者有四个重点 1. 第一个重点是A 1. 第二个重点是B 1. 第三个重点是C ……这个规则并不是要完全写出来，但是需要习惯性的这么做——也就是做到“大概”并且这个规则没有要求你将作者没有放进去的东西加在里面。毕竟一个主题是具有无限延伸的可能的 发现作者的意图 如果你已经在运用规则二与规则三了的话。那么这个规则就不过是换了种说法而已。 第四个规则是：找出作者要问的问题。一本书作者在开始写作时，都是有一个或一连串的问题，而这本书的内容就是一个答案，或许多答案 1. 典型的理论问题 某件事存在吗？是什么样的事？发生的原因是什么？或是在什么样的情况下存在？或为什么会有这件事的存在？这件事的目的是什么？造成的影响是什么？特性及特征是什么？与其他类似事件，或不相同事件的关联是什么？这件事是如何进行的？ 2. 典型的实用问题 有哪些结果可以选择？应该采取什么样的手段才能获得某种结果？要达到某个目的，应该采取哪些行动？以什么顺序？在这些条件下，什么事是对的，或怎样才会更好，而不是更糟？在什么样的条件下，这样做会比那样做好一些？ 分析阅读的第一个阶段 除非你是刚开始练习，否则你不该将“阶段”一词当作一个前后顺序的概念。真正实际的读者应该是一词就完成所有的阶段 总结 依照书本的种类与主题作分类 用最简单的句子说出整本书在谈什么 诏安顺序与关系，列出全书的重要部分。全书的纲要拟出来之后，再将各个部分的纲要也一一列出 找出作者在问的问题，或作者想要解决的问题 第八章 与作者找出共同的词义主旨： 找出关键字，与作者达成共识 除非读者与作者能找出共同的词义，否则想要把知识从一方传递到另一方是不可能的事，因为词义是可供沟通的知识的基本要素 单字 vs 词义 一个作者用一个单字是这个意义，而读者却读成其他的意义，那么这个单字就在他们之间擦身而过你不能在字典中找到词义，虽然那里有制造词义的原料这个阶段主要是要诠释内容与讯息 找出关键字 有一件事你可以确定：并不是作者所使用的每一个字都很重要。更进一步说，作者所使用的字大多数都不重要。只有当他以特殊的方法来运用一些字的时候，那些字对他来说，对身为读者的我们来说，才是重要的。从一个读者的角度来看，最重要的字就是那些让你头疼的字 专门用语及特殊字汇 主要内容——问题 3大多数读者的问题，在于他们根本就不太注意文字，找不出他们的困难点。如果你在读一本有助于增进理解力的书，那你可能无法了解这本书里的每一个字，是很合理的。如果你不进一步试着了解这些字、了解一本书，这本书对你就一点启发也没有了 找出字义 假设你已经找出你需要努力的地方——不认识的字汇。那么还存在两个可能 1. 作者在全书每个地方用这个字眼都只有单一的意义 1. 作者同一个字他会使用两三种意义 主要内容——问题 4-5如果存在多重意义，要看这些意义之间的关系如何 3. 作者几个字可能只有一个意义 一个词义可能与好几个字有关 4. 片语 一个片语，可以像单字一样，形容某件事。也就是——可以代替字义。相较于单字，片语更加清晰，上下文都有关联。能充分表达作者的意思。 问题： 如果我跟作者没达成共同的词义，那么我怎么列的大纲？ 等到自己完全理解作者的意思再列大纲 可供沟通的知识的基本要素有哪些 是否有其他方法，找出更重要的字眼？是否有更积极的方法找出这个关键字？ 第一个：作者开诚布公地强调某些字，而不是其他的字。比如区分字体，加特殊符号第二个：某些主题有一套完整的专门用语，在一本这种主题的书中找出重要的单字，相形之下就很容易了第三个：作者与其他作者争执的某个用语就是重要的字 你到底要怎么样才能掌握这许多不同——字汇——的意思呢？ 你一定要利用上下文自己已经了解的所有字句，来推敲你所不了解的那个字的意义。不论这个方法如何，但却是唯一方法这个过程就像拼图游戏，拼起来的越多，剩下的部分就越少 一个作者使用一个字的多重意义，难道就不是用字用得模糊不清吗？作者使用一个字，特别是非常重要得字时，包含多重意义不是很平常得事吗？ 第一个回答：不是第二个回答：没错，所谓模糊不清，是使用这个字的多重含义时，没有区别或之处其中相关的意义 第九章 判断作者的主旨定义： 提案：一个人提案，就是声明他准备依照某种模式来做事的意图 口语主义：可以说是一种使用文字，没有体会其中的思想传达，或没有注意到其中指的经验的坏习惯 论述：一系列先后有序，其中某些还带有提出例证与理由作用的主旨 主旨： 第六个规则：将一本书中最重要的句子圈出来，找出其中的主旨 第七个规则：从相关文句的关联中，设法架构出一本书的基本论述 作者的主旨，就是作者在表达他对某件事的判断。他断言某件他认为是真的事。这样的提案，是一种知识的声明，而不是意图的声明。作者的意图可能在前言的一开头就告诉我们了。为了判断作者有无遵守意图，我们就一定要找出他的主旨才行 句子与主旨 并不是每个句子都是谈论主旨。有时候，一些句子在表达的是疑问，提出的是问题。主旨则是问题的回答只要文字、句子与段落是不透明的、未解析的，他们就是沟通的障碍，而不是媒介。不同的句子可以表达同一个主旨 找出关键句 相关：问题 1阅读的一部分本质就是被困惑，而且知道自己被困惑。怀疑是智慧的开始，从书本上学习跟从大自然学习是一样的。 找出主旨 复杂的句子通常要说明的不只一个主旨。除非你能分析出所有不同或相关的主旨，否则你还是无法完全诠释一个重要的句子。作者以及不同的作者经常会用不同的字眼诉说同一件事，或是用同样的字眼来说不同的事。一个读者如果不能经由文字语言看出意思与主旨，就永远不能作相关作品的比较 找出论述 作者写作的时候，并没有设定段落的定则可循公式：如果可以，找出书中说明重要论述的段落。 1. 某些论述可能是跨章节呈现的 1. 论述的组成有可能出现证据的说明，证据的收集方法。这一类是离题比较远，可以快速阅读的部分 1. 任何一个好的论述都可以作成简要的说明。 1. 论述的开端两种模式 1. 作者与读者都同意的假设 1. 作者与读者都无法否认的自明之理 要记住，所有的论述都包含了一些声明。其中有些是你为什么接受作者这个论述的理由。如果你先找到结论，就去看看理由是什么。如果你先看到理由，就找找看这些理由带引你到什么样的结论上两种论述的不同之处 1. 一种是以一个或多个特殊的事实证明某种共同的概念——归纳法 1. 另一种是以连串的通则来证明更进一步的共通概念——演绎法 找出解答 最后一个步骤：找出作者在书中想要解决的主要问题 分析阅读的第二个阶段 分析阅读的第二个阶段，或找出一本书到底在说什么的规则（诠释一本书的内容）：（5）诠释作者使用的关键字，与作者达成共识。（6）从最重要的句子中抓出作者的重要主旨。（7）找出作者的论述，重新架构这些论述的前因后果，以明白作者的主张。（8）确定作者已经解决了哪些问题，还有哪些是未解决的。在未解决的问题中，确定哪些是作者认为自己无法解决的问题。 作者的建议： 用你自己的话将其中的主旨写出来。列出号码，找出其间的相关性 第七个规则可以有另一个公式：如果可以，找出书中说明重要论述的段落。但是，如果这个论述并没有这样表达出来，你就要去架构出来。你要从这一段或那一段中挑选句子出来，然后整理出前后顺序的主旨，以及其组成的论述 问题： 在一本书中，最重要的句子在哪里？要如何诠释这些句子，才能找到其中包含的一个或多个主旨？ 对你重要的句子就是一些需要花一点努力来诠释的句子，因为你第一眼看到这些句子时并不能完全理解。你能不能举出一个自己所经历过的主旨所形容的经验，或与主旨有某种相关的经验？你能不能就作者所阐述的特殊情况，说明其中通用于一般道理？用你自己的话来说——是测试你懂不懂一个句子的主旨的最佳方法 第十章 公正地评断一本书主旨：规则十：当你不同意作者的观点时，要例行地表达自己的意见，不要无理地辩驳或争论规则十一：尊重知识与个人观点的不同，在作任何评断之前，都要找出理论基础 阅读一本书，是一种对话。读者应当在作者说完后开口。如果你没有，你就是不了解一个读者的义务——也没有掌握住自己的机会。没我自我期许的读者没法达到这个要求，他们不但没心力去理解一本书，甚至根本将书搁在一边，忘个一干二净 受教是一种美德 一般人通常认为，水准普通的读者是不够格评论一本好书的。的确，如果一本书会启发读者，就表示作者高于读者，除非读者完全了解这本书，否则是不该批评的。但是等他们能这么做时，表示他们已经自我提升到与作者同样的水平了。这时，如果他们不执行他们的特权，对于作者来说就是不公平的最能学习的读者，也就是最能批评的读者 修辞的作用 修辞就是要知道如何去说服对方。——也就是论述中的逻辑，如何使作品更加明确清晰 暂缓评论的重要性 除非你听清楚了，也确定自己了解了，否则就不要回话如果你不能，或者是不能用自己的话重述作者的观点，就时没了解在读一本好的书时，假设“我不懂”是有好处的。通常这个过程是读者的错 避免争强好辩的重要性 当你不同意作者的观点时，要例行地表达自己的意见，不要无理地辩驳或争论“其实这就是我们的责任。为了追求真理，要毁掉一些我们内心最亲近的事物，尤其像我们这样的哲学家或热爱智慧的人更是如此。因为，纵使双方是挚友，我们对真理的皮诚却是超越友谊的。”谈话不是战争，我们要得到的是真理，而不是胜利 化解争议 在争论中，一个人绝不能忘了这是教导别人，也是自己受教的一个机会争议是可争辩之物。除非双方相信透过相关证据的公开，彼此可以借由理性来达成一种理解，进而理解原始的争议议题，否则争议只是毫无意义的事。当读者发现自己的观点与书中不合时就可以运用这个规则了。 第十一章 赞同或反对作者假设你在读一本好书，也就是说这是一本可以理解的书。再假设最后你终于可以说：“我懂了！”再假设你除了看懂了全书之外，还对作者 的意见完全赞同，这样，阅读的工作才算是完成了。当然，如果你对作者的意见不同或暂缓评论。我们还会有进一步的考量。尤其是不同的情况比较常见只有双方都了解对方所说的话的内容事，关于事实或方向的议题——关于一件事是什么或该如何做的议题——才是真实的。在讨论一件事时，双方都要对文字上的应用没有意见之后，次啊能谈到同意或不同意的观点。 分析阅读的三阶段分析阅读的第一阶段：找出一本书在谈些什么的规则（1）依照书的种类与主题来分类。（2）使用最简短的文字说明整本书在谈些什么。（3）将主要部分按顺序与关联性列举出来。将全书的大纲列举出来，并将各个部分的大纲也列出来。（4）确定作者想要解决的问题。二、分析阅读的第二阶段：诠释一本书的内容规则（5）诠释作者的关键字，与他达成共识。（6）由最重要的句子中，抓住作者的重要主旨。（7）知道作者的论述是什么，从内容中找出相关的句子，再重新架构出来。（8）确定作者已经解决了哪些问题，还有哪些是没解决的。再判断哪些是作者知道他没解决的问题。三、分析阅读的第三阶段：像是沟通知识一样地评论一本书的规则A．智慧礼节的一般规则（9）除非你已经完成大纲架构，也能诠释整本书了，否则不要轻易批评。（在你说出：“我读懂了!”之前，不要说你同意、不同意或暂缓评论。）（10）不要争强好胜，非辩到底不可。（11）在说出评论之前，你要能证明自己区别得出真正的知识与个人观点的不同。B．批评观点的特别标准（12）证明作者的知识不足。（13）证明作者的知识错误。（14）证明作者不合逻辑。（15）证明作者的分析与理由是不完整的。注意：关于最后这四点，前三点是表示不同意见的准则，如果你无法提出相关的佐证，就必须同意作者的说法，或至少一部分说法。你只能因为最后一点理由，对这本书暂缓评论。 偏见与公正 理性化的辩论三条件 争辩时要注意你会带进去的情绪。当你情绪很强烈时，你可能会认为自己很有道理 你要把自己的前提或假设摊出来。 派别之争几乎难以避免地回造成一些盲点，应尽力尝试不偏不偏不倚 作者：这些条件只是理想，仅能做到近似而已 可取代三条件的方法 你的知识不足 说一位作者知识不足，就是在说他缺少某些与他想要解决的问题相关的知识。注意，除非这些知识确实相关，否则就没有理由作这样的评论。要支持你的论点，你就要能阐述作者所缺乏的知识，并且知识与问题的关系 2. 你的知识有错误 说一位作者的知识错误，就是说他的理念不正确。 这样的错误可能来自缺乏知识，但也可能远不止 于此。不论是哪一种，他的论点就是与事实相反。作者所说的事实或可能的事实，其实都是错的，而且 是不可能的。这样的作者是在主张他自己其实并没有拥有的知识，当然，除非这样的缺点影响到作者的 结论，否则并没必要指出来。要作这个评论，你必须要能说明事实，或是能采取比作者更有可能性的相反立场来支持你的论点。 3. 你不合逻辑——你的推论无法令人信服 即推论荒谬 1. 缺乏连贯——结论突然就冒出来了 1. 事件变化的前后不一致——两件事时前后矛盾的 4. 你的分析不够完整——作者没有解决他一开始提出来的所有问题 该点不得作为不同意作者的根据。然而，当读者找不出任何理由提出其他批评点而同意一本书的部分理论时，或许会因为该点，关于一本书是不完整的论点，而暂缓评论整本书。读者不得随意使用这些评论，除非他确实能够证明。批评一本书的最后阶段，就是要检视作者论述的完整性 第十二章 辅助阅读定义：特殊经验：特殊经常则需要主动地寻找。例如：实验室一般经验：一般经验适用于任何一个活着的人 主旨：外在阅读的规则：除非你看完了一本书，否则不要看某个人的导读 如果一直只依靠自己来研究，运用自己的头脑来努力，不用其他帮助。这个可能是错的。有时候非要借助外在阅读，才能完全理解一本书在理解与批评一本书时，内在与外在的阅读通常会混在一起。在诠释、评判和作大纲时，我们都难免受到过去的经验的影响。我们可能不会充分对照其他书籍和自己生活里的经验，但是我们免不了会拿我们的经验去与眼前之物进行对比。这也就是俗话说的，我们不应该，也不可能完全孤立地阅读一本书作者：许多读者太依赖外在读物了。我们建议你在寻找外力帮助之前，最好能自己一个人阅读。如果你经常这么作，最后你会发现越来越不需要外界的助力了 外在的辅助来源四个部分——1.相关经验、2.其他的书、3.导论与摘要、4.工具书 相关经验 要怎样才能知道你是否适当地运用自己的经验，来帮助你读懂一本书呢？ 最确定的测验方式就是我们讨论过的方式，跟测验你的理解力一样，问问你自己：在你觉得自己了解了的某一点上，能不能举出一个实例来？ 其他的书 许多伟大的作品不只是互相有关联，而且在写作时还有特定的先后顺序，这都是不该忽略的事。后人的作品总是受到前人的影响。如果你先读前一位的作品，他可能会帮助你了解后人的作品。阅读彼此相关的书籍，依照写作的时间顺序来读，对你了解最后写的作品有很大帮助。这就是外在辅助阅读的基本常识与规则。我们经常会发现，伟大的著作总会有很长的对话部分。伟大的作者也是伟大的读者，想要了解他们，不妨读一读他们在读的书。身为读者，他们也是在与作者对话，就像我们在跟我们所阅读的书进行对话一样。想要加入这样的谈话，我们一定要读与巨著相关的著作，而且要依照写作前后的年表来阅读。有关这些书的对话是有时间顺序的。时间顺序是最基本的，千万不要忽略了。阅读的顺序可以是从现代到过去，也可以从过去到现代。虽然从过去读到现代的作品因为顺其自然而有一定的好处，不过年代的角度也可以倒过来观察。作者：历史和哲学比起科学与小说更需要这样做LZL：用在著作上效果更好 如何运用导读和摘要 要正确地运用这些导读，必须先尽力读完一本书，然后还有些问题在干扰着你时，才能运用这些导读来解答问题摘要绝不能代替真正的阅读，但有时却能告诉你，你想不想或需不需要读这本书 1. 如果你已经读过一本书，这些摘要要能唤醒你的记忆。理想上，在分析阅读时，你就该自己作这样的摘要 1. 在主题阅读时，摘要的用处很大，你可以因此知道某些特定的议题时与你的主题密切相关的 1. 一本书的导读并不一定都是对的 1. 就算对了，可能也不完整 作者：运用这些资料时要特别聪明，也就是要尽量少用 如何运用工具书 在你能运用工具书之前，你自己已经具备了很多知识。工具书对矫正无知是无用的。也不能代替你思考使用工具书之前，你必须有自己的想法：你有什么问题？这个问题要找哪本工具书？在工具书中你只能看到约定俗成的观念，未获得普遍支持的论点不会出现在这种书中 1. 最主要的两种工具书 1. 字典 1. 如何使用字典 字典的基本用途是在你碰到一个专业术语，或者完全不认识的字时，才需要使用上。即便如此，在你第一次阅读一本好书时，也不要着急使用，除非那个字跟主旨有很大的关联字典也可以是一个好玩的读物。在无聊时可以坐下对它进行挑战。毕竟这比其他许多消磨时间的方法高明许多 2. 要点——文字是物质的 1. 文字是物质的——可以写成字，也可以说出声音 1. 文字是语言的一部分 1. 文字是符号的 这些符号是有意义的，不止一种意义，而是很多种意义。这些意义在许多方面是互相 4. 文字是约定俗称的 在中世纪，字典是只属于少数人的读物，主要用作帮助阅读与写作重要的文学作品作者：字典是关于字的一本书，而不是关于事的一本书ME：但是在现在字典也是属于少数人的读物 2. 百科全书 1. 如何使用百科全书 使用百科全书，读者必须要依赖编者的帮忙与建议。任何一本好的百科全书都有引言，指导读者如何有效地运用这本书,，你一定要照着这些指示阅读。一个读者如果不能善用索引，无法让百科全书为己所用，也只能怪他自己了同字典一样，也具备娱乐消遣的价值 2. 要点——百科全书是关于事实的 1. 事实是一种说法 如果你只知道事实本身，表示你了解的并不多 2. 事实是一种“真实”的说法 事实不是观点 3. 事实是真相的反映 3. 事实是某种程序上的约定俗成 作者：事实——在某种程度上——也受到文化的影响作者：虽然不同的字典对文字的说明有同样的看法，但是百科全书对事实的说明却不尽相同。因此，如果你真的对某个主题很感兴趣，而且要靠着百科全书的说明来理解的话,不要只看一本百科全书,要看一种以上的百科全书，选择在不同的时间被写过很多次的解释。 第三篇 阅读不同读物的方法第十三章 如何阅读实用型的书你不可能只用一般规则来读任何一本书。在你运用规则时，你一定要有弹性，并能随时调整。幸运的是，当你开始运用这些规则时，你会慢慢感觉到这些规则是如何在不同的读物上发挥作用在这一篇里，比起阅读的规则，我们会更多有关这几个问题的话题。不过大多数时候，既然我们谈的是阅读不同读物的方法,，我们会强调基本要问的不同问题，以及会获得什么样的不同的回答。ME:那么是不是说，对于不同读物，提出不同的问题才是关键的？ 两种实用性的书 定义：主旨： 任何实用性的书都不能解决该书所关心的实际问题。一本理论性的作品可以解决自己提出的问题 理论性的原则可以归纳出出色的行事规则 实用性作品则没有任何界限，因此我们要进一步分析这类书的特质，并提供一些阅读时的建议指南与方法。读者一定要加上一点自己的想法， 次啊能将实用型的规则运用到实际状况中 规则型的实用书——烹饪、驾驶指南 重点 找寻的主旨当然是那些规则——论述通常没阐述原理的书要有说服力，但是能让规则讲的更清晰 阐述形成规则的原理的实用书——经济、政治著作 重点 主旨是在说某件事的状态，而论述就是强调真的是如此——论述没有明说，但是聪明的读者可以看出背后可以衍生出的规则，以及如何实际应用 这些是你要了解任何一种实用性书籍，或是在作某种批评时的最高原则。在纯理论性的书中，相同或反对的意见是与书中所谈的真理有关。但是现实的真理与理论的真理不同。行为规则要谈得上是真理，有两种情况： 一是真的有效;二是这样做能带引你到正确的结果，达到你的期望。区分不是绝对的。一本书可以同时找到原理与规划除非像上两点一样阅读，否则一本实用的书便没有被实用地阅读​ 第一：作者的目的是什么？第二：他建议用什么方法达到这个目的？ 说服的角色 每一本实用的书中都混杂着雄辩或宣传。因为你对他作品的评断是来自你是否接受他的结论，与他提议的方法。这完全要看作品能不能将你引导到他的结论上另外还有一个重点。因为实用问题的特性，也因为所有实用作品中都混杂了雄辩，作者的“性格”在实用的书中就比理论书中还要来得重要。 赞同实用书之后 第一个问题：这本书是在谈些什么？第二个问题：为了能回答关于这本书的意义或内容，你仍然要能找出作者的共识、主旨与论述第三个问题：内容真实吗？第四个问题：这本书与我何干？赞同一本实用性的书，需要你采取行动。当然，我们知道这种情形并不一定会发生。那就表示虽然这个读者表面上同意了作者的结论，也接受了他提出来的方法，但是实际上并没有同意，,也没有接受。如果他真的都同意也接受了，他没有理由不采取行动。在这个论述中有一个明显的例外。某些作者提出的结论是很通用或一般性的一可供所有的人类使用一另外一些作者的结论却只有少数人能运用。如果结论是经过筛选的，只适用于某个阶层的人，那么读者便要决定他是否属于那个阶层了。如果他属于那个阶层，这些内容就适合他应用，他多少也有义务照作者的建议采取行动。如果他不属于这个阶层，他可能就没有这样的义务。在许多例子中，我们承认这个结论是可取的，方法也是可行的，但我们却懒得去做。让别人去做。当然，这个问题主要不是阅读的，而是心理的问题。心理问题会影响我们阅读实用性的作品。 第十四章 如何阅读想象文学 作者的问题： 在开始之前，我们要先谈一个有点奇怪的矛盾说法。阅读想象文学的问题比阅读论说性作品的问题更为困难。然而，比起阅读科学、哲学、政治、经济与历史，一般人却似乎更广泛地拥有阅读文学的技巧。为什么会出现这种情况呢？ ME：关于为什么一个种类的技巧比另一个种类多可以理解，但是为什么说这是奇怪的矛盾？​ 当我们问到一个人为什么喜欢小说时，他总是表现出瞠目结舌的样子。很明显，他们乐在其中，但是他们说不出来乐在哪里，是哪一部分的内容让他们觉得愉悦。这可能说明了，人们可能是好的小说读者，却不是好的评论者。我们怀疑这只部分的真相。 ​ 人们可能是好的小说读者，却不是好的评论者。我们怀疑这只是部分的真相。评论式的阅读依赖一个人对一本书的全盘了解。这些说不出他们喜欢小说的理由的人，可能只是阅读了表象，而没有深入内里。无论如何，这个矛盾的概念还不止于此。想象文学的主要目的是娱乐，而非教育。以娱乐为主的读物比教育为主的读物容易讨好，但要知道为什么能讨好则比较困难。要分析美丽，比美丽本身困难多了。ME：作者需要解释一下娱乐的定义 1 读想象文学的“不要”述说论述性作品与文学作品的差异最明显的差别：论说性作品要传递的是知识——读者曾经经历过或没有过的知识；想象文学是阐述一个经验本身——只有读者借着阅读才能拥有或分享的经验阅读论说性作品，读者应该像个捕食的小鸟，经常保持警觉，随时准备伸出利爪。在阅诗与小说时，相同的活动却有不同的表现方法。如果容许的话，我们可以说那是有点被动的活动，或者，更恰当的法应该是，那是带着活力的热情。在阅读一个故事时，我们一定要用那样的方式来表现，让故事在我们身上活动。们要让故事贯穿我们，做任何它想要做的事。我们一定得打开心灵，接纳它。说主要是运用想象力。这也是为什么称之为想象文学的原因，这与理性的科学或哲学相反。总之，阅读一部伟大的文学作品的规则则应该以达成某种深沉的经验为目标。这些规则应去除我们体验这种深刻感受的阻碍。​ 否认规则：定义： 1. 真理：一种写实，一种内在可能性或与真实的神似 在想象文学中，不要去找共识、主旨或论述。那是逻辑的，不是诗 的，二者完全不同。不要用适用于传递知识的,与真理一致的标准来批评小说。.​ 阅读想象文学的一般规则我们可以将架构性的规则拟大纲的规则改变为适合阅读小说的规则： 你必须将想象文学作品分类。 抒情诗在叙述故事时，基本上是以表达个人情绪的经验为主。 小说与戏剧的情节比较复杂，牵涉到许多角色，彼此产生互动与反应，以及在过程中情感的变化。 戏剧是以行动与说话来叙述剧情的。剧作家不需要自己现身说法 小说家却经常这么做自己现身说法 你要能抓住整本书的大意。我们知道想象文学就是想要传达一个具体的经验，所以一篇故事的大意总是在情节之中。除非你能简要地说明剧情一不是主旨或论述——否则你还是没有抓住重点。在情节中就有大意。 你不仅要能将整本书简化为大意，还要能发现整本书各个部分是如何架构起来的。一个过程。要了解一个故事的架构，你一定要知道故事是从哪里开始的一一当然，不一定是从第一页开始的一—中间经过些什么事，最后的结局是什么。你要知道带来高潮的各种不同关键是什么，高潮是在哪里、又如何发生的，在这之后的影响又是什么？(我们说“在这之后响”并不是说故事结束之后的事，没有人能知道那些事。我们的意思是在故事中的高潮发生后，带来什么样的后果。) 优秀的论述性作品每一部分都可以单独阅读，其中的每个部分或章节，分开来看或合起来看都有意义。但是一本小说中的一章，剧本中的幕，或是一句诗从整体中抽出来之后，通常就变得毫无意义了。​ 阅读小说的诠释规则 小说的要素是插曲、事件、角色与他们的思想、言语、感觉及行动 一个富有想象力的作者创造出一个世界来，他的角色在其中“生活，行动，有自己的天地。 你对角色都熟悉了，你加入了这个想象的世界，与他们生活在一起，同意这个社会的法律，呼吸同样的空气，品味同样物，在同样的高速公路上旅行。现在，你一定要跟随他们完成这场探险。 我们要提醒你，不要太仔细检验这些类似的规则。这些类似的规则就像是一个隐喻或象征，如果压迫得太用力，可能就会崩溃了。​ 一首抒情诗是在呈现一个具体的经验，就像一个长篇故事一样，想要在读者心中重新塑造这种经验​ 小说的批评规则是什么？在你衷心感激作品试着为你创造的经验之前，不要批评一本想象作品你要客观地指出书中某些事件造成你的反感。你不只要能说明你自己为什么喜欢或不喜欢，还要能表达出这本书中哪些地方是好的，哪些是不好的，并说明理由才行。换句话说，对于小说，我们不该反对或赞成，而是喜欢或不喜欢。 第十五章 阅读故事、戏剧与诗的一些建议上一篇的规则运用具体不同的想象文学作品时，需要作一些调整​ 对于阅读想象文学作品，严格来说，在你完成阅读后，是用不着采取什么行动的。但想象文学可以引导出行动，但却并非必要，因为它们属于纯艺术的领域。在故事结束便就不再与其他的影响相关。 如何阅读故事书快读、全心全意地读。关于名字：在小说中，我们不期望记住每一个名字，许多人不过是背景人物。当我们读完任何一本大部头的书时，我么就知道谁是重要人物，我们也不会忘记。​ 作者的问题：我们所阅读的大部分是故事书，各种各样的故事。不能读书的人，也可以听故事。我们甚至还会自己编故事。对人类而言，小说或虚构的故事似乎是不可或缺的。为什么？其中一个理由是：小说能满足我们潜意识或意识中许多的需要。简单来说-如果要深入讨论这个主题会很复杂，我们喜欢某种人，或讨厌某种人，但却并不很清楚为什么。如果是在小说中，某个人受到奖励或处罚，我们都会有强烈的反应我们会甚至因而对这本书有艺术评价之外的正面或负面的印象。其实，在每个人的面具之下，潜意识里都可能有些虐待狂或被虐狂。这些通常在小说中获得了满足，我们会认同那位征服者或被虐者，或是两者皆可。在这样的状况中，我们只会单地说：我们喜欢“那种小说”——用不着把理由说得太清楚我们并不知道，也不能确定真实的世界是很美好的。但是在伟大的作品中，世界多多少少是美好的。只要有可能，我们希望能经常住在那个故事的世界里。我们可以分享他的洞察力，却不需要分享他的痛苦遭遇。 关于史诗的重点这是人类最难写的一种作品，但这样的作品并不容易阅读。真正的困难似乎在与如何跟随作品逐步提高那种环绕主题的追寻。​ 如何阅读戏剧一个剧本是一篇小说、故事、同时也真的该像读一个故事一样阅读。有一个重要的差异：你在读剧本时，不是在读一个已经完全完成的作品。阅读剧本所缺乏的就是身体语言实际的演出。读者必须自己提供那样的演出​ 关于悲剧的重点大多数剧本是不值得阅读的。我们认为这是因为剧本并不完整。两点对阅读悲剧有帮助的建议： 记住悲剧的精髓在时间，或是缺乏时间 在希腊的戏剧中，所有的悲剧演员都穿一种高出地面几英寸的靴子。叙述旁白不会穿这种靴子。因此，一边是剧的主角，另一边是叙述旁白的演员，两相比较之下，就可以看出极大的差异了。因此你要得，在读旁白的部分时，你要想象这些台词是跟你一般身高的人所说出来的话，而在读悲剧人物台词时，你要想象这是出自一个大人物的口中，他们不只是在形象上，在实际身高上也高出你截。 ​ 如何阅读抒情诗无论我们心中如何激荡着原始的诗情，但是诗仍是由文字组成的，而且 是以条理分明，精巧熟练的方式所组合出来的。​ 规则： 不论你懂不懂，都要一口气读完，不要停 重读一遍——大声读出来 ​ 提出的问题：对抒情诗的问题却通常是修辞的问题，或是句法的问题。你无法与诗人达成共识，但是你能找出关键字。你不会从文法中分辨出来，而是从修辞上找到。为什么诗中有些字会跳出来，凝视着你？是因为节奏造成的？还是押的关系？还是这个字一直在重复出现？如果好几段谈的都是同样的概念，那么彼此之间到底什么关联？你找出的答案能帮助你了解这首诗。​ 第十六章 如何阅读历史书“历史”就跟“诗”一样，含有多重意义。历史的基本是叙事的，所谓的事指的就是“故事”。​ 难以捉摸的史实历史学家所关心的是已经发生的事件，而且绝大部分是发生在很久以前的事件。所有事件的目击者都死了，他们所提的证据也不是在庭上提出的第一一也就是没有受到严格、仔细的规范。没有人能保证他们真的知道他们在说些什么。一件历史的“事实”虽然我们感觉很相信这两个字代表的意义，但却是世上最难以捉摸的。​ 当然某一种历史事件是可以很确认的。即一件全球性的事件。总不太可能全球的日历都不正确​ 历史的理论如果非要分类不可，我们应该把历史，也就是过去的故事——归类为小说，而非科学​ 当然，一个好的历史学家是不会编造过去的。不过，有一点不能忘记的是，历史学家一定要编纂一些事情。他不是在许多件中找出一个共通的模式，就是要套上一个模式。他一定要假设他知道为什么这些历史上的人会做出这些事。他可能有一套理论或哲学，像是上帝掌管人间的事物一样，编纂出适合他理论的历史。​ 因此如果我们真的想要了解一个事件或时期的历史，就很有必要多看一些相关的论著​ 历史中的普遍性“诗比历史更有哲学性。”。一首好诗不只在当时当地是一首好诗，也在任何时间任何地点都是好诗。这样的诗对所有人类来说都有意义与力量。历史不像诗那样有普遍性。历史与事件有关，诗却不必如此。但是一本的历史书仍然是有普遍性的。​ 阅读历史的要点： 对你感兴趣的事件或时期，尽可能阅读一种以上的历史书 阅读历史时，不只要关心在过去某个事件、地点真正发生了什么事，还要读懂在任何时间之中，尤其是现在，人们为什么会有如此这般行动的原因 ​ 阅读历史书要提出的问题尽管历史书更接近小说，而非科学，但仍然能像阅读论说性作品一样来阅读，也应该如此阅读。 每一本历史书都有一个特殊而且有限定范围的主题 这个作者是用什么方法来说这个故事的？时期？世代？年代？ 批评历史有两种方式。我们可以批评——但永远要在我们完全了解书中的意义之后——这本历史书不够逼真。 最后一个问题：这与我何干？ 历史告诉我们人类的过去，也经常引导我们作改变，尝试表现更好的自我。这个问题的答案，就在于实务面，也就是你的政治行为面。​ 如何阅读传记与自传传记是一个真正的故事。这种作品一直以来就是有混合的传统，因此也保持着混杂的特性。​ 要提的问题： 作者的目的是什么？ 他所谓真实包含哪些条件？ ​ 定案本（一个完结篇的传记，绝不能用来写活着的人）——这样的工作通常是由继承人，或是某个重要人物的朋友来负责的。因为他们的写作态度很小心，因此这个人所犯的错，或是达到的成就都会经过润饰。有时候这也会是好的作品，因为作者的优势–其他作者则不见得一能看到所有相关人士所掌控的资料。​ 授权本传记——通常在告诉我们有关当时的时代背景，人们的生活习惯与态度，以及当大家接受的行为模式——关于不可接受的行为也同时作了点暗示及推论。授权本的传记（几乎所有活着的人的传记属于这一种）还有很多要探索的。​ 一般式传记——介于定案本与授权本之间的传记​ 教诲式传记——含有道德目的的​ 这本书与我何干？传记，就跟历史一样，可能会导引出某个实际的、良心的行动。传记是有启发性的。那是生命的故事，通常是成功者一的故事中可以当作我们生活的指引。​ 如何阅读关于当前的事件分析阅读并不是永远都有必要的。我们所阅读的许多东西都用不上分析阅读的努力跟技巧。​ 在阅读当前事件的报导时，要知道是谁在写这篇报导。这里所说的并不是要认识那位记者，而是要知道他写作的心态是什么。滤镜式的记者有许多种类型，要解记者心中戴着什么样的过滤器，我们一定要提出一连串的问题。这一连串的问题与任何一种导现状的作品都有关。这些问题是： 这个作者想要证明什么？ 他想要说服谁？——一般人？知道内情的人？会做出反应的人？ 他具有的特殊知识是什么？ 这里所说的“知识”含义很广，说成“观念”或“偏见”可能还更适合一些。许多作者只是为了同意他看法的读者而写书 他使用的特殊语言是什么？ 他真的知道自己在说些什么吗？ 就阅读这类书而言，整理一堆“规则”还比不上归纳为一句警告。“读者要擦亮眼睛！”​ 关于文摘的注意事项我们阅读报纸、杂志，甚至广告，主要都是为了获得资讯。这些资料的量太大了，今天已没有人有时间去阅读所有的资讯，顶多阅读一小部分而已。在这类阅读领域中，大众的需激发了许多优秀的新事业的出现。譬如像《时代》（Time）或《新闻周刊》(Newsweek)，这种闻杂志，对大多数人来说就有难以言喻的功能，因为它们能代替我们阅读新闻，还浓缩成包含最本要素的资讯。这些杂志新闻写作者基本上都是读者。他们阅读新闻的方法，则已经远远超越般读者的能力。​ 一般作品，浓缩是可行的，而且通常要比原著还好​ 如果一千页的作品摘成九百页，这样的问题不大。如果一千页的文字浓缩成十页或甚至一页。内容被浓缩越多，我们对浓缩者的特质就更要有所了解。​ 第十七章 如何阅读科学与数学我们只限定自己讨论两种形式的书：一种是在我们传统中，伟大的科学与数学的经典之作。另一种则是现代科普著作。原因有两个，第一个很简单，我们没有资格这么做。第二个则是：直到大约 19 世纪末，主要的科学著作都是给门外汉写的。不过大多数现代科学著作并不关心门外汉读者的想法，其至也不想尝试让这样的读者理解——现在所有书籍都呈现这种模式​ 一个一般读者该怎么办？必须退一步，也就是阅读流行的科普书。最重要的还是在阅读好书时达到充分的理解​ 了解科学这一门行业你阅读科学经典著作并不是为了要成为现代专业领域的专家。相反地，你阅读这些书只是为了了解科学的历史与哲学。事实上，这也是一个门外汉对科学应有的责任。只有当你注意到伟大的科学家想要解决的是什么问题时注意到问题的本身及问题的背景-你的责任才算结束重要的是，那是与教育的根本相关的脑力活动，也是从苏格拉底到我们以来，一直被认为是中心的目标，也就是透过怀疑的训练，而释放出一个自由开放的心灵。​ 阅读科学经典名著的建议在科学作品中，主要的词汇通常都是一些不常见的或科技的用语。这些用语很容易找出来，你也可以经由这些用语找到主旨。主旨通常都是很一般性的。科学不是编年史，科学家跟历史学家刚好相反，他们要摆脱时间与地点的限制。他要说的是一般的现象，事物变化的一般规则​ 科学基本上是归纳法，基本论述也就是经由研究查证，建立出来的一个通则。另外一种就是运用演绎法来推论。难点一：为了了解科学中归纳法的论点，你就必须了解科学家引以为理论基础的证据你用不着读完所有的细节才能获得启发。——关于书中的基本构思​ 面对数学的问题符号盲：无法放下对实体的依赖，转而理解在控制之下的符号转换​ 数学其实是一种语言，我们可以像学习自己的语言一样学习他。在学习自己的语言时，我们要学两次：说话、书写。而数学是一种完全的书写语言​ 精确性、逻辑性​ 掌握科学作品中的数学问题 你至少可以把一些比你想象的基础程度的数学读得更明白 如果你要读一本书是为了理解数学本身，那么这会比阅读任何其他的书还需要在书页空白处写些笔记。如果只想读一本有数学在内的科学书，跳着略读反而是比较聪明的 ​ 只要你记住，你的责任不是成为这个主题的专家，而是要去了解相关的问题，在阅读时就会轻松许多​ 关于科普书的重点如果你已经具备了一些阅读科学的经典名作的能力，那么这类书籍对你来说就毫无难度了​ 但是这类书籍需要更多专注力，而且还要看作者是否客观。因为这类书籍没有报告、图标、方程式，而且可能信息量密集，你要抓住主旨跟论述​ 第十八章 如何阅读哲学书哲学来自怀疑孩子是天生的发问者。并不是他的问题很多，而是那些问题的特质，使他与成人有所区别。成年对好奇心的性质有了转换。他们想要知道事情是否如此，而非为什么如此。跟小孩的好奇心相比，发展出不断追根究底的心态，提出真正有深度的问题，这是另一回事​ 哲学家提出的问题如果思辨或理论型的哲学主要在探讨存在的问题，那就属于形上学。如果问题与变化有关——关于特质与种类的变，变化的条件与原因——就是属于自然哲学如果主要探讨的是知识的问题一一关于我们知，人类知识的起因、范围与限制，确定与不确定的问题——那就属于认识论的部分，也称作知识论。理论与规范哲学的区分而言，如果是关于如何过好生活，个人行为中与恶的标准，这都与伦理学有关，也就是理论哲学的领域如果是关于良好的社会，个人与群之间的行为问题，则是政治学或政治哲学的范畴，也就是规范哲学的领域。​ 现代哲学与传承第一顺位问题：世界上存在及发生了什么事，或人类作该追求的问题第二顺位问题：目前绝大多数哲学家所在的领域。比如：如何用言语表达思想的问题​ 哲学的方法简单来说，哲学就是一种思考，别无他物。回答哲学问题，有严格的检验，以确定答案是否合乎逻辑，但这样检验纯粹是来自一般经验——你身为人就有的经验，而不是哲学家才有的经验。​ 伟大的哲学家——比一般人更深刻地思考这个问题​ 我们还要知道有些问题，并非全部都是真正的哲学问题。例如：古代哲学家经常会问天体与地体​ 整体来说，缺乏科学知识的缺点并不影响到哲学经典作品的本身。要回答哲学的问题，除了思考以外，别无他法。这个领域的特质无法通过望远镜来观察​ 哲学的风格当今最普遍是哲学论文或散文 哲学对话——例如：柏拉图的《对话录》 哲学论文或散文 康德的作品是精致的艺术。他的书中会先谈到主要问题，然后条不紊地从方方面面完整地讨论主题，最后，或是顺便再讨论一些特殊的问题。我们可以从他们的作品中看到学论述的开头、发展与结尾。同时，尤其是在亚里士多德的作品中，我们会看到他提出观点与对立场。因此，从某个角度来看，论文的形式与对话的形式差不多。但是在康德或亚里士多德的品中都不再有戏剧化的表现手法，不再像柏拉图是由立场与观点的冲突来表达论说，而是由哲家直接叙述自己的观点。 面对异议 例：明确指陈各种冲突，将不同观点都说明出来，然后再面对所有不同的意见，提出自己的解决方案 哲学系统化 例：斯宾诺的《伦理学》是运用严格的数学方式来表现的——命题、证明、系理、引理、旁注等等 格言形式——《查拉图斯特拉如是说》 这种不如前几种那么重要用格言的形式来解说哲学，最大的好处在于有启发性。这会给读者一个印象，就像在这些简短的句子中还有言外之意，他必须自己运用思考来理解一一他要能够自己找出各种陈述间的关联，以及不同论辩的立足点。同样地，这样的形式也有很大的缺点，因为这样的形式完没法论说。作者就像个撞了就跑的司机，他碰触到一个主题，谈到有关的真理与洞见，然后就到另一个主题上，却并没有为自己所说的话作适当的辩解。因此，格言的形式对喜欢诗词的人说是很有意思的，但对严肃的哲学家来说却是很头痛的，因为他们希望能跟随着作者的思想，对他作出评论。​ 阅读哲学的提示最重要就是发现问题，或找到书中想要回答的问题。哲学问题是要去解说事物的本质，而不像科学作品要的是描述事物的本质他们表达思想的词句通常来自日常用语，只是用在很特殊的意义上。不能将他们的熟悉的字眼看成一般意义的想法​ 假装相信一些其实你并不相信的事，是很好的心智训练​ 厘清你的思绪一本好的哲学理论的书，就像好的科学论文。你不用担心作者的“问题”，不必对他做过多调查。不过，找一些同样谈过这个话题的作品来读，对你来说很有实际帮助​ 你一定要判断什么成立，什么不成立才行。你把一本哲学书读懂了——也读懂了其他讨论相同主题的书——你就有评论的问题了​ 哲学最大特色就是每个人必须为自己回答这些问题。​ 关于神学的重点 自然神学 哲学的一个分支，形而上学的最后一部分。设定某个不因任何事物而发生的原始起因的别称——例如：上帝、奇点。重点在，你要透过不需要外力支援——自然进行的——思考，达成这番认知 教义神学 教义神学的首要原则就是某个宗教的教徒所信奉的经文。如果你没有这样的信仰，也不属于某个教派，想要把教义神学的书读好，你就得拿出读学的精神来读。但是你得永远记住，在有关信仰的文章中，信仰不是一种假设。对有信仰人来说，那是一种确定的知识，而不是一种实验性的观点。​ 如何阅读“经书”这类作品是一本或唯一的一本正确的读物，阅读任何其他的作品都会带来危机，从考试失去高分到灵魂遭谴都有可能。这样的特质是有义务性的。一个忠诚的读者在阅读经书时，有义务要从中找到意义，并能从其他的“事实”中举证其真实性。如果他自己不能这么做，他就有义务去找能做到人。这个人可能是牧师或祭司，或是党派中的上级指导者，或是他的教授。在任何状况中，他都须接受对方提供给他的解决之道。他的阅读基本上是没有自由可言的。相对地，他也会获得阅其他书所没有的一种满足感当作回报。​ 第十九章 如何阅读社会科学什么是社会科学？即使不是全部，但大部分有关法律、教育、公共行政的作品，及一部分商业、社会服务的作品，再加上大量的理学作品，也都适合社会科学的定义。​ 阅读社会科学的容易处这类作品通常取材于读者所熟悉的经验——也通常是叙述式的哲学问题所谈论的也是我们一般知道的事情，但是通常我们不会“投入”哲学问题中​ 阅读社会科学的困难处容易之处也是困难之处——你如果跟作者的意见不合，拒绝倾听的话社会科学中的字眼通常是常用字眼，因此我们知道某个文字在这篇文章内的定义是什么——这类定义一般会出现在书的一开头——在开始阅读前，请不要争辩作者的使用规则​ 太多社会科学的作品混杂了科学、哲学与历史等等​ 阅读社会科学作品我们说过很多次“社会科学作品”，却没说过“社会科学书”。这是因为在阅读社会科学时，关于一个主题通常要读好几本书，而不会只读一本书。​ 第四篇 阅读的最终目标第二十章 阅读的四个层次：主题阅读在作主题阅读时，第一个要求就是知道：对一个特定的问题来说，所牵涉的绝对不是一本书而已。第二个要求则是：要知道总的来说，应该违的是哪此书？第二个要求比第一个要求还难做到。​ 第一个问题：在你决定自己要读写什么之前，你确定要读什么了吗？那跟你的主题有关吗？​ 在主题阅读中，检视阅读所扮演的角色检视阅读是主题阅读时的主要工具或手段了 他会让你自己想要研究的主题有个清晰的概念 他会简化你的书目到一个合理的程度 ​ 主题阅读的五个步骤步骤之间是可以互相取代的 找相关的章节 要记得你最主要的工作不是理解整本书的内容，而是找出这本书对你的主题有什么帮助。 带引作者与你达成共识 你要由你建立起来的共识去带引作者的话，而不是跟着作者的共识。真正的困难在于要强迫作者使用你的语言 厘清问题 可以先列出一些可以把我们的问题说得比较明白的问题，然后让那些作者来回答这些问题有时候我们必须接受作者可能一个问题也回答不了。在这样的状况中，我们必须要将他视为是对这个问题保持沉默，或尚未作出决定。但有的时候我们可以通过间接的观点找到他的答案 界定议题 如果我们确定各个作者会用不同的方式来回答——赞成 or 反对——那么这个议题就被定义出来了要找出：不同意见彼此的关联，根据作者的观点进行分类 分析讨论 我们必须说明这些问题的不同答案，并说明原因，我们也一定要能够从我们检视过的书中找出支持我们把答案如此分类的根据。只有如此，我们才能说我们真正了解了问题​ 客观的必要性主题阅读的目的，并不是给阅读过程中发展出来的问题提供最终答案，也不是给这个计划开始时候的问题提供最终解答。如果这样做，这只是讨论过程中的另一个声音，失去了疏离和客观性。主题阅读的目的是：“辩证的客观”​ 主题阅读就是要能面面俱到，而自己并不预设立场。有一个好方法，就是读者要不断回头参阅诸多作者的原文，重新再阅读相关章节——确保没有曲解原意。​ 如何应用主题工具书《西方世界的经典名著》——包含了三千种话题或主题，就每一个讨论到的主题，你可以通过索引找出目的地——他不能告诉你这套书里有没有包含其他作品里的什么地方可以找到你要的东西，只有一些粗略的指引​ 主题工具能从三方面帮助刚开始做研究的人：启动阅读、建议阅读、指导阅读启动阅读：主题工具书可以帮读者就他们感兴趣的主题，启动他对一些经典著作的阅读——在这些题上，先阅读来自大量不同作者的一些比较短的章节。这可以帮助我们在读完这些经典著作前，先读进去。​ 建议阅读：在使用主题阅读来阅读经典名著时，再加上主题工具书的帮助。我们很可能开始是对某个话题感兴趣，但后面逐渐对其他的话题感兴趣。然后去研究某位作者，探索上下文​ 指导阅读 读者阅读的章节所涉及的主题，能够给他一个诠释这些章节的方向 针对同一个主题，从许多不同的作者与书籍中收集出来的章节，能帮助读者强化对各个章节的诠释能力 如果主题阅读运用在许多不同的主题上，你会发现同一个章节被主题工具书引述在许多不同主题之下的时候。随着读者针对不同的主要对这些章节进行多少不同的诠释，他会发现这些章节含有丰富的意义。这种多重诠释的技巧不只是阅读技巧中的基本练习，同时也会训练我们的头脑面对任何含义丰富的章节时，能习惯地作出适当的调整。 ​ ​ 我们要指出很重要的一点。主题阅读可以说有两种 一种是单独使用的主题阅读，一种是与主题工具一起并用 后一种可以当作是构成前一种阅读计划的分，开始由这里着手，是最聪明的做法。而前一种主题阅读所应用的范围要比后一种广义多。 ​ 构成主题阅读的原则所谓作者本身的词汇是神圣不可侵犯的说法，其实只是再说要将一种说法翻译成另一种说法是非常困难的。这一点我们也同意。但是，困难并非不可能做到​ 主题阅读的精华摘要一是准备阶段，而是主题阅读本身 观察研究范围：主题阅读的准备阶段 针对你要研究的主题，设计一份实验性的书目 浏览你这份书目上的所有书，确定哪些与你的主题相关，并就你的主题建立起清晰的概念 主题阅读：阅读所有第一阶段收集的书籍 浏览在第一阶段被认定与你主题相关的书，找出最相关的章节 根据主题创造出一套中立的词汇，带引作者达成共识 建立一个中立的主旨，列出一连串的问题 界定主要及次要的议题 分析这些讨论 PS:理想上，要一直保持对话式的疏离与客观。每当你要解读某个作者对一个议题的观点时，必须从他自己的文章中引一段话来并列​ 第二十一章 阅读与心智的成长一本好书：一本好书能教你这个世界以及你自己。你不只懂得如何读得更好，还更懂得生命。你变得更有智慧，而不只是更有知识。​ 书的金字塔第一类型：百分之九十九得书籍都对你得阅读技巧毫无帮助第二类型：可以让你学习得书。当你获取主要概念了，你就不再需要再读一遍了，但你可能要常常翻阅，找出一些特定得重点你怎么知道不用再读某一本书了呢？当你的心智反应已经与书中得经验合而为一第三类型：无论你如何读，也不可能尽其究竟。如何分辨？当你把书放回书架上时，你心中会有点疑惑，好像有什么还没弄清楚得事伟大的书可以适应不同层次得需求。 生命与心智的成长如何找出内在的资源，过更美好的人类生活好的阅读，也就是主动的阅读，不只是对阅读本身有用，也不只是对我们的工作或事业有帮助，更能帮助我们的心智保持活力与成长。","tags":[{"name":"如何阅读一本书","slug":"如何阅读一本书","permalink":"http://liaozonglong.github.io/tags/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/"},{"name":"方法论","slug":"方法论","permalink":"http://liaozonglong.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"categories":[]},{"title":"封装系统","date":"2022-01-10T01:28:54.000Z","path":"wiki/封装系统/","text":"定制母盘 （略） 准备系统封装环境 （略） 安装母盘 使用 VM 虚拟机安装母盘系统 在系统引导安装界面按 Ctrl+shift+f3 进入审核模式 启用内置 Administrator 账号 激活系统 安装运行库 系统优化清理 鱼儿系统工具 系统系统 系统清理 免疫流氓软件(暂时略过) Dism++清理 空间回收 软媒 一键清理 系统瘦身 磁盘占用（删除与 WindowsDefender 相关）（暂时略过） 常用软件安装及设置 基础软件安装 激活 office 拷贝维护工具至 C 盘 封装前再次优化清理 鱼儿系统 系统清理 原创工具-&gt;个性设置与应用关联备份还原-&gt;默认应用关联（系统中，封装前) 关闭磁盘索引 软媒 一键清理 系统隐私 Dism 空间回收 备份系统个性设置（PE 中，封装前） 使用 ES5S 进行封装 制作自解压文件(可略过) 制作压缩文件 文件参数： 压缩格式：7z 压缩等级：极限压缩 压缩方法：LZMA 字典大小：64M 单词大小：64 固实数据大小：4GB 加密算法：AES-256 更新方式：添加并替换文件 压缩文件制作成 exe 自解压文件 导入 7z 压缩包 基本设置 解压路径：%HOMEPATH%\\Desktop\\ 文件覆盖模式：跳过已有文件 解压后自删除：关闭 ES5 封装第一阶段设置 参数： 安全更新：不安装 右边勾全部打钩 完成后退出 ES5 封装第二阶段 1. 拷文件至 Sysprep 文件夹内 1. 驱动 1. 自解压程序 1. 激活工具 2. ES5 封装第二阶段设置（PE 中） 1. 优化：全选 1. 部署 1. 部署控制：开 1. 万能驱动：关 1. 一键运行库：关 1. 右侧勾选项 1. 自动删除万能驱动解压的驱动文件：开 1. 自动查找并清理可能存在的“AutoRun”病毒：开 3. 系统 1. 系统还原：关闭 1. 系统休眠：打开 1. 电池方案：平衡 1. 变更用户目录：关 1. 转移虚拟内存：关 1. 左下角勾选项 1. 彻底清理系统中残留的驱动信息（慎用）：关 4. 用户 1. 创建新用户：关 1. 启动 admin 账户：开 1. 避免产生 Admin.xxx 用户目录：开 1. 自动登录：关 5. 网络：全关 5. 任务 部署中 运行 %SystemDrive%\\Sysprep……(驱动文件) 部署中 运行 %SystemDrive%\\Sysprep……(自解压文件) 部署后 运行 %SystemDrive%\\Sysprep…… &#x2F;k19(激活工具-激活 Windows) PS:需要使用静默参数 部署后 运行 %SystemDrive%\\Sysprep…… &#x2F;o(激活工具-激活 office) PS:需要使用静默参数 7. 其他：全关 3. 注入目标系统的RunOnce.reg注册表文件和内容，目的是让系统进入桌面后执行一次指定路径的批处理文件（略） 3. 还原系统个性设置和默认应用关联","tags":[{"name":"系统","slug":"系统","permalink":"http://liaozonglong.github.io/tags/%E7%B3%BB%E7%BB%9F/"},{"name":"封装系统","slug":"封装系统","permalink":"http://liaozonglong.github.io/tags/%E5%B0%81%E8%A3%85%E7%B3%BB%E7%BB%9F/"},{"name":"Windows","slug":"Windows","permalink":"http://liaozonglong.github.io/tags/Windows/"}],"categories":[]},{"title":"散乱","date":"2022-01-08T06:53:36.000Z","path":"wiki/散乱/","text":"DDL（数据定义语言） DDL 用来创建和修改数据库结构例如：CREATE DATABASE；CREATE TABLE 数据的逻辑独立性是指数据与程序的逻辑独立性。 innodb ，是 MySQL 的数据库引擎之一，现为 MySQL 的默认存储引擎 -支持事务处理、支持外键、支持崩溃修复能力和并发控制的存储引擎 MySQL 中设置停止二进制文件的操作 setsql_log_bin&#x3D;0;#设为 0 后，在 Master 数据库上执行的语句都不记录 binlog(二进制日志文件) 数据库对象与数据库三级模式对应关系正确的是 表属于模式、索引属于内模式、视图属于外模式 ​ 模式（Schema） 定义：也称逻辑模式，是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图。理解：① 一个数据库只有一个模式；② 是数据库数据在逻辑级上的视图；③ 数据库模式以某一种数据模型为基础；④ 定义模式时不仅要定义数据的逻辑结构（如数据记录由哪些数据项构成，数据项的名字、类型、取值范围等），而且要定义与数据有关的安全性、完整性要求，定义这些数据之间的联系。 外模式（External Schema） 定义：也称子模式（Subschema）或用户模式，是数据库用户（包括应用程序员和最终用户）能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是与某一应用有关的数据的逻辑表示。理解：① 一个数据库可以有多个外模式；② 外模式就是用户视图；③ 外模式是保证数据安全性的一个有力措施。 内模式（Internal Schema） 定义：也称存储模式（Storage Schema），它是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式（例如，记录的存储方式是顺序存储、按照 B 树结构存储还是按 hash 方法存储；索引按照什么方式组织；数据是否压缩存储，是否加密；数据的存储记录结构有何规定）。理解：① 一个数据库只有一个内模式；② 一个表可能由多个文件组成，如：数据文件、索引文件。它是数据库管理系统(DBMS)对数据库中数据进行有效组织和管理的方法其目的有：② 为了减少数据冗余，实现数据共享；② 为了提高存取效率，改善性能。 DELETE FROM student 删除 student 内的数据，不删除表结构 删除表 DROP TABLE table_name（包括结构） 关系数据库中，主键 为标识表中唯一的实体 ​ 关系型数据库中的一条记录中有若干个属性，若其中某一个属性组(注意是组)能唯一标识一条记录，该属性组就可以成为一个主键比如 :学生表(学号，姓名，性别，班级)其中每个学生的学号是唯一的，学号就是一个主键成绩表中单一一个属性无法唯一标识一条记录，学号和课程号的组合才可以唯一标识一条记录，所以 学号和课程号的属性组是一个主键 成绩表中的学号不是成绩表的主键，但它和学生表中的学号相对应，并且学生表中的学号是学生表的主键，则称成绩表中的学号是学生表的外键 同理 成绩表中的课程号是课程表的外键 定义主键和外键主要是为了维护关系数据库的完整性，总结一下： 1.主键是能确定一条记录的唯一标识，比如，一条记录包括身份正号，姓名，年龄。 身份证号是唯一能确定你这个人的，其他都可能有重复，所以，身份证号是主键。 2.外键用于与另一张表的关联。是能确定另一张表记录的字段，用于保持数据的一致性。 比如，A 表中的一个字段，是 B 表的主键，那他就可以是 A 表的外键。 数据库中缓冲区写入磁盘使用的算法是 LRU LRU 是 Least Recently Used 的缩写，即最近最少使用，是一种常用的页面置换算法，选择最近最久未使用的页面予以淘汰。 系统故障的恢复操作正确的是 正向扫描日志文件，对故障发生前已经提交的事务记入重做队列，故障发生时未完成的事务计入撤销队列 InnoDB 引擎使用哪一种算法管理缓冲池 LRU（最近最少使用） 在 MySQL 数据库中，InnoDB 数据缓冲池用于数据读写描述正确的是 采用 LRU 算法策略 查询优化策略中，正确的策略是 尽可能的早做选择和投影（基本思路） ​ 以下不符合数据类型选择总体原则的是 尽量避免把列设置为 NOT NULL ​ 下列有关中继日志文件介绍错误的是 中继日志文件拥有与二进制日志文件不同的结构 中继日志： 从服务器 I&#x2F;O 线程将主服务器的二进制日志读取过来记录到从服务器本地文件，然后从服务器 SQL 线程会读取 relay-log 日志的内容并应用到从服务器，从而使从服务器和主服务器的数据保持一致 数据库中数据的物理独立性是指 用户的应用程序与存储在磁盘上数据库中的数据是相互独立的 ​ MySQL 可视化管理工具 MySQL GUI Tools 中方便数据库迁移的图形化应用程序是 MySQL Migration Toolkit MySQL Migration Toolkit(数据迁移工具) 显示复制线程状态（分行显示）的命令是（Show slave status\\g ）。 MySQL replication 复制中主机和从机是通过什么进行数据同步的（ Binlog ） Binlog （二进制日志文件） 索引设计属于数据库设计的（物理设计 ）阶段 数据库物理设计指的是设计数据库的物理结构，根据数据库的逻辑结构来选定 RDBMS（如 Oracle、Sybase 等），并设计和实施数据库的存储结构、存取方式等。 对好的加密算法描述不正确的是 对授权用户来说，加密模式应依赖于算法的保密 用于控制用户对数据库表建立或删除索引的权限为 index 权限 INDEX 权限，顾名思义就是在某个表上具有维护索引的权限。 MySQL 中，可以用于备份数据库的命令是 mysqldump mysqldump 备份数据库 关于数据类型的使用建议，以下不正确的是 TIMESTAMP 类型的存储空间少于 DATE 类型 TIMESTAMP（时间戳）DATE（日期） 下列哪个选项可以让从数据库变成其他服务器的主数据库（log_slave_updates） master A ——&gt; slave B ——&gt; slave C log_slave_updates 是将从服务器从主服务器收到的更新记入到从服务器自己的二进制日志文件中。 对于 mysql 级联复制，上游的从服务器不仅仅要开启 log_bin 还要开启 log_slave_updates，否则将导致下游的从服务器无法更新复制。 数据独立性是核心 关于 MySQL 数据库的 MyISAM 存储引擎描述正确的是（B） 不缓存数据文件，只缓存索引文件 MyISAM是MySQL的默认数据库引擎（5.5 版之前），由早期的 ISAM 所改良。虽然性能极佳，但却有一个缺点：不支持事务处理（transaction）。不过，在这几年的发展下，MySQL也导入了InnoDB（另一种数据库引擎），以强化参照完整性与并发违规处理机制，后来就逐渐取代 MyISAM。 以下选项中不属于 MySQL 数据库文件的扩展名的是 idb idb： 图像数据库是指用来存储各种图像或图形信息及有关文字说明资料的—种数据库。主要应用于建筑、设计、广告、产品目录、图片或照片等资料类型的计算机存储与检索。 聚簇索引与非聚簇索引 聚簇索引：将数据存储与索引放到了一块，找到索引也就找到了数据 非聚簇索引：将数据存储于索引分开结构，索引结构的叶子节点指向了数据的对应行，myisam 通过 key_buffer 把索引先缓存到内存中，当需要访问数据时（通过索引访问数据），在内存中直接搜索索引，然后通过索引找到磁盘相应数据，这也就是为什么索引不在 key buffer 命中时，速度慢的原因 MySQL 字符集以及校验规则 字符集(Character set) 是多个字符(英文字符，汉字字符，或者其他国家语言字符)的集合，字符集种类较多，每个字符集包含的字符个数不同。 校对规则 collation 校对 是在字符集内用于字符比较和排序的一套规则，比如有的规则区分大小写，有的则无视。 数据完整性 数据完整性是为了保证插入到数据库中的数据是正确的,防止用户可能的错误输入。数据完整性分为实体完整性、域完整性、参照完整性 B-树 在 B-树中查找给定关键字的方法是，首先把根结点取来，在根结点所包含的关键字 K1,…,Kn 查找给定的关键字（可用顺序查找或二分查找法），若找到等于给定值的关键字，则查找成功；否则，一定可以确定要查找的关键字在 Ki 与 Ki+1 之间，Pi 为指向子树根节点的指针，此时取指针Pi 所指的结点继续查找，直至找到，或指针 Pi 为空时查找失败。 物理备份和逻辑备份 物理备份： 物理备份是磁盘块为基本单位将数据从主机复制到备机。逻辑备份： 逻辑备份是以文件为基本单位将数据从主机复制到备机。 1 1 1 1","tags":[{"name":"数据库","slug":"数据库","permalink":"http://liaozonglong.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"散乱","slug":"散乱","permalink":"http://liaozonglong.github.io/tags/%E6%95%A3%E4%B9%B1/"}],"categories":[]},{"title":"Linux 下建立 Git 与 GitHub 的连接","date":"2022-01-07T01:44:46.000Z","path":"wiki/Linux 下建立 Git 与 GitHub 的连接/","text":"安装 git 配置 Git 用户信息： 12git config --global user.name &quot;woider&quot;git config --global user.email &quot;woider@gmail.com&quot; 生成 SSH KEY 1ssh-keygen -t rsa -C &quot;woider@gmail.com&quot; 查看 SSH KEY 12root@localhost:~# cd /root/.sshroot@localhost:~/.ssh# ls -a 复制 SSH KEY 至 GitHub 打开 id_rsa.pub 文件并复制-&gt; 登录 GitHub-&gt;打开 Personal settings 页面-&gt;选择 SSH and GPG keys 选项-&gt;创建并粘贴进去​ 测试 git 连接 123456ssh -T git@github.com  ✔The authenticity of host &#x27;github.com (20.205.243.166)&#x27; can&#x27;t be established.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yes出现这个提示输入yes 安装 hexo 123sudo npm install hexo-cli -gsudo npm install --save hexo-deployer-gitsudo npm install 安装语雀（可选） 1npm -g install yuque-hexo 克隆或创建项目 12git clone repo #复制远程仓库git init #初始化本地仓库 上传更改 123git add . #增加修改内容git commit -m &quot;&lt;description&gt;&quot; #对提交的说明git push origin master #上传改动","tags":[{"name":"linux","slug":"linux","permalink":"http://liaozonglong.github.io/tags/linux/"},{"name":"github","slug":"github","permalink":"http://liaozonglong.github.io/tags/github/"},{"name":"git","slug":"git","permalink":"http://liaozonglong.github.io/tags/git/"}],"categories":[]},{"title":"VIM","date":"2022-01-06T03:00:36.000Z","path":"wiki/VIM+Markdown/","text":"安装 vim 的插件管理器 vundleVundle 是 Vim 的插件管理器，官方 Github 地址是：Vundle git clone https://github.com/VundleVim/Vundle.vim.git ~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim 编写 vimrc 文件(vundle 配置文件) 路径：~&#x2F;.vimrc (若无，自行创建) 1234567891011121314151617181920212223set nocompatible &quot; be iMproved, requiredfiletype off &quot; required&quot; 启用vundle来管理vim插件set rtp+=~/.vim/bundle/Vundle.vimcall vundle#begin()&quot; 安装插件写在这之后&quot; let Vundle manage Vundle, requiredPlugin &#x27;VundleVim/Vundle.vim&#x27;&quot; 安装插件写在这之前call vundle#end() &quot; requiredfiletype plugin on&quot; required&quot; 常用命令&quot; :PluginList - 查看已经安装的插件&quot; :PluginInstall - 安装插件&quot; :PluginUpdate - 更新插件&quot; :PluginSearch - 搜索插件，例如 :PluginSearch xml就能搜到xml相关的插件&quot; :PluginClean - 删除插件，把安装插件对应行删除，然后执行这个命令即可&quot; h: vundle - 获取帮助 保存退出，使用 sudo vim。再使用“:PluginInstall”安装插件。出现“done”即安装完成，按 q 退出 安装 vim-markdown 插件 123该代码输入至vimrc 文件中的&quot;安装插件写在这之后&quot;和安“装插件写在这之前”之间。并再次运行“:PluginInstall”安装插件Plugin &#x27;godlygeek/tabular&#x27;Plugin &#x27;plasticboy/vim-markdown&#x27; 安装 node.js 123pacman -S yayyay nodejs-lts #选择最新的yay -S npm 实时预览插件:vim-instant-markdown sudo npm -g install instant-markdown-d 添加插件至 vimrc 文件 ，然后保存并安装插件 Plugin ‘suan&#x2F;vim-instant-markdown’ 重启之后，编写 md 文件，即自动跳出浏览器实时预览","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"计算机语言","slug":"计算机语言","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"},{"name":"VIM","slug":"VIM","permalink":"http://liaozonglong.github.io/tags/VIM/"},{"name":"Markdown","slug":"Markdown","permalink":"http://liaozonglong.github.io/tags/Markdown/"}],"categories":[]},{"title":"manjaro","date":"2022-01-06T01:23:28.000Z","path":"wiki/manjaro/","text":"安装后配置： 更换国内源： sudo pacman-mirrors -c China 添加 archlinuxcn 仓库 定义： Arch Linux 中文社区仓库 是由 Arch Linux 中文社区驱动的非官方用户仓库。包含中文用户常用软件、工具、字体&#x2F;美化包等。​ 命令：sudo vi &#x2F;etc&#x2F;pacman.conf 1234在文件下追加[archlinuxcn] SigLevel = Optional TrustedOnly Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch 参考： 更新系统 sudo pacman -Syyu 安装 archlinuxcn-keyring 定义： 导入 GPG key 。如果不导入安装某些软件可能会导致 gpg 签名错误损坏等sudo pacman -S archlinuxcn-keyring 安装中文输入法 安装 fcitx（ 小企鹅输入法 ）框架，以及可视化设置 定义： 一个以 GPL 方式发布的输入法框架， 编写它的目是为桌面环境提供一个灵活的输入方案 12sudo pacman -S fcitx-im #默认全部安装sudo pacman -S fcitx-configtool 安装中文输入法 sudo pacman -S fcitx-googlepinyinPS: 搜狗拼音在在最新的 manjaro 版本中有很多问题经常崩溃不建议使用，这里推荐使用 fcitx-googlepinyin,你也可以选择 fcitx-sunpinyin​ 新建~&#x2F;.xprofile 文件，加入如下内容 – 为 fcitx 添加 X 会话的环境变量 123export GTK_IM_MODULE=fcitxexport QT_IM_MODULE=fcitxexport XMODIFIERS=&quot;@im=fcitx&quot; 更换中文文件夹为英文文件夹 LC*ALL&#x3D;C xdg-user-dirs-update –force参考：XDG user directories (简体中文)","tags":[{"name":"manjaro","slug":"manjaro","permalink":"http://liaozonglong.github.io/tags/manjaro/"},{"name":"系统","slug":"系统","permalink":"http://liaozonglong.github.io/tags/%E7%B3%BB%E7%BB%9F/"}],"categories":[]},{"title":"VM安装Manjaro","date":"2021-12-30T09:02:18.000Z","path":"wiki/VM安装Manjaro/","text":"​ 虚拟机的版本选其它 Linux5.x 或更高版本内核​","tags":[{"name":"Manjaro","slug":"Manjaro","permalink":"http://liaozonglong.github.io/tags/Manjaro/"},{"name":"VM","slug":"VM","permalink":"http://liaozonglong.github.io/tags/VM/"}],"categories":[]},{"title":"盘点枪软件安装","date":"2021-12-28T02:52:32.000Z","path":"wiki/盘点枪软件安装/","text":"2021726 直接拷贝软件1、把“2021726 直接拷贝软件”拷贝到 SD 卡里面，（如果 SD 卡里面有其他文件先删除再拷）。2、在“2021726 直接拷贝软件”里面找到“其他”文件夹中的“SPSystemSet_new”点击运行程序。3、在”SPSystemSet_new”的程序点击”发布自启动程序“功能，然后选择”易盘点“文件夹里面中的”check”程序发布。4、点击”易盘点“文件夹里面中的”check”程序，修改时间为当天日期。这样就完成了。","tags":[{"name":"盘点枪","slug":"盘点枪","permalink":"http://liaozonglong.github.io/tags/%E7%9B%98%E7%82%B9%E6%9E%AA/"},{"name":"软件安装","slug":"软件安装","permalink":"http://liaozonglong.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"}],"categories":[]},{"title":"markdown","date":"2021-12-23T16:00:00.000Z","path":"wiki/markdown/","text":"markdown 语法参考：Markdown 教程Markdown 基本语法 使用 Atom 预览 markdown windows 下使用快捷键 ctrl + shift + p，打开命令输入框； 输入 markdown preview toggle ​ 参考：使用 Atom 愉快的编写 Markdown","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"计算机语言","slug":"计算机语言","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"},{"name":"markdown","slug":"markdown","permalink":"http://liaozonglong.github.io/tags/markdown/"}],"categories":[]},{"title":"群辉网盘同步","date":"2021-12-16T01:15:47.000Z","path":"wiki/群辉网盘同步/","text":"安装套件“Cloud Sync” 百度网盘的实现 选择目标网盘 根据需要进行填写 本地路径指的是群晖的本地文件夹，选择需要同步的文件夹，这里一次只能设置一个文件夹，如果需要设置多个，重复多次绑定操作即可！ 参考： 群晖 NAS 如何同步百度云网盘 ​ 阿里网盘的实现：前期准备 安装 Docker 套件，正常运行后打开 Docker，在注册表搜索 zx5253，找到 zx5253&#x2F;webdav-aliyundriver 这个项目双击开始下载。 登录成功后，按 F12 打开开发者工具，点击 Application，点击 Local Storage，点击 Local Storage 下的 https://www.aliyundrive.com/，点击右边的 token，此时可以看到里面的数据，其中就有 refresh_token，把其值复制出来即可。（格式为小写字母和数字，不要复制双引号。例子：ca6bf2175d73as2188efg81f87e55f11） 打开群晖 file station ，找到 docker 文件夹（文件夹随意，放 docker 里面好管理），创建一个文件夹，名称随意。 打开 docker，选择注册表，搜索 webdav-aliyundriver 容器设置 双击下载好的镜像运行，并进行设置，容器名称随意修改，然后选高级设置 高级设置内，勾选启动自动重新启动，然后进入存储空间设置； 选择存储空间，添加文件夹，左边为宿主机路径，点击找到我们刚刚创建的文件夹即可；右边是容器内路径，填入&#x2F;etc&#x2F;aliyun-driver&#x2F; 然后设置端口； 进入端口设置，本地端口随意输入，默认为 8080，容器端口不要修改，使用默认值 8080；进入环境设置 环境设置，然后添加如下内容 123456789101112131415# 修改时区为上海 ↓可变：TZ 值：Asia/Shanghai# 添加token ↓可变：ALIYUNDRIVE_REFRESH_TOKEN 值：refresh_token 填入第1步查询到的refresh_token的值# 设置webdav密码 ↓可变：ALIYUNDRIVE_AUTH_PASSWORD 值：输入你要设置的密码(默认为admin)# 设置webdav用户名 ↓可变：ALIYUNDRIVE_AUTH_USER-NAME 值：输入你要设置的用户名(默认为admin) 应用保存。此时可从 IP+端口号对阿里网盘进行访问 cloud sync 设置 设置 cloud sync 群晖打开 cloud sync，选择 webdav，然后下一步填入 webdav 地址+端口号，填入 webdav 用户名 密码，然后下一步 数据加密，如果勾选的话，上次到阿里云盘的内容会被加密，通过普通方式不能打开，可以通过 cloud sync 下载的时候输入密码打开，或者 win 可以下载 SynologyCloudSyncDecryptionTool 这个工具，然后输入密码打开，所以一定要保管好密码或者证书。 ​ 参考：群晖通过 cloud sync 创建阿里云盘同步 ​ 天翼网盘WEBDAV server 群辉安装“WebDAV server”套件 打开“HTTP”和“HTTPS” 天翼网盘映射至群辉 使用【阿里云盘变本地硬盘】将天翼网盘生成至本地 将天翼网盘需要同步的目录使用 Windows 的共享文件夹进行共享 在群辉中挂在 Windows 的共享文件夹（输入 IP 地址+标准尾缀；事先设定的账号密码；打开开机自动挂载） 使用 Cloud Sync 添加 WebDAV 进行与 Windows 共享文件夹同步 参考：群晖 NAS 与 Windows 系统实现共享文件夹同步方案【阿里云盘变本地硬盘】CloudDrive1.1.44 (阿里云盘新增 refresh_token 登录)","tags":[{"name":"群辉","slug":"群辉","permalink":"http://liaozonglong.github.io/tags/%E7%BE%A4%E8%BE%89/"},{"name":"网盘","slug":"网盘","permalink":"http://liaozonglong.github.io/tags/%E7%BD%91%E7%9B%98/"},{"name":"同步","slug":"同步","permalink":"http://liaozonglong.github.io/tags/%E5%90%8C%E6%AD%A5/"}],"categories":[]},{"title":"net安装报错","date":"2021-12-13T04:00:00.000Z","path":"wiki/net安装报错/","text":"报错样式： 解决方法：win+r 运行 CMD 后，输入 CHKDSK E:&#x2F;R 后回车——E:为你出现问题的盘符","tags":[{"name":"NET","slug":"NET","permalink":"http://liaozonglong.github.io/tags/NET/"},{"name":"报错","slug":"报错","permalink":"http://liaozonglong.github.io/tags/%E6%8A%A5%E9%94%99/"}],"categories":[]},{"title":"打印机扫描","date":"2021-11-24T04:00:00.000Z","path":"wiki/打印机扫描/","text":"安装使用","tags":[{"name":"打印机","slug":"打印机","permalink":"http://liaozonglong.github.io/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"打印机扫描","slug":"打印机扫描","permalink":"http://liaozonglong.github.io/tags/%E6%89%93%E5%8D%B0%E6%9C%BA%E6%89%AB%E6%8F%8F/"}],"categories":[]},{"title":"POS基本配置","date":"2021-11-17T04:15:52.000Z","path":"wiki/POS基本配置/","text":"本文涉及工具：必用 ​ 可不用 IP 地址查询工具——br7p IP 地址扫描 2.0—— 6hqk 正文： 第一节：确认需要使用的 IP 地址1. 查询电脑网关地址（等会用于 POS 机设置）1.1 使用工具下载IP 地址查询工具（密码：br7p）双击运行，即可看到网关地址（以你本机的为准） 1.2 手动查询 2. 打开“Enhancement”文件夹在桌面对丽晶程序进行鼠标“右键”，单击“打开文件夹所在的位置”，找到名为“Enhancement”的文件夹，双击打开 3. 打开 Pos.lni 文件在“Enhancement” 目录下找到“Pos.lni”文件，双击打开 4. 查看 IP 地址（等会用于 POS 机设置）分两种情况，请阅读详细_根据情况执行其中一种 4.1 情况一：你的电脑以前一直在使用 POS 机（适用于机器故障更换新的 POS 机，机器调换等情况）​ 打开 Pos.lni 文件后，会看到 WIFI 配置段下面有一个 IP&#x3D;x.x.x.x(该地址以你本机的为准) 4.2 情况二：你的电脑以前从未使用过 POS 机现可以通过IP 地址扫描 2.0（密码：6hqk）来查询可用地址 。 程序双击运行，默认敲三次回车，即可出现信息该批处理自行读取网关地址，默认扫描 200-210 的尾数。可自行修改 丢失 100%即是可用地址，其他均不可用​ 例：1.我在我的机器通过查询工具已知 192.168.26.202 为 100%丢失 3.因此在 Pos.lni 中修改地址为 192.168.26.202（右图） 第二节：POS 机设置1. 打开设置1.1 到主界面，通过左滑或右滑切换界面，找到名为“其他”的文件夹1.2 点开“设置” 2.关闭 WLAN2.1 点击”WLAN”2.2 点击**”红框所示意位置”**关闭 WIFI 3.配置 POS 机 IP 地址3.1 点击”**有线网络设置”**（红框示意）进入3.2 点击”**有线网络设置”**（红框） 3.3 IP 配置3.3.1 选择“静态 IP”（红框 1） 3.3.2 输入 IP 地址至 POS 机（红框 2）。PS: IP 地址为本文第一节第 2 段，所涉及的 Pos.lni 文件中的 IP 地址，将其输入至 POS 机中（红框 2）（以你的机器的配置文件为准，图仅供参考） 3.3.3 设置网关与 DNS在“设置有线网络”的界面继续下滑，看到 DNS 与网关的数字，对应输入（以你得机器的地址为准，图仅供参考） PS: 网关的查询在第一节第 4 段 3.4 返回至桌面，通过左右滑动找到银商 MIS，点击进入，并将银商 MIS 保持全部关闭状态 至此设置完成，请自行进行签到测试","tags":[{"name":"POS基本配置","slug":"POS基本配置","permalink":"http://liaozonglong.github.io/tags/POS%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"name":"基本设置","slug":"基本设置","permalink":"http://liaozonglong.github.io/tags/%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"}],"categories":[]},{"title":"PDA设置","date":"2021-11-17T04:00:00.000Z","path":"wiki/PDA设置/","text":"要修改（左边为修改后，右边为默认值）UPC&#x2F;EANQR原始设置（仅参考，请忽视）基本设置Code128UPC&#x2F;EAN 该项为需要修改项，详见上方 Code39 Code93 Code11 Interleaved 2 of 5 Codabar NEC 2 of 5 MSI RSS QR 该项为需要修改项，详见上方 Data Matrix China Post Maxtrix 2 of 5 Composite &amp; PDF417MicroPDF417 &amp; MaxiCode Aztec &amp; Codablock FTelepen &amp; OCR","tags":[{"name":"PDA","slug":"PDA","permalink":"http://liaozonglong.github.io/tags/PDA/"}],"categories":[]},{"title":"保存不断密码错误","date":"2021-10-09T04:15:52.000Z","path":"wiki/保存不断密码错误/","text":"禁用","tags":[],"categories":[]},{"title":"关闭win10更新","date":"2021-10-09T04:15:52.000Z","path":"wiki/关闭win10更新/","text":"用联想工具关闭一下，不行的话再根据下面设置","tags":[{"name":"系统","slug":"系统","permalink":"http://liaozonglong.github.io/tags/%E7%B3%BB%E7%BB%9F/"},{"name":"关闭win10更新","slug":"关闭win10更新","permalink":"http://liaozonglong.github.io/tags/%E5%85%B3%E9%97%ADwin10%E6%9B%B4%E6%96%B0/"}],"categories":[]},{"title":"内存或磁盘空间不足","date":"2021-10-09T04:15:52.000Z","path":"wiki/内存或磁盘空间不足/","text":"","tags":[{"name":"内存或磁盘空间不足","slug":"内存或磁盘空间不足","permalink":"http://liaozonglong.github.io/tags/%E5%86%85%E5%AD%98%E6%88%96%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3/"},{"name":"Office","slug":"Office","permalink":"http://liaozonglong.github.io/tags/Office/"}],"categories":[]},{"title":"布谷鸟IP","date":"2021-10-09T04:15:52.000Z","path":"wiki/布谷鸟IP/","text":"","tags":[{"name":"布谷鸟IP","slug":"布谷鸟IP","permalink":"http://liaozonglong.github.io/tags/%E5%B8%83%E8%B0%B7%E9%B8%9FIP/"},{"name":"IP地址","slug":"IP地址","permalink":"http://liaozonglong.github.io/tags/IP%E5%9C%B0%E5%9D%80/"},{"name":"IP","slug":"IP","permalink":"http://liaozonglong.github.io/tags/IP/"}],"categories":[]},{"title":"常见问题","date":"2021-10-09T04:15:52.000Z","path":"wiki/常见问题/","text":"重命名需要用的打印机，跟提示缺失的打印机对上。然后重启所有的服务（菜鸟、顺丰等）","tags":[{"name":"丽晶","slug":"丽晶","permalink":"http://liaozonglong.github.io/tags/%E4%B8%BD%E6%99%B6/"},{"name":"常见问题","slug":"常见问题","permalink":"http://liaozonglong.github.io/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"}],"categories":[]},{"title":"扫描枪","date":"2021-10-09T04:15:52.000Z","path":"wiki/扫描枪/","text":"","tags":[{"name":"基本设置","slug":"基本设置","permalink":"http://liaozonglong.github.io/tags/%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"name":"扫描枪","slug":"扫描枪","permalink":"http://liaozonglong.github.io/tags/%E6%89%AB%E6%8F%8F%E6%9E%AA/"},{"name":"硬件","slug":"硬件","permalink":"http://liaozonglong.github.io/tags/%E7%A1%AC%E4%BB%B6/"}],"categories":[]},{"title":"报错","date":"2021-10-09T04:15:52.000Z","path":"wiki/报错/","text":"RCPT-550RCPT-550 错误：检查邮箱是否错误，邮箱收件人是否离职","tags":[],"categories":[]},{"title":"智能宽带超级管理员默认账号","date":"2021-10-09T04:15:52.000Z","path":"wiki/智能宽带超级管理员默认账号/","text":"移动：账号: CMCCAdmin密码: aDm8H%MdA","tags":[{"name":"智能宽带超级管理员默认账号","slug":"智能宽带超级管理员默认账号","permalink":"http://liaozonglong.github.io/tags/%E6%99%BA%E8%83%BD%E5%AE%BD%E5%B8%A6%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98%E9%BB%98%E8%AE%A4%E8%B4%A6%E5%8F%B7/"}],"categories":[]},{"title":"结构说明文档","date":"2021-10-09T04:15:52.000Z","path":"wiki/结构说明文档/","text":"打印格式将此压缩包中内容全部复制到 Spos_3.0 目录下，然后进行更新使用 2Spos 中的 printschema 文件夹对原先进行覆盖，即可替换成针式打印机​ POS 机文件设置 数据库文件该文件是软件的数据库​ 该软件登陆需要权限，申请之前将设备名设置为店铺号，布谷鸟里面有","tags":[{"name":"丽晶","slug":"丽晶","permalink":"http://liaozonglong.github.io/tags/%E4%B8%BD%E6%99%B6/"},{"name":"结构说明文档","slug":"结构说明文档","permalink":"http://liaozonglong.github.io/tags/%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/"}],"categories":[]},{"title":"错误代码操作","date":"2021-10-09T04:15:52.000Z","path":"wiki/错误代码操作/","text":"0x0000011b 卸载这些补丁 KB5005569&#x2F;KB5005573&#x2F;KB5005568&#x2F;KB5005566&#x2F;KB5005565 关闭自动更新","tags":[{"name":"打印机","slug":"打印机","permalink":"http://liaozonglong.github.io/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"错误代码操作","slug":"错误代码操作","permalink":"http://liaozonglong.github.io/tags/%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81%E6%93%8D%E4%BD%9C/"}],"categories":[]},{"title":"键盘用不了","date":"2021-10-09T04:15:52.000Z","path":"wiki/键盘用不了/","text":"HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass{4D36E96B-E325-11CE-BFC1-08002BE10318}再次进入刚才的文档，点击右键，选择新建字符串值。添加项目名称: UpperFilters 内容 :kbdclass。","tags":[{"name":"键盘用不了","slug":"键盘用不了","permalink":"http://liaozonglong.github.io/tags/%E9%94%AE%E7%9B%98%E7%94%A8%E4%B8%8D%E4%BA%86/"}],"categories":[]},{"title":"AMS云服务","date":"2021-10-09T04:00:00.000Z","path":"wiki/AMS云服务/","text":"如果您希望使用命令行，请参阅 AWS Command Line Interface 用户指南中的以下教程：通过 AWS CLI 使用 Amazon EC2。 密钥对AWS 使用公有密钥密码术来保护实例的登录信息。Linux 实例没有密码；您可以使用密钥对安全地登录您的实例。使用 SSH 登录时，您在启动实例时指定密钥对的名称，然后提供私有密钥。​ 连接到您的实例如果您的本地计算机操作系统是 Linux 或 macOS X SSH 客户端 EC2 Instance Connect AWS Systems Manager 会话管理器 如果您的本地计算机操作系统是 Windows PuTTY 转换你的私有密钥 PuTTY 自身并不支持适用于 SSH 密钥的私有密钥格式。PuTTY 提供一种名为 PuTTYgen 的工具，该工具可以将密钥转换为 PuTTY 所需的格式。您必须如下所示将私有密钥（.pem 文件）转换为此格式（.ppk 文件），以便使用 PuTTY 连接到您的实例。 从 Start (开始) 菜单中，依次选择 All Programs (所有程序)、PuTTY、PuTTYgen。 在 Type of key to generate 下，选择 ** RSA**。如果您的 PuTTYgen 版本不包含此选项，请选择 SSH-2 RSA。 Load-选择.ppk 密钥文件打开。 如要保存，选择Save private key 进行保存 连接到您的 Linux 实例 选项（必选） 连接方式：ssh 端口：22 选择密钥：Connection–&gt;SSH–&gt;Auth–&gt;Browse–&gt;选择并打开–&gt;OPEN（打开连接） 选项（可选） 保持连接：Connection–&gt;Seconds between keepadlives(0 to tum off)输入间隔多久发送一次保持活动数据。 在主机名框中，执行以下操作之一： （公有 DNS）要使用实例的公有 DNS 名称进行连接，请输入 my-instance-user-name@my-instance-public-dns-name。 (IPv6) 或者，如果实例具有 IPv6 地址，要使用实例的 IPv6 地址进行连接，请输入 my-instance-user-name@my-instance-IPv6-address SSH 客户端 AWS Systems Manager 会话管理器 ​适用于 Linux 的 Windows 子系统","tags":[{"name":"AMS云服务","slug":"AMS云服务","permalink":"http://liaozonglong.github.io/tags/AMS%E4%BA%91%E6%9C%8D%E5%8A%A1/"},{"name":"服务","slug":"服务","permalink":"http://liaozonglong.github.io/tags/%E6%9C%8D%E5%8A%A1/"},{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"}],"categories":[]},{"title":"KM118设置","date":"2021-10-09T04:00:00.000Z","path":"wiki/KM118工具设置/","text":"118 设置工具最新 V1.1.3.32（密码:hzhs）KM118_CLOUD_V1.01.30_GB18030_beta2优先级如图也可先执行 2 试一下是否可行，不行再还原出厂设置对于 KM118 固件更新使用KM118_CLOUD_V1.01.30_GB18030_beta2进行更新","tags":[{"name":"KM-118","slug":"KM-118","permalink":"http://liaozonglong.github.io/tags/KM-118/"},{"name":"打印机","slug":"打印机","permalink":"http://liaozonglong.github.io/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"设置","slug":"设置","permalink":"http://liaozonglong.github.io/tags/%E8%AE%BE%E7%BD%AE/"}],"categories":[]},{"title":"PDA盘点枪教程","date":"2021-10-09T04:00:00.000Z","path":"wiki/PDA盘点枪教程/","text":"登陆界面 模式选择 1. Stock（用于盘点）1.1 库存盘点 1.1.1 新增（新增一条盘点单号） PS:提交时条形码变成红色 1.1.2 盘点中（查看当前存在盘点单号）每新增一个盘点单即可新增一条盘点中记录，从该处可对已有盘点单进行作废、重盘等等操作例： 2.我现在根据 1.1.1 的步骤新增一条名为 qqq 的记录 3.查看盘点中记录 1.1.3 作废（删除某条盘点单号） 如对正在盘点单号不理解的，请回看 1.1.2 说明 ​ 1.1.4 重盘（清除某条盘点单号内所有数据） 1.1.5 上传丽晶（上传后将无法在本地对单据进行修改） 附： 2.货架管理（在 token 处输入 onrack）onrack 填写店铺编号，然后保存登录进入主界面 2.1 上架2.1.1 架位管理扫货品条码-扫商品条码（可批量）-提交 2.1.2 查货上架扫货品条码-放货品-扫货架条码案例： 2.2 下架2.2.1 查货下架扫款号-扫货架条码-扫货物条码 2.2.2 直接下架2.2.2.1 直接下架扫货架条码-扫商品条码-取出商品案例： 2.2.2.1 清空下架 2.3 取货2.3.1 取货请求点击“+”图标-扫商品条码 2.3.2 取货查看信息-寻找货架-扫货架条码-扫商品条码-取出商品案例： 2.4 查询（款式库存架位状态查询）对款号进行扫描示意图","tags":[{"name":"PDA盘点枪教程","slug":"PDA盘点枪教程","permalink":"http://liaozonglong.github.io/tags/PDA%E7%9B%98%E7%82%B9%E6%9E%AA%E6%95%99%E7%A8%8B/"},{"name":"上下架","slug":"上下架","permalink":"http://liaozonglong.github.io/tags/%E4%B8%8A%E4%B8%8B%E6%9E%B6/"},{"name":"盘点","slug":"盘点","permalink":"http://liaozonglong.github.io/tags/%E7%9B%98%E7%82%B9/"}],"categories":[]},{"title":"模板文件","date":"2021-10-09T04:00:00.000Z","path":"wiki/系统问题/","text":"截屏全黑 原因可能是操作不当，或是设置不对或者是系统为了能正常运行一些大型游戏等而在显卡显示中默认启用了 DirectDraw 加速，就会导致截图黑屏解决方法HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\GraphicsDrivers\\DCI，将 Timeout 的数值数据从“7”更改为“0”。然后重启资源管理器","tags":[{"name":"Windows","slug":"Windows","permalink":"http://liaozonglong.github.io/tags/Windows/"},{"name":"系统问题","slug":"系统问题","permalink":"http://liaozonglong.github.io/tags/%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98/"},{"name":"系统系统","slug":"系统系统","permalink":"http://liaozonglong.github.io/tags/%E7%B3%BB%E7%BB%9F%E7%B3%BB%E7%BB%9F/"},{"name":"计算机计算机","slug":"计算机计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AE%A1%E7%AE%97%E6%9C%BA/"}],"categories":[]},{"title":"专业投机原理（书籍笔记）","date":"2021-09-23T04:15:52.000Z","path":"wiki/专业投机原理（书籍笔记）/","text":"粗略阅读：1-3 章讲一个投机者的行为应当如何（通过案例说明—偏作者理念）4-8 讲技术面作者认为有必要的知识9-11 讲基本面的认识第二篇专门用于强调个人应当如何（抱有什么认知模式）18-21 真正开始基本面的知识22-23 作者带领读者使用本篇知识去看世界历史24-28 讲技术面第五篇讲金融工具第六篇及后记都是讲交易者应当如何​ 一本篇实用书的书，讲的是规则，而不是原理分析作者最想强调的是人，其次是利用工具的集合进行稳定的盈利​ 先讲知识，再结合实例进行说明。以人为本 分析阅读金融类的实用书如何保持一致性盈利​ 架构 卷首 作者的想法 选定一个目标，阅读与观察这些专业人士的教诲，通过模仿而不断地学习，最后我可以形成一种属于自己的独特风格 我认为如果人们以成为第一为主要目标，这相当于再追求挫折的人生，即使他们确实可以达到目标也是如此 本书要讨论的问题 将所有领域的相关知识浓缩为可执行的原则，复杂的体系可以简化为相对单纯、易于操作的基本思想。本书便是希望阐述这些基本思想，它适用于我这类以书籍作为主要信息来源的市场玩家 成功与快乐来自于自我潜能的实现，并认识到错误是不可避免的过程，甚至是生命的一部分。我撰写这本书是为了协助人们再金融市场中追求最大的人生意义：自我满足 知识本身绝对不是成功的保证。你还需要一套执行知识管理计划以及严格遵守计划的心理素质，这样才可以免除情绪的干扰。这便是本书将要讨论的内容：在心理上与财务上界定一种从市场中获得成功的方法 本书的重点在于：如何预测市场的价格走势，以及如何管理市场、股票或商品的风险。至于如何选择值得进一步分析的类股，并解释个股在何种条件下可以上涨，这在本书中处于次要地位。 本书主要是为投机者与投资者而写 基本知识 如果你希望获胜，你就必须了解规则；另外，你还必须愿意坐上赌桌，这样你才有获胜的机会。短期趋势：数天至数星期中期趋势：数星期至数月长期趋势：数月至数年交易者：主要考虑短期趋势投资者：主要考虑长期趋势投机者：主要考虑中期趋势三种行为相互具备重叠之处。投机行为的原理，可以通过调整适配三种行为LZL：作者更想强调投机者这个角色。原话：本书其他部分还会进一步区分投机者和其他市场参与者之间的差别投机：掌握有利胜算的情况下才承担风险判读盘势：现代技术分析的雏形。最大的区别是，模式认定主要是依靠潜意识，而意识的判断相对并不重要。即所谓的“市场直觉”——作者认为信息技术已经让这个行为成为历史了，而且不具备专门练习的实际必要，但仍然具备其的优势不可基于帮助朋友的立场，免费提供任何有关市场的建议在交易时，我永远要求风险&#x2F;回报的比率至少为 1：3​ 生命应该是一个平衡而协调的过程。重点并不在于你赚了多少钱，而是你整体的快乐程度​ 电脑程式交易也开始严重影响短期趋势的性质，使我多年来运用的交易法则完全不再适用​ 我首先必须界定、衡量、归纳所有趋势与修正走势，并设定一个标准作为“通常”的定义。我才用道氏理论为主轴，并将趋势分别归纳为短中长，衡量他们的幅度与期间，并登录于表格。最后，通过统计的方法，使他们可以简化为我能够运用于交易格式​ 我永远都会结合技术分析、统计方法以及经济基本面等因素，评估任何投机头寸的风险。唯有这三个因素相互配合时，我才会在市场中建立重要头寸 鳄鱼原则 鳄鱼原则：猎物越试图挣扎，鳄鱼的收获便越多。万一鳄鱼咬住你的脚，务必记住：你唯一的机会便是牺牲一只脚LZL：该片专门用于强调及时止损​ 犹如我学习的许多事物一样，这项原则也来自于惨痛的教训​ 由于谬误的自尊与虚荣，我一再地违背交易法则​ 在任何领域内，明智的决策都要依赖于基本知识​ 根据重点思考程序 将持续明确的事件转化成抽象的概念 将抽象的原则用在实际的事件上 根据对现在的分析，预测长期的未来 ​ 本书的其他篇幅中，我将提出：了解市场基本知识，以及如何运用 作者的问题 基本知识-独立的滋味 趋势究竟是什么？ 它有什么性质？ 它通常会持续多久？ 它向上或向下的幅度通常如何？ 修正的走势有何性质？ 它通常会持续多久？ 如何在最广义的层面上获得成功 -根据重点思考 如何根据重点思考？——重点未必在于你知道多少，而在于你知道内容的真实性与相关性 简化资料–&gt;实用原则提取重点简化资料——方法之一就是专精于其中一两个领域。另一种方法是运用电脑处理组织与筛选的工作。不论如何简化资料，处理的关键还在于：如何从每天无数的资料中提取出重点为了掌握这种能力，你必须以原则来统辖信息，原则是界定金融市场性质的基本概念。是在无数特定事件与无数相关的资料中，抽象化的一种普遍概念 如何认定原则 每个“专家”的意见各异。这些矛盾主要来源于对问题的界定界定这些名词不仅是一种概念化的程序，更是了解市场的基本步骤，并认定统辖它们的原则 ​","tags":[{"name":"专业投机原理","slug":"专业投机原理","permalink":"http://liaozonglong.github.io/tags/%E4%B8%93%E4%B8%9A%E6%8A%95%E6%9C%BA%E5%8E%9F%E7%90%86/"},{"name":"书籍笔记","slug":"书籍笔记","permalink":"http://liaozonglong.github.io/tags/%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B0/"},{"name":"股票","slug":"股票","permalink":"http://liaozonglong.github.io/tags/%E8%82%A1%E7%A5%A8/"}],"categories":[]},{"title":"Apache2","date":"2021-08-12T04:15:52.000Z","path":"wiki/Apache2/","text":"sudo apt install apache2 -y #安装vim &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf #修改默认路径 12ServerAdmin webmaster@localhostDocumentRoot /var/www/html // 一般我们默认为这个作为网站的根目录 sudo apache2ctl -k restart #重启 Apache​ ​ ​ 参考文章：Ubuntu 18.04 下使用 Apache 搭建一个 web 服务器","tags":[{"name":"Apache2","slug":"Apache2","permalink":"http://liaozonglong.github.io/tags/Apache2/"}],"categories":[]},{"title":"Django","date":"2021-08-12T04:15:52.000Z","path":"wiki/Django/","text":"基础命令pip install django #安装 Djangodjango-admin.py startproject testdj #创建 django 项目python3 manage.py runserver #运行 django 项目​ 参考：Django 安装Django 创建第一个项目 网站规则 修改网站路径： 项目中如果代码有改动，服务器会自动监测代码的改动并自动重新载入，所以如果你已经启动了服务器则不需手动重启。 修改模板文件的路径 修改 HelloWorld&#x2F;settings.py，修改 TEMPLATES 中的 DIRS 为 [os.path.join(BASE_DIR, ‘templates’)] [ ](https://www.runoob.com/django/django-first-app.html) 分离文档的表现形式和内容12HelloWorld/templates/runoob.html 文件代码：&lt;h1&gt;&#123;&#123; hello &#125;&#125;&lt;/h1&gt; 1234567修改 views.py，增加一个新的对象，用于向模板提交数据from django.shortcuts import renderdef runoob(request): context = &#123;&#125; context[&#x27;hello&#x27;] = &#x27;Hello World!&#x27; return render(request, &#x27;runoob.html&#x27;, context) 123向Django说明模板文件的路径，修改HelloWorld/settings.py，修改 TEMPLATES 中的 DIRS 为 [os.path.join(BASE_DIR, &#x27;templates&#x27;)]代码头引入OS,import OS； 参考：Django 模板 数据库sudo pip3 install pymysql # 安装 mysql 驱动 （必须）create database runoob default charset&#x3D;utf8; # 创建一个名为 runoob 数据库，编码指定为 utf8： 项目的 settings.py 文件中找到 DATABASES 配置项 #修改数据库连接信息：（必须） 1234567891011DATABASES = &#123; &#x27;default&#x27;: &#123; &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;, # 数据库引擎 &#x27;NAME&#x27;: &#x27;runoob&#x27;, # 数据库名称 &#x27;HOST&#x27;: &#x27;127.0.0.1&#x27;, # 数据库地址，本机 ip 地址 127.0.0.1 &#x27;PORT&#x27;: 3306, # 端口 &#x27;USER&#x27;: &#x27;root&#x27;, # 数据库用户名 &#x27;PASSWORD&#x27;: &#x27;123456&#x27;, # 数据库密码 &#125;&#125; ** 告诉 Django 使用 pymysql 模块连接 mysql 数据库： #修改连接模块（必须）** 123# 在与 settings.py 同级目录下的 __init__.py 中引入模块和进行配置import pymysqlpymysql.install_as_MySQLdb() 定义模型创建 APP Django 规定，如果要使用模型，必须要创建一个 app django-admin.py startapp TestModel # 创建一个 TestModel 的 app （必须）create database 数据库名称 default charset&#x3D;utf8; # 防止编码问题，指定为 utf8 **修改 TestModel&#x2F;models.py 文件 ** 12345# models.pyfrom django.db import modelsclass Test(models.Model): name = models.CharField(max_length=20) 以上的类名代表了数据库表名，且继承了 models.Model，类里面的字段代表数据表中的字段(name)，数据类型则由 CharField（相当于 varchar）、DateField（相当于 datetime）， max_length 参数限定长度。 django–orm models 字段类型说明 settings.py 中找到 INSTALLED_APPS 这一项，如下： #添加 APP 123456789INSTALLED_APPS = ( &#x27;django.contrib.admin&#x27;, &#x27;django.contrib.auth&#x27;, &#x27;django.contrib.contenttypes&#x27;, &#x27;django.contrib.sessions&#x27;, &#x27;django.contrib.messages&#x27;, &#x27;django.contrib.staticfiles&#x27;, &#x27;TestModel&#x27;, # 添加此项) 完成配置后的命令123$ python3 manage.py migrate # 创建表结构$ python3 manage.py makemigrations TestModel # 让 Django 知道我们在我们的模型有一些变更$ python3 manage.py migrate TestModel # 创建表结构 数据库操作testdb.py 中写增删改查语句，urls 中写链接。详见数据库配置​ 参考：数据库配置​django–orm models 字段类型说明​ 表单GET 方法：POST 方法（提交数据时更常用） ： 123456789&lt;body&gt; &lt;form action=&quot;/search-post/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; #csrf 全称是 Cross Site Request Forgery；Django提供的防止伪装提交请求的功能。POST 方法提交的表格，必须有此标签。 &lt;input type=&quot;text&quot; name=&quot;q&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;搜索&quot;&gt; &lt;/form&gt; &lt;p&gt;&#123;&#123; rlt &#125;&#125;&lt;/p&gt; # rlt 记号，为表格处理结果预留位置&lt;/body&gt; ​ 参考：Django 表​ 视图视图层 一个视图函数，简称视图，是一个简单的 Python 函数，它接受 Web 请求并且返回 Web 响应。响应可以是一个 HTML 页面、一个 404 错误页面、重定向页面、XML 文档、或者一张图片…无论视图本身包含什么逻辑，都要返回响应。代码写在哪里都可以，只要在 Python 目录下面，一般放在项目的 views.py 文件中。每个视图函数都负责返回一个 HttpResponse 对象，对象中包含生成的响应。视图层中有两个重要的对象：请求对象(request)与响应对象(HttpResponse)。 请求对象: HttpRequest 对象（简称 request 对象）1、GET取值格式：对象.方法。get()：返回字符串，如果该键对应有多个值，取出该键的最后一个值。 123def runoob(request): name = request.GET.get(&quot;name&quot;) return HttpResponse(&#x27;姓名：&#123;&#125;&#x27;.format(name)) 2、POST数据类型是 QueryDict，一个类似于字典的对象，包含 HTTP POST 的所有参数。 123def runoob(request): name = request.POST.get(&quot;name&quot;) return HttpResponse(&#x27;姓名：&#123;&#125;&#x27;.format(name)) 3、body数据类型是二进制字节流，是原生请求体里的参数内容，在 HTTP 中用于 POST，因为 GET 没有请求体。在 HTTP 中不常用，而在处理非 HTTP 形式的报文时非常有用，例如：二进制图片、XML、Json 等。 1234def runoob(request): name = request.body print(name) return HttpResponse(&quot;菜鸟教程&quot;) 响应对象：HttpResponse 对象响应对象主要有三种形式：HttpResponse()、render()、redirect()。HttpResponse(): 返回文本，参数为字符串，字符串中写文本内容。如果参数为字符串里含有 html 标签，也可以渲染。 123def runoob(request): # return HttpResponse(&quot;菜鸟教程&quot;) return HttpResponse(&quot;&lt;a href=&#x27;https://www.runoob.com/&#x27;&gt;菜鸟教程&lt;/a&gt;&quot;) render()： 第一个参数为 request，第二个参数为字符串（页面名称），第三个参数为字典（可选参数，向页面传递的参数：键为页面参数名，值为 views 参数名）。 123def runoob(request): name =&quot;菜鸟教程&quot; return render(request,&quot;runoob.html&quot;,&#123;&quot;name&quot;:name&#125;) redirect()。 重定向，跳转新页面。参数为字符串，字符串中填写页面路径。一般用于 form 表单提交后，跳转到新页面。 12def runoob(request): return redirect(&quot;/index/&quot;) 参考：Django 视图​ 路由参考：Django 路由","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"Django","slug":"Django","permalink":"http://liaozonglong.github.io/tags/Django/"},{"name":"python","slug":"python","permalink":"http://liaozonglong.github.io/tags/python/"},{"name":"计算机语言","slug":"计算机语言","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"}],"categories":[]},{"title":"HTML","date":"2021-08-12T04:15:52.000Z","path":"wiki/HTML/","text":"​ action&#x3D;”cgi-bin&#x2F;post.py” method&#x3D;”post” #设置传递目标与模式import cgi, cgitb # 添加 GI 处理模块form &#x3D; cgi.FieldStorage() # 创建 FieldStorage 的实例化str_data_1 &#x3D; form.getvalue(‘data_1’) #获取 html 页面传递过来的数据值 参考资料：HTML 发送表单给 python 处理","tags":[{"name":"HTML","slug":"HTML","permalink":"http://liaozonglong.github.io/tags/HTML/"}],"categories":[]},{"title":"Nignx","date":"2021-08-12T04:15:52.000Z","path":"wiki/Nignx/","text":"​ apt-get install nginx #安装 Nginxapt install spawn-fcgi #通用 FastCGI 进程管理器apt-get install fcgiwrap # Fcgiqwrap 是另外一个 CGI 封装库，跟 Simple CGI 类似。spawn-fcgi -a 127.0.0.1 - p 8888 -f &#x2F;usr&#x2F;sbin&#x2F;fcgiwrap #绑定服务 IP 和端口指定 fcgiwrap 目录netstat -tlnp | grep fcgiwrap #查看端口状态service nginx restart #重启 Nginx&#x2F;etc&#x2F;init.d&#x2F;nginx stop #关闭 Nginx&#x2F;etc&#x2F;init.d&#x2F;nginx start #打开 Nginx​ 参考资料：ubuntu 安装 nginxnginx 重启几种方法","tags":[{"name":"Nignx","slug":"Nignx","permalink":"http://liaozonglong.github.io/tags/Nignx/"}],"categories":[]},{"title":"python语句","date":"2021-08-12T04:15:52.000Z","path":"wiki/python语句/","text":"​ 程序是什么：一个指令的序列，来告诉机器如何进行一组运算专注于编程，而不是编程语言​ 运算符 运算符：+-*&#x2F; ** (乘方) ^（异或） 1. 值和类型123456&gt;&gt;&gt; type(2)&lt;class &#x27;int&#x27;&gt; #整形&gt;&gt;&gt; type(42.0)&lt;class &#x27;float&#x27;&gt; #浮点型&gt;&gt;&gt; type(&#x27;Hello, World!&#x27;)&lt;class &#x27;str&#x27;&gt; #字符型 2. 变量，表达式，语句2.1 赋值语句1x = xxx #第一个x是变量名，xxx是需要赋值的对象 变量名不限制长度，不能数字开头，对大小敏感。支持下划线_，例子 your_name。特殊关键词不能作为变量名​ 2.2 表达式和语句1b = n + 25 表达式是数值,变量和操作符的组合。单个值或变量都如此语句是一组具有某些效果的代码，比如创建变量，或者显示值。语句是可以单独出结果的，而表达式是被语句包含的，得出某个结果，交给语句处理。换句话说，解释器执行语句​ 2.3 运算符优先级1();**;*/;+- 从左往右，每个分隔符代表一个优先级；同级从左往右，乘方除外。可以用括号明确提级3.2 字符串操作 12+：字符串拼接*：字符串重复和拼接 2.3 注释1#来开头。注释多是要解释这样做的目的是什么。 2.4 文档字符串1234567def number():&quot;&quot;&quot;这是一段文档字符串这个函数用于输出hello字符&quot;&quot;&quot; print(&#x27;Hello!&#x27;)number() 文档字符串是指：在函数开头部位，解释函数的交互界面的字符串，doc 是文档 documentation 的缩写 2.5 调试 语法错误：程序的结构和规则出错 运行错误（异常）：直到运行的时候才会出现的错误 语义错误：指你的程序运行没问题，也不产生错误信息，但不能正确工作 3. 函数3.1 函数调用12&gt;&gt;&gt; type(42) #type即使一个函数，括号内即函数的参数&lt;class &#x27;int&#x27;&gt; 函数都要“传入”一个参数，“返回”一个结果。结果也被叫做返回值​ 3.2 Math functions（数学模块）12import math #导入模块具体变量名百度找 模块：模块就是一系列相关函数的集合成的文件。​ 3.3 添加新函数12def print_lyrics(): print(&quot;I&#x27;m a lumberjack, and I&#x27;m okay.&quot;) def 表示在定义一个函数，随后跟函数名，括号代表函数的参数，空就是不需要，末尾必须冒号。这些组成头部，剩下叫做函数体 单引号和双引号效果一样，一般都是用单引号，除非字符串中已经出现 ​ 3.4 运行流程 一个 Python 程序都是从第一个语句开始运行的。从首至尾，每次运行一个语句 函数定义不会改变流程顺序，函数体语句只有在函数被调用才运行 调用函数就跳入函数体，然后从离开的地方继续执行 ​ 3.5 形式参数和实际参数实际参数：就是调用函数时候传给他的那个参数形式参数：函数内部定义用的参数 函数内部变量和形参都是局部的 ​ 3.6 栈图每个函数都用一个框架来表示。框架的边上要标明函数的名字，框内填写函数内部的形参和变量。一个栈中的这些框也表示了函数调用的关系等等_main_：属于最外层框架，也被叫做主函数。当在所有函数外定义一个函数时，这个变量就属于主函数所有​ 3.7 有返回值的函数和无返回值的函数如果是脚本模式，你运行一个有返回值的函数，但没有利用这个返回值，这个返回值就会永远丢失了 3.8 封装123def number(): print(&#x27;Hello!&#x27;)number() 代码定义到一个函数里面，然后调用这个函数 3.9 泛化1234def number(a): for i in range(a): print(&#x27;Hello!&#x27;)number(x) #此处x输入数字 给函数添加一个参数 3.10 重构123456def number(a): shuzi = 1 for i in range(a): print(shuzi) shuzi = shuzi + 1number(x) #此处x输入数字 改进了界面设计，增强了代码再利用，这就叫做重构 4. 模块4.1 乌龟模块12import turtlebob = turtle.Turtle() 5. 语句5.1 地板除法123minutes = 105hours = minutes // 601 会把运算结果的小数位舍弃，返回整值 5.2 求模运算符1234minutes = 105remainder = minutes % 60remainder45 #求余数 5.3 布尔表达式1234567895 == 5True5 == 6Falsex != y #二者相等x &gt; y #前者更大x &lt; y #前者更小x &gt;= y #大于等于x &lt;= y #小于等于 只有两个值，true（真）或者 false（假） 5.4 逻辑运算符123x &gt; 0 and x &lt; 10 #x仅在0-10之间才为真——且n%2 == 0 or n%3 == 0 #一个条件为真就为真——或not (x &gt; y) #当x&gt;y成立，则本条件为假，反之相反 逻辑运算符有三种：且，或以及非 5.5 条件执行5.5.1 if 语句12if x &gt; 0: print(&#x27;x is positive&#x27;) if 背后是布尔表达式，条件为真，缩进语句即执行，反之相反 5.5.2 选择执行1234if x % 2 == 0: print(&#x27;x is even&#x27;)else: print(&#x27;x is odd&#x27;) 存在两种备选语句，根据条件来判断。这些选择也叫【分支】 5.5.3 链式条件123456if x &lt; y: print(&#x27;x is less than y&#x27;)elif x &gt; y: print(&#x27;x is greater than y&#x27;)else: print(&#x27;x and y are equal&#x27;) 第一个为假，第二个就会被检查，以此类推。如果有一个为真，相应语句就会运行，条件判断也就结束。如果有多个条件为真，只有第一个会运行 5.5.4 嵌套条件1234567if x == y: print(&#x27;x and y are equal&#x27;)else: if x &lt; y: print(&#x27;x is less than y&#x27;) else: print(&#x27;x is greater than y&#x27;) 5.5.5 递归运算123456def countdown(n): if n &lt;= 0: print(&#x27;Blastoff!&#x27;) else: print(n) countdown(n-1) 函数来调用自己也是允许的。这就是递归 5.5.6 无穷递归如果一个递归一直都不能到达基准条件，那就会持续不断地进行自我调用，程序也就永远不会终止了。这就叫无穷递归 5.5.7 键盘输入12345name = input(&#x27;What...is your name?\\n&#x27;)What...is your name?Arthur, King of the Britons!nameArthur, King of the Britons 了内置的一个函数，名叫 input 5.6 循环语句5.6.1 for 语句12for i in range(4): print(&#x27;Hello!&#x27;) ​","tags":[{"name":"计算机","slug":"计算机","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"python","permalink":"http://liaozonglong.github.io/tags/python/"},{"name":"计算机语言","slug":"计算机语言","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"},{"name":"python语句","slug":"python语句","permalink":"http://liaozonglong.github.io/tags/python%E8%AF%AD%E5%8F%A5/"}],"categories":[]},{"title":"伊曼努尔·康德：纯粹理性批判","date":"2021-08-12T04:15:52.000Z","path":"wiki/伊曼努尔·康德：纯粹理性批判/","text":"先验感性论定义：直观：知识不问其以何种式样何种方法与对象相关，其所由以直接与对象相关，及一切思维所由以得其质料者感性：“由吾人为对象所激动之形相以接受表象”之能力感觉：对象所及于“表象能力”之结果经验的直观：感觉与对象相关之直观现象：经验的直观之对象现象之质料：在现象中与感觉相应者现象之方式：其所以规定现象中之杂多使之能在某种关系中整理者纯粹的：凡一切表象其中绝无属于感觉之成分者纯粹直观：普泛所谓感性直观之纯粹方式（直观中之一切杂多皆以某种关系在此方式中被直观者）必须先天的存于心中。此种感性直观之纯粹方式 论述：但直观仅限在对象授与吾人之限度内发生。对象授与吾人，又仅在心有所激动之限度内始可能，此点至少就人而言对象由感性授与吾人，仅有此感性使吾人产生直观；直观由悟性而被思维，且自悟性发生概念但一切思维，不问其直接间接，由其性格最后必与直观相关，故在吾人人类，最后必与感性相关，盖因舍此以外别无其他方法能使对象授与吾人也。在吾人被对象激动之限度内，对象所及于“表象能力”之结果，为感觉由感觉与对象相关之直观，名为经验的直观。经验的直观之对象（未规定其内容者）泛称为现象感觉所唯一能由以设定，唯一能由以在某种关系中整理者，其自身决不能亦为感觉；故一切现象之质料仅后天的授与吾人，而现象之方式则必先天的存于心中以备整理感觉，故必容许离一切感觉而考虑之也。纯粹直观者即无感官或感觉之现实对象而先天的存于心中为感性之纯然方式者也一 切 先 天 的 感 性 原 理 之 学 ， 我 名 之 为 先 验 感 性 论 。必须有此种学问成为先验原理论之第一部分，以与论究纯粹思维之原理名为先验逻辑者相对待主旨：一切思维，不问其直接间接，由其性格最后必与直观相关一切现象之质料仅后天的授与吾人是以在先验感性论中，吾人第一、须从感性中取去悟性由其概念所思维之一切事物，使感性单独孤立，于是除经验直观以外无一物留存。第二、吾人又须从经验直观中取去属于感觉之一切事物，于是除感性所能先天的唯一提供之纯粹直观及现象之纯然方式以外，无一物存留。在此种研究途程中，将发见有两种感性直观之纯粹方式，用为先天的知识原理，即空间与时间。吾人今将进而考虑空间与时间问题：第一节 空 间定义：阐明：乃指“使属于概念者，有一明显清晰之表象”（虽无须周密详尽）玄学的阐明：含有“展示概念为先天的所与者”先验的阐明：说明一概念为“其他先天的综合知识之可能性由此始能理解”之原理空间：包括一切对吾人表现为外物之事物，但非一切物自身——不问此等事物为何种主观所直观，或此等事物是否为其所直观。主旨：吾人由外感（心之一种性质），表现对象为在吾人以外之事物，且一切对象绝无例外，皆在空间中表现时间之不能直观为外部的，亦犹空间之不能直观为在吾人内部中之事物空间表象非自外的现象关系由经验得来者。反之，此一外的经验自身，乃仅由空间表象而始可能者也空间乃存于一切外的直观根底中之必然的先天表象在一切空间概念之根底中，乃一种先天的而非经验的之直观，此种直观实为先天的，且具有必然的正确性者。空间并不表现物自身之性质，且不表现物自身之相互关系是以唯从人类立场，吾人始能言及空间，言及延扩的事物，等等空间非属于物自身为其内部的性质之一类方式，对象自身纯非吾人所能知，凡吾人所称为外的对象，只为吾人之感性表象，而空间即此感性表象之方式至于感性相应之真实事物，即物自身，则不能由此种表象知之，且亦不能知之者；况在经验中从未有关于物自身之问题发生也。叙述：至“心所由以直观其自身或其内部状态”之内感，则不能产生“所视为对象之心自身”之直观；但内感中尚有一种一定的方式（即时间），而心之内部状态之直观，则唯在此方式中始可能，故凡属于心之内部规定之一切事物，皆在时间关系中表现。惟空间表象则能思维为包含有无限表象在其自身中，盖空间之一切部分固能同时无限存在者也盖此宾词之所以能归之事物者，仅在事物之能表现于吾人之限度内，即仅归之于感性之对象。此种感受性（吾人名为感性）之永恒方式，乃对象在其中始能被直观为在吾人以外之一切关系之必然条件惟以吾人不能将感性之特殊条件视为事物所以可能之条件，而仅能视为事物现象所以可能之条件，故吾人诚能谓空间包括一切对吾人表现为外物之事物，但非一切物自身例如蔷薇，其自身本仅现象，乃为经验的悟性视为物自身，但关于其色，则固以视者之异而所见不同。问题：于是空间与时间果为何物？空间非由外的经验引来之经验的概念。盖某种感觉之与“在我以外之某某事物”（即占有“我自身所在之空间”中别一部分之某某事物）相关，及我之能表现某某事物之在外而又相互并存（即不仅相异而又在不同之位置），皆必须以空间表象为其前提。故空间表象非自外的现象关系由经验得来者。反之，此一外的经验自身，乃仅由空间表象而始可能者也 此二者是否真实存在？空间乃存于一切外的直观根底中之必然的先天表象。吾人固能思维空间为空无对象，然绝不能想象空间之不存在。故必须视空间为“所以使现象可能”之条件，而不视之为“依存于现象”之规定。空间乃必然的存于外的现象根底中之先天的表象 或仅事物之规定或关系，且即不为吾人所直观，但仍属于事物者钦？空间非普泛所谓事物关系之论证的或吾人所谓普泛的概念，乃一种纯粹直观。盖因第一、吾人之所能表现于吾人自身者，仅有一空间；至若吾人所言及之种种空间，意盖指“同一之单一空间”之各部分。第二、部分空间决不能先于包括一切之唯一空间而有类乎能构成此唯一空间之成分；反之，此等部分空间仅能在唯一之空间中思维之。空间本只有一；至空间中之杂多，以及种种空间之普泛概念，则唯依据其所加入之制限耳。由是言之，在一切空间概念之根底中，乃一种先天的而非经验的之直观。准此以推，例如“三角形中两边之和大于其第三者”之几何命题，决不能从线及三角之普泛概念引来，乃仅自直观得来，至此种直观实为先天的，且具有必然的正确性者。 抑或空间与时间仅属直观之方式，因而属于心之主观性质，离此主观性质则将无所归宿者钦？ 几何学乃综合的且又先天的规走“空间性质”之学。于是为使此类空间知识可能，吾人所有之空间表象，应为何种表象？此种空间表象，其起源必为直观。且此直观必须为先天的，即必须在知觉任何对象以前预行存在吾人心中，故必须为纯粹的而非经验的之直观。 顾先于对象自身且对象之概念又能先天的在其中规定之外的直观，何以能存在心中？显见，此直观仅在主观中而为主观之方式的性质，即以此故为对象所激动，始得对象之直接表象（即对象之直观）；故其存在，仅限于其为普泛所谓外感之方式第二节 时间定义：时间概念之玄学的阐明 时间非自任何经验引来之经验的概念。盖若非先假定时间表象先天的存于知觉根底中，则同时或继起之事即永不能进入吾人之知觉中。唯在时间之前提下，吾人始能对于自身表现有一群事物在同一时间中（同时的）或在不同时间中（继起的）存在。 时间乃存于一切直观根底中之必然的表象。吾人能思维时间为空无现象，但关于普泛所谓现象，则不能除去此时间本身。故时间乃先天的所授与者。现象之现实性唯在时间中始可能。现象虽可一切消灭；唯时间（为使现象可能之普遍的条件）本身则不能除去者也。 关于时间关系或“普泛所谓时间公理”所有必然的原理之所以可能，亦唯根据于此先天的必然性。时间仅有一向量；种种时间非同时的乃继续的（正如种种空间非继续的而为同时的）。此等时间原理，决不能自经验引来，盖因经验不能与以严密之普遍性及必然之正确性者。盖吾人仅能谓通常经验之所教示吾人者乃“如是”而非“必须如是”。至此等时间原理乃适用为经验所唯一由以可能之规律；此等规律非由经验而来，乃关于经验训示吾人者。 时间非论证的概念即所谓普泛的概念，乃感性直观之纯粹方式。种种时间乃同一时间之部分；仅能由单一之对象所授与之表象，为直观。且“种种时间不能同时存在”之命题，非由普泛的概念引来。此命题乃综合的，其源流不能仅起于概念。故直接包含于时间直观及时间表象中者。 时间之无限性，意义所在，仅指一切规定的时间量，唯由于其根底中所具之唯一时间有所制限而后可能者耳。故时间之本源的表象，必为无制限者。唯当对象授与时，其各部分及其一切量，仅能由“制限”确定表现之者，则其全体表象决不能由此等概念授与，盖因此等概念仅包含部分的表象；反之，此等概念之自身，则必须依据直接的直观。主旨时间非自任何经验引来之经验的概念时间乃存于一切直观根底中之必然的表象关于时间关系或“普泛所谓时间公理”所有必然的原理之所以可能，亦唯根据于此先天的必然性时间非论证的概念即所谓普泛的概念，乃感性直观之纯粹方式叙述问题","tags":[{"name":"哲学","slug":"哲学","permalink":"http://liaozonglong.github.io/tags/%E5%93%B2%E5%AD%A6/"},{"name":"知识论","slug":"知识论","permalink":"http://liaozonglong.github.io/tags/%E7%9F%A5%E8%AF%86%E8%AE%BA/"},{"name":"认识论","slug":"认识论","permalink":"http://liaozonglong.github.io/tags/%E8%AE%A4%E8%AF%86%E8%AE%BA/"}],"categories":[]},{"title":"数据库","date":"2021-08-12T04:15:52.000Z","path":"wiki/数据库/","text":"基本配置apt-get isntall mysql-server #安装 mysqlservice mysql start #启动服务mysql_secure_installation #初始化配置sudo ufw disable #关闭防火墙ALTER USER ‘root‘@’%’ IDENTIFIED BY ‘123456’; #更改权限以及密码update user set Host&#x3D;’%’ where user&#x3D;’root’ #修改主机信息flush privileges; # 刷新权限参考资料：Ubuntu18.04 下安装 MySQL - OpsDrip - 博客园​创建用户CREATE USER ‘username‘@’host’ IDENTIFIED BY ‘password’;username：你将创建的用户名host：指定该用户在哪个主机上可以登陆，如果是本地用户可用 localhost，如果想让该用户可以从任意远程主机登陆，可以使用通配符%password：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器参考：​MySQL 创建用户与授权 例子：字符集与排序规则一般选择 utf8+utf_bin参考资料：MySQL - 新建数据库的字符集与排序规则说明​ 数据库字符类型DATE # YYYY-MM-DD 日期值参考资料：MySQL 数据类型","tags":[{"name":"数据库","slug":"数据库","permalink":"http://liaozonglong.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"categories":[]},{"title":"虚拟专用通道","date":"2021-08-12T04:15:52.000Z","path":"wiki/虚拟专用通道/","text":"​ 虚拟专用通道 添加“网络策略和访问服务”“远程访问” 2. 勾选“网络策略服务器”该服务默认勾选3. 勾选“DirectAccess 和 VPN(RAS）”和“路由”4. 打开向导5. 仅部署 VPN6. 选择“配置并启动路由和远程访问”7.“自定义配置”8.“VPN 访问”和“NAT” 9.选择“外网出口” 10.选择“公用接口连接到 Internet”并勾选“在此接口上启用 NAT” 11.右键选择“属性” 12.创建一个新用户并选择“网络访问权限”为“允许访问” 无法启动路由和远程访问的解决办法将 Windows Firewall 和 Internet Connection Sharing (ICS)关闭，若无关闭，打开再关闭即可​ VPN 拨号提示已经拒绝远程连接，因为未识别出你提供的用户名和密码组合，或在远程访问服务器上禁止使用选定的身份验证协议打开这些","tags":[{"name":"服务器","slug":"服务器","permalink":"http://liaozonglong.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"虚拟专用通道","slug":"虚拟专用通道","permalink":"http://liaozonglong.github.io/tags/%E8%99%9A%E6%8B%9F%E4%B8%93%E7%94%A8%E9%80%9A%E9%81%93/"}],"categories":[]},{"title":"股票","date":"2021-08-12T04:15:52.000Z","path":"wiki/股票/","text":"上卷卷首语学习系统性知识。将所有领域的相关知识浓缩为可以直接运用于市场的原则， 复杂的体系可以简化为相对单纯易于操作的基本思想。选定一个目标，不断模仿他，最终会形成一种属于自己的独特的风格。以市场行情为主要导向，价值为辅助。但记住知识本身绝对不是成功的保证。除了知识，你还需要一套执行知识的管理计划以及严格遵守计划的心理素质，这样才可以免除情绪的干扰。 第一篇 建立基本知识赌博例的奥秘是：如果你希望获胜，你就必须了解规则；另外，你还必须愿意坐上赌桌，这样你才有获胜的机会。这也是重点，除非你拥有知识，否则你无法制定计划，除非你制定计划，否则你的知识便是无用的。在金融市场中，这意味着：获得相关的知识，界定操作的哲学，建立资金的管理方法，并严格遵守明确的规定，拟定每天的例行决策 生命应该是一种平衡而协调的过程。重点并不在于你赚了多少钱，而是你整体的快乐程度(专业投机原理) 成功与快乐来自于自我潜能的实现，并认识到错误是不可避免的过程，甚至是生命的一部分（利弗莫尔）在市场上,能依靠的只有自己的经验知识,除此之外,做什么都是错.知识既是力量,力量不必害怕谎言.遵循眼前的事实,把事情做对,态度决定能走多远（利弗莫尔） 第一章 一位专业投机者的历程短期趋势：它可能持续数天至数个星期；中期趋势：它可能持续数个星期至数个月；长期趋势：它可能持续数个月至数年。这对应交易者、投机者、投资者。这三者的行为互相重叠，经过调整，他们也可以转变成别的类型的交易员。但不根据中期趋势投资组合的结构，都是相当愚蠢的。虽然投机艺术各有不同，但真正成功的玩家都有一套类似的工具：根据一套有效性始终不变的基本理念与知识拟定决策测 综合了各方面的知识，包括：胜算、市场与交易工具、技术分析、统计概率、经济学、政治学、人类心理学以及哲学。我花了 10 年时间获得相关知识，并将它们组织为系统化的格式。 判读盘势的智慧 在那个年代，大多数著名交易员与投机者都是以判读盘势交易的。阅读这方面有限的图书，并练习看盘，记忆许多不同的股票的最近价位。通过不断地练习，开始对市场产生感觉了。判读盘势是现代技术分析的雏形。判读盘势需要依赖模式的认定。模式认定主要是依靠潜意识，二意识的判断相对并不重要。这犹如体育比赛一样，当你停下来思考应该如何做时，你立刻就会丧失注意力。你在潜意识中还必须知道价量跳动的速度与节奏、个股发布新闻的频率、大盘的知识等等。所有这些因素构成的潜意识结论，就是通常所谓的“市场直觉” 由于信息技术的进步判读盘势已经成为历史。我相信，这种需要特殊才华的判读盘势能力， 目前已经不切实际，而且也没有必要了，场内交易员或许是唯一的例外。因此，交易已经成为一种更加开放而且竞争更加激烈的领域 然而，所有看盘高手目前仍然掌握一种优势。在拟定交易决策时，你必须绝对相信自己的正确性，但你还必须接受这一事实：市场可以证明你是错误的。换言之，在被证明为错误之前，你绝对正确。因此，你必须根据原则与法则交易，任何感觉或愿望都不得干涉这一程序。在买进或卖空时，你都必须扪心自问：”在哪个价位上，市场将证明我是错误的？“一旦确定这一价位，市场又触及此价位时，没有任何理由可以阻止你出场。这时最根本的法则：迅速认赔 资金管理 在交易时，我永远要求风险&#x2F;回报的比率至少为 1:3。在我所采用的各种策略中，当判断正确时，我可以获得巨额的利润；若判断错误，损失却相当有限——这便是资金管理的要点所在 探索趋势的性质 市场周期道氏理论长期趋势最为重要，也最容易辨认、归类与了解中期趋势对投资者来说较为次要但却是投机者的主要考虑因素。短期最难预测，唯有交易者才会随时考虑它.这三种趋势必然同时存在,彼此的方向可能相反斯波朗迪不根据中期趋势投资组合的结构，都是相当愚蠢的利弗莫尔人为操控，指数，次级趋势可能被操控。但主要趋势绝对不会受到人为的操纵。Me从已知的是，周期越短，混乱程度越高，越近似抛硬币。斯波朗迪更强调市场趋势，而道氏理论更带理论的正确色彩。因此斯波朗迪是想说，即不要参与赌博，但也不要不下注，结合它其他思想，即在赔率合适时下注 主要趋势道氏理论主要走势代表整体的基本趋势,通常被称为多头或空头市场,持续时间可能在一年以内,乃至数年之久.正确判断主要走势的方向,是投机行为成功与否的最重要因素.没有任何已知的方法可以预测主要走势的持续期限​ 主要的空头市场是长期向下的走势,其中夹杂着重要的反弹.它来自于各种不利的经济因素,唯有股票价格充分反映可能出现的最糟情况后,这种走势才会结束.空头市场会经济三个主要阶段:第一阶段,市场参与者不再期待股票可以维持过渡膨胀的恶价格;第二阶段,卖压实反映出经济状况与企业盈余的衰退;第三阶段,来自于健全股票的失望性卖压,不论价值如何,许多人都会急于对所持的一部分股票求现 主要的多头市场是一种整体性上涨走势,其中夹杂着次级的折返走势,平均的持续期限长于两年.在此期限内,因为经济情况好转与投机活动转盛,所以投资性欲投机性的需求增加,并因此推高股票价格.多头市场有三个阶段:第一阶段,人们对未来的景气恢复信息;第二阶段,股票对已知的公司盈余改善产生反应;第三阶段,投机热潮转炙而股票明显膨胀_这阶段的上涨是基于期望与希望的​ 次级折返走势,就此出的讨论来说,次级折返走势是多头市场中重要的下跌走势,或空头市场中重要的上涨走势,持续的时间通常在三个星期至数个月.此期间内折返的幅度为前一个次级折返走势结束后之主要走势的 33%~66%.次级折返走势经常被误以为是主要趋势的改变,因为多头市擦痕能够的初期走势显然可能只是空头市场的次级折返走势,相反地情况则会发生在多头市场出现顶部后​ 利弗莫尔两种市场指数必须相互确认 Me第一阶段，理性发现；第二阶段，市场追随现实；第三阶段，情绪阶段​ 活动距离斯波朗迪我首先必须界定、衡量、归纳所有趋势与修正走势，并设定一个标准作为“通常”的定义。我利用所有空闲时间来研究市场历史，这些研究是以道氏理论为主轴，因为我认为这套理论对市场走势界定最明确 情绪管理斯波朗迪当我观察许多不同交易员时，开始了解这个行业中的许多不同层面：哪些在工作中不能控制自己情绪的交易员会付出严重的个人代价。​ 利弗莫尔作为交易者,要战胜的包括他自己它向上或向下的幅度通常如何？修正的走势有何性质？它通常会持续多久？” 斯波朗迪我在预测行情时，并不是采用单一的分析方法。我永远都会结合技术分析、统计方法以及经济基本面等因素，评估任何投机头寸的风险。唯有这三个因素相互配合时，我才会在市场中建立重要头寸。另外，了解政府当局对市场的既定或潜在干预成都，对投机的成败来说也有绝对的重要性 第一章 鳄鱼原则&#x2F;重点思考的必要性:原则的必要性斯波朗迪鳄鱼原则:当你知道自己犯错时，立即了结出场！不可找借口、期待、祈祷或采取其他任何动作，赶紧立场……不可试图调整头寸、避险或其他无谓的措施，赶紧认赔出场 重点思考的必要性:原则的必要性：根据对现在事件的分析，预测长期的未来；以适用近期与过去历史的同一个概念，了解现在发生的事件辅助原则：一种概念，它直接来自于一个更根本的原则​ 在任何领域，明智的决策都需要依赖基本知识，使所有事件都可以诉诸这个统辖因果关系的根本概念中。在金融市场中，基本知识代表的是价格走势与价格趋势的原则。他们代表市场的普遍性质，并界定各个不同市场的特质掌握这种知识，需要持续将明确的事件转化为抽象的概念，并将抽象的原则套用在实际的事件上：根据对现在事件的分析，预测长期的未来；以适用近期与过去历史的同一个概念，了解现在发生的事件。我称这种程序为“根据重点思考”，或“根据原则思考”​ 重点未必在于你知道多少，而在于你知道内容的真实性与相关性。信息如此繁多，处理所有资料并了解它们所代表的意义，实在超出人类心智的能力范围​ 简化资料的方法之一就是专精于其中一两个领域。另一种方法时运用第难熬处理组织与筛选的工作。但是，不论如何简化资料，处理信息的关键还是在于：如何从每天无数的资料中提取出重点为了掌握这种能力，你必须以原则来统辖信息，原则是界定金融市场性质的基本概念。原则是在无数特定事件与无数相关资料中，抽象化的一种普遍性概念。复杂的市场资料在原则的统辖下，将变得相对单纯而易于处理 认定你应该根据原则思考是一回事，而如何认定又是另一回事。在阅读有关金融市场的图书与杂志时，你会发现每个“专家”都有各自的看法，而且经常相互矛盾。我们每天都可以听到的名词为例：多头市场、空头市场、趋势……金融业内人士大多都知道他们，但很少有人可以明确界定这些名词。然后，界定这些名词不仅是一种概念化的程序，更是了解市场的基本步骤，并认定统辖他们的原则​ 利弗莫尔你必须以原则来统辖信息使用分析原则，找到胜算，站在胜算的一边​ 第三章 一致性成功的事业经营哲学斯波朗迪人们在市场中发生亏损，虽然有很多原因，但又一个最严重、也最容易触犯的错误，那便是把过多的风险资本投入单一的头寸——孤注一掷。这种错误之所以产生，是因为人们在交易前，并没有为自己设定一种经营事业的哲学​ 保障资本斯波朗迪作为交易者，我的目标始终是：在经济独立的情况下保有自由，换句话说，我的目标是：经年累月地稳定赚钱。一位谨慎的企业家首先便希望能够维持他的日常开销，然后再追求盈余的稳定成长。​ 我的哲学基于三个原则，按重要性排列如下：保障资本、一致性的获利能力以及追求卓越的汇报。这三者是我的基本原则，因为他们是所有市场决策的最高指导原则。在我的投机策略中，每一个原则都有不同的分量，而且彼此之间有衔接的关系。 在我的事业哲学中，保障资本是最核心的原则。换言之，在任何潜在的市场活动中，风险是我考虑的最重要的因素。在我问“可以实现的潜在利润如何”之前，我会先考虑“我所可能遭受的潜在亏损如何”。就风险&#x2F;回报的角度思考，最大的可接受比例为 1:3.如果市场风险&#x2F;回报情况很差，我就会持有现金。我不关心我的业绩是否可以“超越大盘指数或平均水平”。我追求绝对的回报，而不是相对回报​ 一致性的获利能力一致性的获利能力是保障资本的辅助原则 市场不会永远位于顶部或底部的附近。一般来说，在任何市场的多头行情顶部与空头行情底部之间， 优秀的投机者或投资者应该可以掌握长期价格趋势的 60-80%。这段时期内，交易重点应该放在低风险的一致性获利​ 例如，假定你是以季度为基础操作。在季度的开始，任何新头寸的规模都应该很小（相对于风险资本而言），因为当期还没有累积获利。另外，你应该预先设定承认自己错误的出场点，一旦行情触及这个价位，你便应该认赔出场。如果第一笔交易发生亏损，任何新头寸都应该根据损失而按比例缩小。依此交易方法，在任何季度结束时，你都不会亏损所有的风险资本——你永远都还有筹码。反之，如果你又获利，应该将一部分获利运用在新头寸上，并将其余获利存入银行。这样，你不但可以增加获利的潜力，还可以保障一部分的获利任何人进入金融市场，如果他预期将有一半以上的交易会获利，该预期会被很突然地醒悟。你不妨从棒球的角度思考——最佳选手的打击率也只不过时 30%-40%。​ 追求卓越的回报当我已经获利时，仍然运用相同的推理程序，但会进一步追求卓越的回报。唯有当回报与风险之间存在合理的关系时，我才会以更大的风险追求更高的资本回报率。这并不意味着我改变了风险&#x2F;回报准则，我仅是增加了头寸的规模​ 小结斯波朗迪保障资本、一致性的获利能力以及追求卓越的回报，虽然这是三个比较简单的原则，如果你确实了解其中的精髓，他们将会指导你在市场中的获利。然而，如果要实际地运用这些理念，你还需要更多的知识。最佳的起点时了解市场价格走势的性质。一个人要希望真正了解市场的行为，他需要拥有一套不可或缺的知识：道氏理论​ 第四章 在混沌的市场中寻找秩序利弗莫尔 本质而言.只需答两问题. “是怎样”和“应怎样” 投机其实就是预测即将到来的市场运动.但要等市场变化验证观点才进场 意见千错万错,市场永远不错.对于一些信息而言,可以从历史演变记录寻找答案 思想同时可以有千万个,但行为只能有一个.学习技术分析,本质就是学操作规程.而操作规程更多是一种经验总结.对待操作规程,首要一条就是照着做.随着实际的变化,参数可以适当调整,但万变不离其宗.原因道理第二 回溯历史行情，在相似情况下发生了什么。确定入场关键点，这样有相当把握从开头就盈利，如果没在开头就进入，那么很可能不能在这波行情中获得大收益，但一定要等待到关键点，过早过晚，只会是赔钱 通过历史行情检验新点子,通常这些点子都没用.但检验多了,某种合理性在生成,随着时间推移.越来越清晰,最终变成一个指南针 斯波朗迪 市场预测属于概率的范畴,判断错误的风险永远存在.你最多仅能将风险降至最低,并将知识提升至最高，了解可能导致未来事件的最初状况 投机者的基本工作是辨识主要的影响因素,他们会驱动或改变市场参与者的主要看发,而市场指数是这方面最理想的工具,因为他会反映大众对金融事件的看法 你永远都无法以绝对的必然性来预测市场构成分子对某些事件的总体反应,也无法预测市场将会产生什么新情况.但是,混沌中也有秩序,寻找其中的秩序便是投机者的工作 道氏理论斯波朗迪道氏理论就像预测气象的气压计,他可以在概率的范围内,协助我们预测未来事件.他不会告诉你,变动发生的原因,但可以显示变动之前的征兆.他无法告诉你未来势必将如何发展,但可以提供未来较可能的发展情况.然而,气压计本身无法提供任何有关降雨量的资料,气压与稳定之间也没有高度的相关性.同理,虽然市场指数是经济预测的基本工具,但我们还需要许多辅助信息才可以解开谜底​ 雷亚在所有相关著述中都强调,氏理论在设计上时一种提升投机者或投资者知识的助手或工具,并不是一种可以脱离经济基本条件与市场现状的全方位的严格技术理论.根据定义,道氏理论时一种技术理论,换言之,它是个根据对价格模式的研究,推测未来价格行为的一种方法. 道氏理论的“假设”雷亚根据雷亚的看法,道氏理论建立在三个基本假设之上,他们必须被”毫无保留地”接受: 人类操纵是指指数每天的波动可能受到人为的操纵,次级折返走势也可能受到这方面有限的影响,但主要趋势绝对不会受到人为的操纵 市场指数会反映每一条信息:对一位对于金融事务有所了解的人,他所有的希望\\失望与知识,都会反应在道金斯铁路指数与道金斯工业指数每天的收盘价波动中;基于这个缘故,市场指数永远会适当地预测未来事件的影响(上帝的旨意除外).如果发生火灾或地震等自然灾害,市场指数也会迅速加以评估 这项理论并非不会错误是指道氏理论并不是一种万无一失而可以击败市场的系统.成功地利用他协助投机行为,需要深入的研究,并客观地综合判断.绝对不可以让一厢情愿的想法主导思考 道氏理论的“定理”雷亚 道的三种走势：市场指数又三种走势，三者可以同时出现。第一种走势最重要，它是主要趋势，整体向上或向下的走势被称为多头或空头市场，期间可能长达数年。第二种走势最难以捉摸，他是次级的折返走势，是主要多头市场中的重要下跌走势，或是主要空头市场中的反弹。修正走势通常会持续三个星期至数个月。第三种走势通常较不重要，他是每天波动的走势 ​ 斯波朗迪 股票指数与任何市场都有三种趋势：短期趋势，持续数天至数个星期；中期趋势，持续数个星期至数个月；长期趋势，持续数个月至数年。在任何市场中，这三种趋势必然同时存在，彼此的方向可能相反。 长期趋势最为重要，也最容易被辨认、归类与了解。他是投资者主要的考虑因素，对投机者来说较为次要。中期与短期趋势都附属于长期趋势之中 中期趋势对投资者来说较为次要，但却是投机者的主要考虑因素。如果中期趋势严重背离长期趋势，则被视为次级的折返走势或修正。次级折返必然谨慎评估，不可将其误认为是长期趋势的改变 短期趋势最难预测，唯有交易者才会随时考虑它。投机者与投资者仅在少数情况下，才会关心短期趋势：在短期趋势中寻找适当的买进或卖出事件，以追求最大的获利，或尽可能地减少损失 我认为，对金融市场的参与者而言，以中期趋势作为准则应该是较为明智的选择。——如果希望精确掌握中期趋势，你必须了解它与长期（主要）趋势之间的关系 雷亚 主要走势代表整体的基本趋势，通常被称为多头或空头市场，持续事件可能在一年以内，乃至数年之久。正确判断主要走势的方向，是投机行为成功与否的最重要因素。没有任何已知的方法可以预测主要走势的持续期限 ​ 斯波朗迪了解长期趋势（主要趋势）是成功投机或投资的最起码条件。虽然没有明确的预测方法，但可以利用历史上的价格走势资料，以统计方法归纳主要趋势与次级的折返走势虽然近半世纪以来的科技与知识有了突破性的发展，但驱动市场价格走势的心理性因素基本上仍相同。这对专业投机者来说具有重大的意义：目前面临的价格走势、幅度与期限都非常可能落在历史对应资料平均数的有限泛微内。如果某个价格走势超出对应的平均数水平，介入该走势的统计风险便与日俱增。若经过适当的权衡与运用，这项评估风险的知识可以现住地提高未来价格预测在统计上的精确性 雷亚 主要的空头市场是长期向下的走势,其中夹杂着重要的反弹.它来自于各种不利的经济因素,唯有股票价格充分反映可能出现的最糟情况后,这种走势才会结束.空头市场会经济三个主要阶段:第一阶段,市场参与者不再期待股票可以维持过渡膨胀的恶价格;第二阶段,卖压实反映出经济状况与企业盈余的衰退;第三阶段,来自于健全股票的失望性卖压,不论价值如何,许多人都会急于对所持的一部分股票求现 在空头行情末期，市场对进一步的利空消息与悲观论调已经产生了免疫力。然后，在严重挫跌之后，股价也似乎丧失了反弹的能力，各种征兆都显示，市场已经达到了均衡的状态，投机活动不活跃，卖出行为也不会再压低股价，但买盘的力道显然不足以推升价格……市场被笼罩在悲观的气氛中。股息被取消，某些大型企业通常会出现财务困难。基于上述原因，股价会呈现窄幅盘整的走势。一旦这种窄幅走势明确向上突破……市场指数将会出现一波比一波高的上升走势，其中夹杂的跌势都未跌破前一波跌势的低点。这时……明确显示应该建立多头的投机性头寸。这项观察也适用于商品市场，当然，不包括其中有关股息的陈述 斯波朗迪 重要的反弹（次级的修正走势）：是空头市场的特色，但不论是“工业指数”还是“运输指数”，都绝对不会穿越多头市场的顶部，两个指数也不会同时穿越前一个中期走势的高点不利的因素：指（几乎毫无例外）政府行为的结果：干预性立法、非常严苛的税收与贸易政策、不负责任的货币或（与）财政政策以及重要战争 1234567我个人也曾根据道氏理论将1896年至目前的市场指数加以归类，在此列举空头市场的某些特质： a. 由前要给多头市场的高点算起，空头市场跌幅的平均数为29.4%，其中75%的跌幅介于20.4-47.1之间 b. 空头市场持续期限的平均数是1.1年，其中75%的期限介于0.8-2.8年之间 c. 在空头市场开始时，随后通常会以偏低的成交量“试探”前一个多头市场的高点，接着出现大量急跌的走势。所谓“试探”是指价格接近而绝对不会穿越前一个高点。“试探”期限，成交量偏低显示信息减退，很容易演变为“不再期待股票可以维持”过度膨胀的价格 d. 经过一段相当程度的下跌后，突然会出现急速上涨的次级折返走势，接着便形成窄幅盘整而成交量缩小的走势，但最后仍将下滑至新的低点 e. 空头市场的确认日，是指两种市场指数都向下突破多头市场最近一个修正低点的日期。两种指数突破的事件可能有落差，但这并不是不正常的现象 f. 空头市场的中期反弹，通常都呈现颠倒的“V”形，其中低价的成交量偏高，而高价的成交量偏低 雷亚 主要的多头市场是一种整体性上涨走势,其中夹杂着次级的折返走势,平均的持续期限长于两年.在此期限内,因为经济情况好转与投机活动转盛,所以投资性欲投机性的需求增加,并因此推高股票价格.多头市场有三个阶段:第一阶段,人们对未来的景气恢复信息;第二阶段,股票对已知的公司盈余改善产生反应;第三阶段,投机热潮转炙而股票明显膨胀_这阶段的上涨是基于期望与希望的 ​ 斯波朗迪多头市场的特色是所有主要指数都持续联结走高，拉回走势不会跌破前一个次级折返走势的低点，然后再继续上涨以创新高价。在次级的折返走势中，指数不会同时跌破先前的重要低点。 123456主要多头市场的重要特质如下： a. 由前一个空头市场的低点算起，主要多头市场的价格涨幅平均数为77.5% b. 主要多头市场的期限长度平均数为2年4个月(2.33年)。在历史上所有多头市场中，75%的期限长度超过657天（1.8年），67%介于1.8-4.1年之间。 c. 多头市场的开始以及空头市场最后一波的次级折返走势，这两者之间几乎无法区别，唯有等待时间确认。参考上述雷亚的平均，但把“在空头行情的末期”改为“在多头市场的初期” d. 多头市场中的次级折返走势，跌势通常比先前与前后的涨势都剧烈。另外，折返走势开始的成交量通常相当大，但低点的成交量则偏低 e. 多头市场的确认日是两种指数都向上突破空头市场前一个修正走势的高点，并持续向上挺升的日子 雷亚 次级折返走势，就此处的讨论来说，次级折返走势是多头市场中最重要的下跌走势，或空头市场中重要的上涨走势，持续时间通常在三个星期至数个月。此期间内折返的幅度为前一个次级折返走势结束后之主要走势幅度的 33-66%。次级折返走势经常被误以为是主要走势的改变，因为多头市场的初期走势显然可能只是空头市场的次级折返走势，相反的情况则会发生在多头市场出现顶部后 斯波朗迪次级折返走势（也被称为修正走势）是一种重要的中期走势，它是逆于主要趋势的重大折返走势。判断何为逆于主要趋势的“重要”中期走势，这是道氏理论中最微妙与困难的一环。对信用高度扩张的投机者来说，任何误判都可能造成严重的财务后果在判断中期趋势是否为修正走势时，需要观察成交量的关系、修正走势之历史 概率的统计资料、市场参与者的普遍态度、各个企业的财务状况、整体状况、美联储的政策以及其他许多因素。走势在归类上确实有些主管成分，但判断的精确性却关系重大。一个走势究竟属于次级折返走势，或是主要趋势的结束，我们通常很难甚至无法判断 123我个人的研究与雷亚的看法相当一致大多数次级折返走势的幅度，约为前一个主要走势的波段（两个次级折返走势之间的主要走势）的1/3-2/3之间，持续时间则在三个星期至三个月之间。对历史上所有次级折返走势来说，其中61%的折返幅度约为前一个主要走势波段的30-70%，其中65%的折法期限介于三个星期至三个月之间，而其中98%介于两个星期至八个月之间。价格的变动速度是另一个很明显的特色，相对于主要趋势而言，次级折返走势有暴涨暴跌的倾向次级折返不可与小型折返走势相互混淆，后者经常出现在主要与次级的走势中。小型折返是逆于中期趋势的走势。在98.7%的情况下，持续的期限不超过两个星期（包括周末休息日在内）。他们对中期与长期趋势几乎完全没有影响。截止到1989/10月，“工业指数”与“运输指数”在历史上共有694个中期趋势（包括上涨与下跌），其中仅有9个次级折返走势的期限不足两个星期 在雷亚对次级折返走势的定义中，有一个关键的形容词：“重要”。一般来说，如果任何价格走势起因于经济基本面的变化，而不仅是技术面的调整，而且其价格变化幅度超过前一个主要走势波段的 1&#x2F;3，都称得上重要​ 雷亚将次级折返走势比喻为锅炉中的压力控制系统。在多头市场中，次级折返走势相当于安全阀，它可以释放市场中的超买压力。在空头市场中，次级折返走势相当于为锅炉添加燃料，以补充超卖流失的压力​ 小结斯波朗迪道氏理论并不是一种具备绝对包容性的市场预测方法，但任何态度严肃的投机者都不应该忽略该知识。在研究道氏理论的基本原理之后，我们便具备了一种基本的知识，即了解如何根据目前与历史的市场指数来评估未来的价格走势。我们对趋势已经有了较为普遍的认识。我们知道，任何市场都同时存在三种活跃的趋势，他们的相对重要性对交易者、投机者与投资者来说各自不同了解这些概念之后，可进一步探讨价格的趋势。毕竟，如果你知道何谓趋势，而且还知道他在什么时候最有可能发生变化，你实际上就已经掌握市场获利的全部知识了。以中期趋势作为准则应该是较为明智的选择。——如果希望精确掌握中期趋势，你必须了解它与长期（主要）趋势之间的关系 第五章 趋势的定义上升趋势，下降趋势，趋势的意义斯波朗迪如果有人问我对趋势的看法，你认为我将如何回答？最合理的答案是：“你是针对哪一种趋势而言”如果你并不真正了解何谓趋势，那么你几乎可以随机绘制任何去实现，但根据这种“趋势线”所作出的结论并无用处在道氏理论中，你能得到的最重要知识之一可能就是它对趋势的定义，但这仅蕴涵在说明中，并未明文解释​ 简化为基本点道将趋势划分为三类：长期趋势、中期趋势与短期趋势雷亚上涨趋势：由一系列连续的涨势构成，每一段都持续向上穿越先前的高点，中间夹杂的下降趋势（换言之，跌势）都不会向下突破前一波跌势的低点。总之，上升趋势是由高点和低点都不断垫高的一系列价格走势构成的下降趋势：由一系列连续的跌势构成，每一段都持续向下穿越先前的低点，中间夹杂的上升趋势（换言之，涨势）都不会向上穿越前一波涨势的高点。总之，下降趋势是由低点和高点都不断下滑的一系列价格走势构成的​ 斯波朗迪他们非常简单，却具有绝对的重要性。他们是普遍性的定义，可以适用于任何市场与任何时间结构然而，上述定义（上涨趋势与下降趋势）定义并未明确说明，如何确定先前的高点与低点。这完全取决于你的交易活动是专注于短期趋势、中期趋势还是长期趋势。换言之，你究竟是从事交易、投机还是投资不论你参与的哪一种市场或哪一种时间结构，除非你知道趋势的方向并了解如何判断趋势的变化，否则你不可能获利（运气除外）​ 验证的重要性斯波朗迪在股票市场的交易中，存在一种最严重的错误，那便是仅根据一种指数的走势作出判断。背离：某一市场指数出现反转走势达数个星期或数个月之久，另一种指数却呈现相反方向的走势。它仅有负面性质的用途​ 雷亚两种市场指数必须相互验证，即铁路指数与工业指数的走势永远应该一起考虑。一种指数的走势必须得到另一种指数的确认，这样才可以做出有效的推论。仅根据一种指数的趋势判断，另一种指数并未确认，结论几乎是必然错误的。​ 斯波朗迪雷亚在 1932 年提出这个观点。目前，除了道金斯工业指数与道金斯铁路之外，我们还有标普 500、价值线指数、主要市场指数、债券指数……所以，上述原则经过更新之后，“两种市场指数必须相互确认”应该改为“所有的相关指数都必须相互确认”​ 行情的四个阶段斯波朗迪我称为信号的两个关键指标分别是窄幅盘整与成交量关系。任何市场都必然处于四种技术阶段之一：（1）承接（长期投资者的买进）；（2）出货（长期投资者的卖出）；（3）向上或向下的趋势；（4）整理（在经过确认的趋势中，发射管获利了结之后的调整）。以另一种方式说明，如果市场并无趋势，便是处于窄幅盘整的走势。​ 雷亚窄幅盘整是长达两三个星期及以上的价格走势，在此期间，两种指数大约都在 5%的价格区间内波动。这种走势可能代表承接或出货。当两种指数同时向上穿越盘整区间的上限时，代表是承接的盘整，而价格应该继续走高；反之，当两种指数同时向下穿越盘整区间的下限时，代表时出货的盘整，价格应该继续走低。如果仅根据一种指数判断，另一指数并未确认，结论通常都是错误的​ 斯波朗迪窄幅盘整的走势通常发生在中期行情的顶部或底部，在这种情况下，雷亚的定义完全适用。在主要的市场顶部，拥有较佳信息而态度谨慎的长期投资者，试图在一段时间内出清（非常大量的）投资组合，又不希望明显压低价格。由于当时市场上的多头投机气氛仍然相当浓厚，他们可以分批出货，将筹码转手给交易者与投机者。因此，在数个星期及以上的时期内，价格将窄幅波动且没有明显向上或向下的趋势，这便形成了窄幅盘整的走势。这也可能发生在某特定的个股或商品市场上。最后，当市场共识认为价格将下跌时，将穿越窄幅盘整的下限。就市场术语来说，这就是突破——卖空股票或商品的绝佳时机​ 在主要的市场底部经常也会发生相同的情况，但方向相反。当价格大幅下跌后，明智的长期投资者认为当时的股票价格具有长期投资的价值，于是开始建立大规模的头寸。或许是为了试盘，或许是不希望推升股价，他们在数个星期至数个月的时期内，默默地承接股票。结果也会形成窄幅盘整的走势。最后，当市场共识认为价格将上涨时，将穿越窄幅盘整的上限。就市场术语来说，这就是突破——买进股票或商品的绝佳时期。在观察每天的价格波动时，突破是唯一对每一种市场参与者（不论是交易者、投机者还是投资者）来说都是很重要的走势。犹如雷亚的评论：​ 雷亚每天的波动，根据单日的指数波动推论，几乎必然是错误的，而且也没有什么价值，唯有窄幅盘整的走势例外。然后，每天的价格走势都应该加以记录，因为一系列的单日走势最后必然会发展成为一种易于辨认且具有预测价值的模式​ 斯波朗迪在某些情况下，顶部或底部形成后，趋势往往会突然改变，没有经过窄幅盘整的期间。另外，窄幅盘整的走势有时也会发生在经过确认之主要趋势的中间。这可能是源于下列两个原因中的一个：当价格走势（上涨或下跌）相当陡峭，许多交易者与投机者获利了结时，便造成趋势暂时停顿；或者，市场对未来发展并不确定、分歧的看法使得价格维持在相对固定的价位。第一种情况，我称之为整理；第二种情况，我称之为等待行情​ 重要的成交量关系雷亚成交量与价格走势的关系，在超买行情中，会出现价涨量缩而价跌量增的现象；相反，在行情处于超卖行情时，会出现价跌量缩而价涨量增的现象。在多头市场结束期间会出现活跃的交易，在开始期间则交易相对冷清​ 斯波朗迪根据定义，在超卖行情中，价格主要受到感觉、希望与预期的驱动，但并非基于健全的经济判断与价值考虑、在这种情况下，行我咋明确信息的人已经离开市场，一般参与者的热情也会逐渐冷却。市场已经具备恐慌的条件，只要出现些许的征兆，便足以引发层层卖压。所以，在超买行情中，通常会出现价涨量缩而价跌量增的走势。超卖情况也适用类似而反向的推理​ 下一个步骤是将这些知识（尤其是趋势与趋势变化的知识）简化为一种单纯而易于管理的系统。我将会提出一种独特而且非常单纯的图形系统。该系统是以模式认定为基础的，所以它是一种技术方法。然而，提出该系统以前，我需要先说明技术分析方法的优点与缺点​ 第六章 技术分析的优点与缺点斯波朗迪华尔街中充满了技术分析者，他们都试图运用可能重复出现的模式，预测未来的市场走势。这些模式之所以发生，并没有涉及什么神秘的理由。从心理角度来说，人们通常会以一致性的方式来对一组类似情况作出反应。然而，人类心理非常复杂，而且没有任何两组市场情况会完全相同。所以，利用技术分析预测未来的市场行为，在态度上必须非常谨慎​ 一方面，它是拟定市场决策的重要辅工具，使你可以掌握所有胜算。另一方面，投资或投机行为若单独以它作为主要的评估方法，则技术分析不仅无效，而且还可能会产生误导的作用​ 技术分析本身显然无法从根本重点上思考。每位技术分析专家对于模式的解释都各自不同，而且都可以提出自己的故事。根据我个人的观点，我们仅需要一些最根本的技术分析原则，并以他们作为辅助工具。一套真正有效的系统，应该蕴含严谨而健全的经济基本面分析，以及对于个别证券与商品的评估方法，再纳入根本的技术分析精髓​ 波浪观察者斯波朗迪试图根据盘中价格趋势的起伏而顺势操作。相对来说，他们并不关心经济的状况、个股市盈率或盈余增长或任何其他商品的经济基本面。相对来说，他们并不关心经济的状况、个股市盈率或盈余增长或任何其他商品的经济基本面。他们所有注意力几乎完全放在每天、每个时刻的价格走势方向上。随着趋势的上升、下降或横向发展，他们买进、卖空或保持空仓“趋势是你的朋友”是他们的根本思想。一般来说，他们并不例会任何重要消息，他们仅试图根据压力与支撑掌握趋势在上升趋势中，高于目前价位的先前高点为压力，低于目前价位的先前低点则为支撑在下降趋势中，低于目前价位的先前低点为压力，高于目前价位的先前低点则为支撑——通常是主要交易所内交易员或做市商​ 由于场内交易员大多属于波浪观察者，因此投机者与投机者应该了解他们对短期价格趋势可能造成的影响。在短期内，某只个股或商品的价格，可能仅因为他们之间的互动行为而上涨或下跌数点​ 如果投机者或投资者了解这类波浪观察者的行为与影响，则可将此知识运用于许多方面。首先，场外观察者在报价萤幕发现这类活动时，可以根据盘中价格的循环，设定中期或长期的买卖价位，以提高获利。其次，根据价格走势与基本面之间以及它与大盘之间的关系，可以在中期与长期的持续力道上判断价格走势的“合理性”。最后，波浪观察者活动的性质，代表市场共识的一个关键指标​ 人为操纵者斯波朗迪试图以自身的买卖行为造成价格的变动，并因此而获利，这并没有什么明显的“狡猾”或“不公平”——除非证券交易委员会的想法不同。然而，个人会被判刑，但法人机构则不然。大型的法人机构可以通过庞大金额的买卖，操纵市场的短期价格。他们的目标是通过相关市场的背离价格获利，他们自身的行为经常会诱导后造成背离价格。他们的成功，是利用波浪观察者的心理​ 机构可以掌握理想的买卖时机，在两个市场的上涨与下跌走势中，同时为自己与客户创造客观的获利，再加上佣金的收入与免费的公共关系。最后，市场几乎没有任何变化，不过，却有大笔的资金转手了。法人机构采用各种电脑交易程序，有些非常复杂，他们虽然不完全是为了操纵市场，但总是不当的赚钱手段​ 就公正的原则来说，电脑程序交易蕴含的“不公平性”并不是来自于市场本身，而是来自于政府对市场的任意规范。犹如威廉.欧内尔所说：威廉.欧内尔主管当局允许他们（法人机构）直接与纽约证券交易所的电脑连线，在瞬间之内便可以下达大量的交易指令。……​ 斯波朗迪问题是：这类走势由一个人发动，除了少数人之外，没有人知道整个交易计划，所以目前短线交易非常困难，而且经常演变为掷色子的赌博。精明的投机者可以辨识电脑程式交易的模式，并以此设定最理想的买卖价位。以此方式掌握进出场的时机。相反，在电脑程式交易的威胁下，以“市价”大笔买卖股票或期货，是相当愚蠢的行为 股票市场的跌势形成气候时，电脑程式交易会夸大整个情况的严重性，并造成史无前例的急跌走势这种夸大的跌势，通常被称为集体倒货，所以主要多头走势的顶部附近充满不确定性与风险​ 纯粹派信徒在正式的理论基础上，某些技术分析者相信：价格就是一切，所有关于市场的已知或未来的可知资料都已经包含在市场价格与走势中。这便是纯粹的技术学派信徒。在不同形式与程度上，纯粹的技术学派信徒主张，价格走势中存在一种形而上学的必然性，他们是由命运、上帝、演化或某种宇宙力量决定的，经济分析与预测仅是要寻找正确的相关性或循环结构，阐明这些价格走势的性质​ 试图以严格的循环理论或纯粹的数学方法预测未来，完全忽略市场活动中的主观性质。另外，这种态度也忽略了政府干预与联邦储备政策对长期趋势所造成的明确影响。​ 在某种程度上，这类理论系统确实可以成功地运用于行情预测与分析，这主要是因为他们已经脱离一致性理论需要的严格基础。或许他们的理论结构暂时符合市场的行为性质，因为市场参与者具有某些一致性的行为，在这种情况下，只是短期的技术性观察。或许他们的理论结构非常普遍或界定过于松散，而使用者有相当程度的解释与推论空间​ 就第一种情况来说，以技术分析模型拟定投机或投资决策，并预测未来走势的幅度大小与时间长短，其业绩将缺乏一致性——市况会急速地变化。就第二种情况来说，理论结构实际上将妨碍健全的推论与分析。总之，市况将改变，市场参与者的态度也将改变，这类技术模型终究也会无效在必须再度强度，此处谈论的并不是指所有的技术分析方法与运用，我仅指其中某些学派，他们主张：未来一切都已经预先确定，并因此而能以严格的数学模型来预测未来​ 小结技术分析可以提供重要的信息，但需要以合理的态度来看待它：技术分析是归纳重复发生之价格模式的一种方法。这些价格模式之所以发生，主要是因为市场参与者在拟定决策时，都具备类似的心理结构。在整个历史上，市场对类似情况通常都会产生特定的反应，而技术分析的最大贡献便是提供一种方法， 以衡量这种反应的趋势","tags":[{"name":"股票","slug":"股票","permalink":"http://liaozonglong.github.io/tags/%E8%82%A1%E7%A5%A8/"},{"name":"集合","slug":"集合","permalink":"http://liaozonglong.github.io/tags/%E9%9B%86%E5%90%88/"}],"categories":[]},{"title":"Linux","date":"2021-08-12T04:15:52.000Z","path":"wiki/Linux/","text":"​ 第一章 Linux 是什么由于不同的硬件他的功能函数并不相同，例如 IBM 的 Power CPU 与 Intel 的 x86 架构就是不一样！所以同一套操作系统是无法在不同的硬件平台上面运作的！举例来说，如果你想要让 x86 上面跑的）操作系统也能够在 Power CPU 上运作时，就得要将该操作系统进行修改才行。如果能够参考硬件的能函数并据以修改你的操作系统程序代码，那经过改版后的操作系统就能够在另一个硬件作了。这个动作我们通常就称为“软件移植”！​ 第三章 主机规划与磁盘分区那么是否每个扇区都一样重要呢？其实整颗磁盘的第一个扇区特别的重要，因为他记录了整颗磁盘的重要信息！ 磁盘的第一个扇区主要记录了两个重要的信息，分别是： 主要启动记录区(Master Boot Record, MBR)：可以安装开机管理程序的地方，有 446 bytes 分割表（partition table）：记录整颗硬盘分割的状态，有 64 bytes MBR 是很重要的，因为当系统在开机的时候会主动去读取这个区块的内容，这样系统才会知道你的程序放在哪里且该如何进行开机。 如果你要安装多重引导的系统，MBR 这个区块的管理就非常非常的重要了！ ​ 在计算器概论里面我们有谈到那个可爱的 BIOS 与 CMOS 两个东西，CMOS 是记录各项硬件参数且嵌入在主板上面的储存器，BIOS 则是一个写入到主板上的一个韧体(再次说明， 韧体就是写入到硬件上的一个软件程序)。这个 BIOS 就是在开机的时候，计算机系统会主动执行的第一个程序了！接下来 BIOS 会去分析计算机里面有哪些储存设备，我们以硬盘为例，BIOS 会依据使用者的设定去取得能够开机的硬盘，并且到该硬盘里面去读取第一个扇区的 MBR 位置。MBR 这个仅有 446 bytes 的硬盘容量里面会放置最基本的开机管理程序，此时 BIOS 就功成圆满，而接下来就是 MBR 内的开机管理程序的工作了。这个开机管理程序的目的是在加载(load)核心档案，由于开机管理程序是操作系统在安装的时候所提供的，所以他会认识硬盘内的文件系统格式，因此就能够读取核心档案，然后接下来就是核心档案的工作，开机管理程序也功成圆满，之后就是大家所知道的操作系统的任务啦！ 简单的说，整个开机流程到操作系统之前的动作应该是这样的： BIOS：开机主动执行的韧体，会认识第一个可开机的装置； MBR：第一个可开机装置的第一个扇区内的主要启动记录区块，内含开机管理程序； 开机管理程序(boot loader)：一支可读取核心档案来执行的软件； 核心档案：开始操作系统的功能…由上面的说明我们会知道，BIOS 与 MBR 都是硬件本身会支持的功能，至于 Boot loader 则是操作系统安装在 MBR 上面的一套软件了。由于 MBR 仅有 446 bytes 而已，因此这个开机管理程序是非常小而美的。这个 boot loader 的主要任务有底下这些项目：提供选单：用户可以选择不同的开机项目，这也是多重引导的重要功能！载入核心档案：直接指向可开机的程序区段来开始操作系统；转交其他 loader：将开机管理功能转交给其他 loader 负责。 ​ ​ 在上图中我们可以发现，MBR 的开机管理程序提供两个选单，选单一(M1)可以直接加载 Windows 的核心档案来开机；选单二(M2)则是将开机管理工作交给第二个分割槽的启动扇区(boot sector)。当使用者在开机的时候选择选单二时，那么整个开机管理工作就会交给第二分割槽的开机管理程序了。 当第二个开机管理程序启动后，该开机管理程序内(上图中)仅有一个开机选单，因此就能够使用 Linux 的核心档案来开机啰。这就是多重引导的工作情况啦！我们将上图作个总结： 每个分割槽都拥有自己的启动扇区(boot sector) 图中的系统槽为第一及第二分割槽， 实际可开机的核心档案是放置到各分割槽内的！ loader 只会认识自己的系统槽内的可开机核心档案，以及其他 loader 而已 ; loader 可直接指向或者是间接将管理权转交给另一个管理程序。 那现在请你想一想，为什么人家常常说：『如果要安装多重引导，最好先安装 Windows 再安装Linux」呢？这是因为：Linux 在安装的时候，你可以选择将开机管理程序安装在 MBR 或各别分割槽的启动扇区，而且 Linux 的 loader 可以手动设定选单(就是上图的 M1,M2…)，所以你可以在 Linux 的 bootloader 里面加入 Windows 开机的选项；Windows 那你在安装的时候，他的安装程序会主动的覆盖掉 MBR 以及自己所在分割槽的启动扇区，你没有选择的机会，而且他没有让我们自己选择选单的功能。​ 如上图所示，所有的档案都是由根目录(&#x2F;)衍生来的，而次目录之下还能够有其他的数据存在。上图中长方形为目录，波浪形则为档案。那当我们想要取得 mydata 那个档案时，系统就得由根目录开始找，然后找到 home 接下来找到 dmtsai，最终的档名为：&#x2F;home&#x2F;dmtsai&#x2F;mydata 的意思。​ 所谓的『挂载』就是利用一个目录当成进入点，将磁盘分区槽的数据放置在该目录下； 也就是说，进入该目录就可以读取该分割槽的意思。这个动作我们称为『挂载』，那个进入点的目录我们称为『挂载点』。 由于整个 Linux 系统最重要的是根目录，因此根目录一定需要挂载到某个分割槽的。 至于其他的目录则可依用户自己的需求来给予挂载到不同的分割槽。我们以上图来作为一个说明：​ 第四章、安装 CentOS 5.x 与多重引导小技巧那如果按下的是[F5]时，就会进入到救援模式的说明画面，如下图所示： 内存压力测试：memtest86CentOS 的 DVD 除了提供一般 PC 来安装 Linux 之外，还提供了不少有趣的东西，其中一个就是进行『烧机』的任务！ 这个烧机不是台湾名产烧酒鸡啊，而是当你组装了一部新的个人计算机，想要测试这部主机是否稳定时，就在这部主机上面运作一些比较耗系统资源的程序，让系统在高负载的情下去运作一阵子(可能是一天)，去测试稳定度的一种情况，就称为『烧机』啦！​ Kdump 与时区的校正完成了防火墙与 SELinux 的选择后，接下来会出现如下的 Kdump 窗口。什么是 Kdump 呢？这个 Kdump 就是，当核心出现错误的时候，是否要将当时的内存内的讯息写到档案中，而这个档案就能够给核心开发者研究为啥会当机之用。 我们并不是核心开发者，而且内存内的数据实在太大了，因此常常进行 Kdump 会造成硬盘空间的浪费。 所以，这里建议不要启动 Kdump 的功能喔！​ 第五章、首次登入与在线求助 man page重新启动 X Window 的快速按钮般来说，我们是可以手动来直接修改 X Window 的配置文件的，不过，修改完成之后的设定项目并不会立刻被加载，必须要重新启动 Ⅹ 才行(特别注意，不是重新启动，而是重新启动 X！)。那么如何重新启动 Ⅹ 呢？最简单的方法就是：直接注销，然后再重新登入即可；在 X 的画面中直接按下[Alt] + [Ctrl] + [Backspace]第二个方法比较有趣，[backspace]是退格键，你按下三个按钮后 XWindow 立刻会被重新启动。 如果你的 X Window 因为不明原因导致有点问题时，也可以利用这个方法来重新启动 Ⅹ 喔！​ X window 与文本模式的切换我们前面一直谈到的是 ⅩWindow 的窗口管理员环境，那么在这里面有没有纯文本接口的环境啊？当然有啊！但是，要怎么切换 ⅩWindow 与文本模式呢？注意喔，通常我们也称文本模式为终端机接口,terminal 或 console 喔 ！ Linux 预设的情况下会提供六个 Terminal 来让使用者登入，切换的方式为使用：[Ctrl] + [Alt] + [F1][F6]的组合按钮。那这六个终端接口如何命名呢，系统会将[F1]～[F6]命名为 tty1 ~ tty6 的操作接口环境。那么如何回到刚刚的 X 窗口接口呢？很简单啊！按下[Ctrl] + [Alt] + [F7]就可以了！我们整理一下登入的环境如下：[Ctrl] + [Alt] + [F1] ~ [F6] ：文字接口登入 tty1 ~ tty6 终端机 ;[Ctrl] + [Alt] + [F7] ：图形接口桌面。在 Linux 默认的登入模式中，主要分为两种，一种是仅有纯文本接口(所谓的执行等级 run level 3)的登入环境，在这种环境中你可以有 tty1tty6 的终端界面，但是并没有图形窗口接口的环境喔。 另一种则是图形接口的登入环境(所谓的执行等级 run level 5)，这也是我们第四章安装妥当后的预设环境！在这个环境中你就具有 ttty1tty7 了 ! 其中的 tty7 就是开机完成后的默认等待登入的图形环境！如果你是以纯文本环境启动 Linux 的，预设的 tty7 是没有东西的！万一如此的话，那要怎么启动 X 窗口画面呢？ 你可以在 tty1tty6 的任意一个终端接口使用你的账号登入后(登入的方法下一小节会介绍)，然后下达如下的指令即可：startx​ 下达指令123456789101112131415[vbird@www ~]$ command [-options] parameter1 parameter2 ... 指令 选项 参数(1) 参数(2)说明：0. 一行指令中第一个输入的部分绝对是『指令(command)！或『可执行文件1. command 为指令的名称，例如变换路径的指令为 cd 等等；2. 中刮号[]并不存在于实际的指令中，而加入选项设定时，通常选项前会带 -例如 -h；有时候会使用选项的完整全名，则选项前带有一符号，例如help ;3.parameter1parameter2.. 为依附在选项后面的参数，或者是command参数；4.选项,参数等这几个咚咚中间以空格来区分，不论空几格都视为一格5. 按下[Enter]案件后，该指令就立即执行，[Enter]按键代表着一行指令的开始启动6. 指令太长的时候，可以使用反斜杠（\\）来跳脱[Enter]符号，使指令连续到下行。 注意！反斜杠后就立刻接特殊字符，才能跳脱！其他：a.在Linux 系统中，英文大小写字母是不一样的。举例来说， cd 与 CD 并不同 重要的几个热键[Tab], [ctrl]-c, [ctrl]-d[Tab]：命令补全[ctrl]-c：中断目前程序的挄键[ctrl]-d：『键盘输入结束(End Of File, EOF 或 End Of Input)』—可以用来取代 exit 的输入​ Linux 系统的在线求助 man page 与 info page因为在 Linux 上开发的软件大多数都是自由软件，而这些软件的开发者为了让大家能够了解指令的用法， 都会自行制作很多的文件，而这些文件也可以直接在在线就能够轻易的被使用者查询出来！这根本就是『联机帮助文件』 正确的关机方法将数据同步写入硬盘中的指令： sync 目前的 shutdown&#x2F;reboot&#x2F;halt 等等指令均已经在关机前进行了 sync 这个工具。不过，多做几次总是比较放心点普通用户仅可对自己的身份的任务进行数据写入更新，root 账号可以对整个系统进行数据更新 ​ 惯用的关机指令： shutdown重新启动，关机： reboot, halt, poweroffshutdown 可以依据目前已启动的服务来逐次关闭各服务后才关机；至于 halt 却能够在不理会目前系统状况下，进行硬件关机的特殊功能 文件系统错误的问题解决的方法其实很简单，不过因为出错扇区所挂载的目录不同，处理的流程困难度就有差异了。 举例来说，如果你的根目录『&#x2F;」并没有损毁，那就很容易解决，如果根目录已经损毁了，那就比较麻烦​ 无损坏 进入单机维护工作；假如错误是&#x2F;dev&#x2F;sda7。输入『 fsck &#x2F;dev&#x2F;sda7 』。如果有发现任何的错误时，屏幕会显示： clear [Y&#x2F;N]？ 的询问讯息，就直接输入 Y 吧。最终 reboot 重启​ 损坏 可以将硬盘拔掉，接到另一台 Linux 系统的计算机上，并且不要挂载(mount)该硬盘，然后以 root 的身份执行『 fsck &#x2F;dev&#x2F;sdb1 』；也可以使用近年来径热门的 Live CD​ 如果硬盘整个坏掉 能救出来的救出来，然后换一颗硬盘来重新安装 Linux 吧 如何预防发生文件系统错误：划分不同的 partition ​ 忘记 root 密码以单人维护模式登入即可更改你的 root 密码：系统启动–&gt;读秒时按“e”进入 grub–&gt;移动至“kernel”一行，再按“e”–&gt;再最后放输入“single”–&gt;回车确认–&gt;按“b”就开机进入单人维护模式。 1kernel /vmlinuz-2.6.18-128.el5 ro root=LABEL=/ rhgb quiet single 在这个模式下，你会在 tty1 的地方不需要输入密码即可取得终端机的控制权(而且是使用 root 的身份喔！) my：根据系统不同自行百度吧。​ 第六章 Linux 的档案权限与目录配置使用者与群组 档案拥有者：档案设定成『只有档案拥有者，就是我，才能看与修改这个档案的内容』， 那举即使其他人知道你有这个相当『有趣』的档案，不过由二你有设定适当的权限， 所以其他人自然也就无法知道该档案的内容 群组概念：限制非自己团队(亦即是群组) 的其他人不能够阅览内容！而且亦可以让自己的团队成员可以修改我所建立的档案！ 同时，如果我自己还有私人隐密的文件，仍然可以设定成让自己的团队成员也看不到我的档案数据 其他人的概念：王三毛这个『档案』的拥有者为王三毛，他属二王大毛这个群组， 而张小猪相对于王三毛，则只是一个『其他人(others)』 root：他可以到达任何他想要去的地方。 Linux 用户身份与群组记录的档案 默认的情况下，所有的系统上的账号不一般身份使用者，还有那个 root 的相关信息， 都是记录在&#x2F;etc&#x2F;passwd 这个档案内的 个人的密码则是记录在&#x2F;etc&#x2F;shadow 这个档案下 Linux 所有的组名都记录在&#x2F;etc&#x2F;group Linux 文件属性 1ls -al:查看文件属性 第一栏，为档案类型与权限 当为[ d ]则是目录，例如上表档名为 『.gconf』的那一行 ; 当为[ - ]则是档案，例如上表档名为 『install.log』那一行 ; 若是[Ⅰ]则表示为连结档(link file)； 若是[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置) ; 若是[ c ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。 ​ 接下来的字符中，以三个为一组，且均为「rwx」 的三个参数的组合。[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。这三个权限的位置不会改变，如果没有权限，就会出现减号[－]而已。 第二栏表示有多少档名连结到此节点(i-node)：第三栏表示这个档案(或目录)的『拥有者账号』第四栏表示这个档案的所属群组第五栏为这个档案的容量大小，默认单位为 bytes；第八栏为这个档案的建档日期或者是最近的修改日期：第九栏为这个档案的档名：如果档名前多一个『 . 』，则代表这个档案为『隐藏档』 如何改变文件属性的权限 1234chgrp : 改收变档案所属群组chgrp [-R] dirname/filename ...选项与参数：-R :递归(recursive)的持续变更 1234chown ：改变档案拥有者chown [-R] 账号名称:组名 档案或目录选项与参数：-R :递归(recursive)的持续变更 123456789101112131415chmod ：改变档案的权限, SUID, SGID, SBIT 等等的特性权限的设定方法有两种， 分别可以使用数字或者是符号来进行权限的变更数字修改权限：r:4;w:2;x:1chmod [-R] xyz 档案或目录选顷与参数：xyz : 就是刚刚提到的数字类型的权限属怅，为 rwx 属性数值的相加。-R : 进行递归(recursive)的持续变更，亦即连同次目录下的所有档案都会变更符号修改权限 u, g, o, a ：user, group, others, all r, w, x +(加入)， -(除去)， =(设定) 例如： chmod u=rwx,go=rx .bashrc 目录与档案之权限意义 权限对档案的重要性 r (read)：可读取此一档案的实际内容，如读取文本文件的文字内容等；w (write)：可以编辑、新增或者是修改该档案的内容(但不含删除该档案)；x (eXecute)：该档案具有可以被系统执行的权限。为在 Windows 底下一个档案是否具有执行的能力是藉由『 扩展名 』来判断的，例如：.exe, bat, .com 等等，但是在 Linux 底下，我们的档案是否能被执行，则是藉由是否具有 x 这个权限来决定的！跟档名是没有绝对的关系的 权限对目录的重要性 r (read contents in directory) : 表示具有读取目录结构列表的权限，所以当你具有读取(r)一个目录的权限时，表示你可以查询该目录下的文件名数据。 所以你就可以利用 Is 这个指令将该目录的内容列表显示出来 w (modify contents of directory) : 他表示你具有异动该目录结构列表的权限，也就是底下这些权限：建立新的档案与目录；删除已经存在的档案与目录(不论该档案的权限为何！)将已存在的档案或目录进行更名；搬移该目录内的档案、目录位置。 x (access directory) : 目录的 x 代表的是用户能否进入该目录成为工作目录的用途 Linux 档案种类与扩展名 档案种类 正规档案(regular file）: 第一个字符为[-] 123- 纯文本档(ASCII)：这是 Linux 系统中最多的一种文件类型啰， 称为纯文本档是因为内容为我们人类可以直接读到的数据，例如数字、字母等等。 几乎只要我们可以用来做为设定的档案都属于这一种文件类型。- 二进制文件(binary)：还我们的系统其实仅认识且可以执行二进制文件(binary file)。你的Linux当中的可执行文件(scripts, 文字型批处理文件不算)就是这种格式的- 数据格式文件(data)：有些程序在运作的过程当中会读取某些特定格式的档案，那些特定格式的档案可以被称为数据文件（data file）。 目录(directory) :第一个属性为[d]，例如[drwxrwxrwx]。 连结档(link)：就是类似 Windows 系统底下的快捷方式。 第一个属性为I，例：[lrwxrwxrwx] ; 设备与装置文件(device) :与系统周边及储存等相关的一些档案，通常都集中在&#x2F;dev 这个目录之下！通常又分为两种： 区块(block)设备档 ：就是一些储存数据，以提供系统随机存取的接口设备，举例来说。硬盘与软盘等。你可以随机的在硬盘的不同区块读写，这种装置就是成组设备啰！你可以自行查一下&#x2F;dev&#x2F;sda 看看，会发现第一个属性为[ b ]喔！ 字符(character)设备文件：亦即是一些串行端口的接口设备，例如键盘、鼠标等等！这些设备的特色就是『一次性读取』的，不能够截断输出。 举例来说，你不可能让鼠标『跳到』另一个画面，而是『滑动』到另一个地方啊！第一个属性为[c]。 资料接口文件(sockets) :既然被称为数据接口文件，这种类型的档案通常被用在网络上的数据承接了。我们可以启动一个程序来监听客户端的要求，而客户端就可以透过这个 socket 来进行数据的沟通了。第一个属性为[s]，最常在&#x2F;var&#x2F;run 这个目录中看到这种文件类型了。 数据输送文件（FIFO，pipe）：FIFO 也是一种特殊的文件类型，他主要的目的在解决多个程序同时存取一个档案所造成的错误问题。 FIFO 是 first-in-first-out 的缩写。第一个属性为[p] 。 Linux 档案扩展名 Linux 的档案是没有所谓的『扩展名』的，我们刚刚就谈过，一个 Linux 档案能被执行，与他的第一栏的十个属性有关， 与文件名根本一点关系也没有。你的权限当中具有 x 的话，例如[ -rwx-r-xr-x ] 即代表这个档案可以被执过，但可以被执行跟可以执行成功是不一样的。虽然如此，不过我们还是希望可以藉由扩展名来了解该档案是什么东西，所以， 通常我们还是会以适当的扩展名来表示该档案是什么种类的。底下有数种常用的扩展名 *.sh：脚本或批处理文件（scripts），因为批处理文件为使用 shell 写成的，所以扩展名就编成 .sh 啰 ; _Z, _.tar, _.tar.gz, _.zip, *.tgz ：经过打包的压缩文件。这是因为压缩软件分别为 gunzip, tar 等等的，由于不同的压缩软件，而取其相关的扩展名啰！ _.html, _.php：网页相关档案，分别代表 HTML 语法与 PHP 语法的网页档案啰！ .html 的档案可使用网页浏览器来直接开启，至于 .php 的档案，则可以透过 client 端的浏览器来 server 端浏览 基本上，Linux 系统上的文件名真的只是让你了解该档案可能的用途而已， 真正的执行还是要看权限的规范上述的这种问题最常发生在档案传送的过程中。例如你在网络上下载一个可执行文件，但是偏偏在你的 Linux 系统中就是无法执行！呵呵！那举就是可能档案的属性被改变了 Linux 档案长度限制： 在 Linux 底下，使用预设的 Ext2&#x2F;Ext3 文件系统时，针对档案的档名长度限制为：单一档案或目彔的最大容量文件名为 255 个字符；包括完整路径名称及目彔 (&#x2F;) 之完整档名为 4096 个字符。 Linux 文件名的限制： 由于 Linux 在文字接口下的些指令操作关系般来说，你在设定 Linux 底下的文件名时，最好可以避免一些特殊字符比较好！例如底下这些：*？&gt; &lt;;&amp;![]|””(){}因为这些符号在文字接口下，是有特殊意义的！另外，文件名的开头为小数点『.』时，代表这个档案为『隐藏档』喔！同时，由于指令下达当中，常常会使用到 -option 之类的选项， 所以你最好也避免将档案档名的开头以 - 或 + 来命名啊！ Linux 目录配置 根据 FHS(http://www.pathname.com/fhs/))的官方文件指出，他们的主要目的是希望让使用者可以了解到已安装软件通常放置于那个目录下， 所以他们希望独立的软件开发商、操作系统制作者、以及想要维护系统的用户，都能够遵循 FHS 的标准。 也就是说，FHS 的重点在于规范每个特定的目录下应该要放置什么样子的数据而已。 FHS 依据文件系统使用的频繁与是否允许使用者随意更动， 而将目录设定成为四种交互作用的形态，用表格来说有点像底下这样： | 可分享的(shareable) 不可分享的(unshareable) 不变的(static) &#x2F;usr(软件放置处) &#x2F;opt (第三方协力软件) 可变动的(variable) &#x2F;var&#x2F;mail (使用者邮件信箱) &#x2F;var&#x2F;spool&#x2F;news (新闻组) 12345678910可分享的：可以分享给其他系统挂载使用的目录，所以包括执行文件与用户的邮件等数据，是能够分享给网络上其他主机挂载用的目录；不可分享的：自己机器上面运作的装置档案或者是与程序有关的 socket 档案等， 由于仅与自身机器有关，所以当然就不适合分享给其他主机了。不变的：有些数据是不会经常变动的，跟随着 distribution 而不变动。 例如函式库、文件说明文件、系统管理员所管理的主机服务配置文件等等；可变动的：经常改变的数据，例如登录文件、一般户可自行收受的新闻组等。 根目录 (&#x2F;) 的意义与内容： FHS 标准建议：根目录(&#x2F;)所在分割槽应该越小越好，且应用程序所安装的软件最好不要与根目录同一个分割槽内，保持根目录越小越好。如此不但效能较佳，根目录所在的文件系统也较不容易问题。​ 目录 应放置档案内容 &#x2F;bin | 系统有很多放置执行文件的目录，但&#x2F;bin 比较特殊。因为&#x2F;bin 放置的是在单人维护模式下还能够被操作的指令。在&#x2F;bin 底下的指令可以被 root 与一般账号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash 等等常用的指令。 || &#x2F;boot | 这个目录主要在放置开机会使用到的档案，包括 Linux 核心档案以及开机选单与开机所需配置文件等等。 Linux kernel 常用的档名为：vmlinuz，如果使用的是 grub 这个开机管理程序，则还会存在&#x2F;boot&#x2F;grub&#x2F;这个目录 || &#x2F;dev | 在 Linux 系统上，任何装置与接口设备都是以档案的型态存在于这个目录当中的。 你只要透过存取这个目录底下的某个档案， 比要重要的档案有&#x2F;dev&#x2F;null,&#x2F;dev&#x2F;zero,&#x2F;dev&#x2F;tty,&#x2F;dev&#x2F;lp*,&#x2F;dev&#x2F;hd*,&#x2F;dev&#x2F;sd*等等 || &#x2F;etc | 系统主要的配置文件几乎都放置在这个目录内，例如人员的账号密码文件、 各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有 root 有权力修改。FHS 建议不要放置可执行文件(binary)在这个目录中喔。比较重要的档案有：&#x2F;etc&#x2F;inittab,&#x2F;etc&#x2F;init.d&#x2F;,&#x2F;etc&#x2F;modprobe.conf,&#x2F;etc&#x2F;X11&#x2F;,&#x2F;etc&#x2F;fstab, &#x2F;etc&#x2F;sysconfig&#x2F;等等。另外，其下重要的目录有： &#x2F;etc&#x2F;init.d&#x2F;：所有服务的预设启动 script 都是放在这里的，例如要启动或者关&#x2F;etc 闭 iptables 的话：『&#x2F;etc&#x2F;init.d&#x2F;iptables start』、『&#x2F;etc&#x2F;init.d&#x2F;iptablesstop』 &#x2F;etc&#x2F;xinetd.d&#x2F;：这就是所谓的 super daemon 管理的各项服务的配置文件目录。 &#x2F;etc&#x2F;X11&#x2F;：与 X Window 有关的各种配置文件都在这里，尤其是 xorg.conf 这个 ⅩServer 的配置文件。|| &#x2F;home| 这是系统默认的用户家目录(home directory)。在你新增一个一般使用者账号时， 默认的用户家目录都会规范到这里来。比较重要的是，家目录有两种代号喔：~：代表目前这个用户的家目录，而~dmtsai : 则代表 dmtsai 的家目录！ || &#x2F;lib| 系统的函式库非常的多，而&#x2F;lib 放置的则是在开机时会用到的函式库， 以及在&#x2F;bin 或&#x2F;sbin 底下的指令会呼叫的函式库而已。 什么是函式库呢？妳可以将他想成是『外挂』，某些指令必须要有这些『外挂』才能够顺利完成程序的执行之意。 尤其重要的是&#x2F;lib&#x2F;modules&#x2F;这个目录，因为该目录会放置核心相关的模块(驱动程序)喔！ || &#x2F;media | media 是『媒体』的英文，顾名思义，这个&#x2F;media 底下放置的就是可移除的装置。包括软盘、光盘、DVD 等等装置都暂时挂载于此。常见的档名有：&#x2F;media&#x2F;floppy,&#x2F;media&#x2F;cdrom 等等。 || &#x2F;mnt| 如果妳想要暂时挂载某些额外的装置，一般建议妳可以放置到这个目录中。 在古早时候，这个目录的用途与&#x2F;media 相同啦！只是有了&#x2F;media 之后，这个目录就用来暂时挂载用了。 || &#x2F;opt| 这个是给第三方协力软件放置的目录。什么是第三方协力软件啊？举例来说，KDE 这个桌面管理系统是一个独立的计划，不过他可以安装到 Linux 系统中，因此 KDE 的软件就建议放置到此目录下了。 另外，如果妳想要自行安装额外的软件(非原本的 distribution 提供的)，那么也能够将你的软件安装到这里来。 不过，以前的 Linux 系统中，我们还是习惯放置在&#x2F;usr&#x2F;local 目录下呢！ || &#x2F;root | 系统管理员(root)的家目录。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时，该目录就能够拥有 root 的家目录，所以我们会希望 root 的家目录与根目录放置在同一个分割槽中。 || &#x2F;sbin | Linux 有非常多指令是用来设定系统环境的，这些指令只有 root 才能够利用来『设定』系统，其他用户最多只能用来『查询』而已。 放在&#x2F;sbin 底下的为开机过程中所需要的，里面包括了开机、修复、还原系统所需要的指令。 至于某些服务器软件程序，一般则放置到&#x2F;usr&#x2F;sbin&#x2F;当中。至于本机自行安装的软件所产生的系统执行文件(system binary)，则放置到&#x2F;usr&#x2F;local&#x2F;sbin&#x2F;当中了。常见的指令包括：fdisk, fsck,ifconfig, init, mkfs 等等。 || &#x2F;srv | srv 可以视为「service』的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。 常见的服务例如 WWW, FTP 等等。举例来说，WWW 服务器需要的网页资料就可以放置在&#x2F;srv&#x2F;www&#x2F;里面。 || &#x2F;tmp | 这是让一般用户或者是正在执行的程序暂时放置档案的地方。这个目录是任何人都能够存取的，所以你需要定期的清理一下。当然，重要数据不可放置在此目录啊！因为 FHS 甚至建议在开机时，应该要将&#x2F;tmp 下的数据都删除唷！ | 亊实上 FHS 针对根目录所设定的标准就仅有上面的，不过我们的 Linux 底下还有讲多目录你也需要了解一下的。 底下是几个在 Linux 当中也是非常重要的目录： 目录 应放置档案内容 &#x2F;lost+found 这个目录是使用标准的 ext2&#x2F;ext3 文件系统格式才会产生的一个目录，目的在于当文件系统发生错误时，将一些遗失的片段放置到这个目录下。这个目录通常会在分割槽的最顶层存在，例如你加装一颗硬盘于&#x2F;disk 中，那在这个系统下就会自动产生一个这样的目录 『&#x2F;disk&#x2F;lost+found』 &#x2F;proc 这个目录本身是一个『虚拟文件系统(virtual filesystem)』喔！他放置的数据都是在内存当中，例如系统核心、行程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中， 所以本身不占任何硬盘空间啊！比较重要的档案例如：&#x2F;proc&#x2F;cpuinfo, &#x2F;proc&#x2F;dma, &#x2F;proc&#x2F;interrupts, &#x2F;proc&#x2F;ioports, &#x2F;proc&#x2F;net&#x2F;*等等。 &#x2F;sys 这个目录其实跟&#x2F;proc 非常类似，也是一个虚拟的文件系统，主要也是记录与核心相关的信息。 包括目前已加载的核心模块与核心侦测到的硬件装置信息等等。这个目录同样不占硬盘容量喔！ &#x2F;usr 的意义与内容： usr 是 Unix Software Resource 的缩写， 也就是『Unix 操作系统软件资源』所放置的目录所有系统默认的软件(distribution 发布者提供的软件)都会放置到&#x2F;usr 底下，因此这个目录有点类似 Windows 系统的『C:\\Windows\\ + C:\\Program files\\』这两个目录的综合体 &#x2F;var 的意义与内容： &#x2F;var 就是在系统运作后才会渐渐占用硬盘容量的目录。 因为&#x2F;var 目录彔主要针对经常变动的档案，包括快取(cache)、登录彔档(log file)以及某些软件运作所产生的档案， 包括程序档案(lock file, run file)，或者例如 MySQL 数据库的档案等等 针对 FHS，各家 distributions 的异同 由于 FHS 仅是定义出最上层(&#x2F;)及次层(&#x2F;usr, &#x2F;var)的目录内容应该要放置的档案或目录数据， 因此，在其他次目录层级内，就可以随开发者自行来配置了。举例来说，CentOS 的网络设定数据放在&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F; 目录下，但是 SuSE 则是将网络放置在 &#x2F;etc&#x2F;sysconfig&#x2F;network&#x2F; 目录下，目录名称可是不同的。不过只要记住大致的 FHS 标准，差异性其实是有限的。 目录树(directory tree) 目录树有主要特征 目录树的启始点为根目录(&#x2F;,root); 每一个目录不止能使用本地端的 partition 的文件系统，也可以使用网络上的 filesystem。举例来说，可以利用 Network File System (NFS) 服务器挂载某特定目录等。 每一个档案在此目录树中的文件名(包含完整路径)都是独一无二的。 绝对路径与相对路径 绝对路径：由根目录(&#x2F;)开始写起的文件名或目录名称，例如 &#x2F;home&#x2F;dmtsai&#x2F;.bashrc ; 相对路径：相对于目前路径的文件名写法。 例如 .&#x2F;home&#x2F;dmtsai 或 ..&#x2F;..&#x2F;home&#x2F;dmtsai&#x2F;等等。 反正开头不是／就属于相对路径的写法. ：代表当前的目录，也可以使用 .&#x2F; 来表示；.. ：代表上一层目录，也可以 ..&#x2F; 来代表。 CentOS 的观察 12345678910[root@www ~]# uname -r2.6.18-128.el5 &lt;==可以察看实际的核心版本[root@www ~]# lsb_release -aLSB Version: :core-3.1-amd64:core-3.1-ia32:core-3.1-noarch:graphics-3.1-amd64:graphics-3.1-ia32:graphics-3.1-noarch &lt;==LSB 的版本Distributor ID: CentOSDescription: CentOS release 5.3 (Final) &lt;==distribution 的版本Release: 5.3Codename: Fina 第七章 Linux 的档案权限与目录配置目录与路径 相对路径与绝对路径 相对路径意指【相对于目前工作目录】 目录的相关操作1 cd：变换目录 12[root@www /]# cd -# 表示回到刚刚的那个目录，也就是 /root 啰～ 2 pwd :显示当前目录pwd -P:显示真实路径。例如：联结档3 mkdir：建立个新的目录选项与参数 :-m ：配置文件案的权限喔！直接设定，不需要看预设权限 (umask)-p 帮助你直接将所需要的目录(包含上层目录)递归建立起来！4 rmdir :删除空的目录选项与参数 :-p:递归删除 执行文件路径的变量：$PATHecho $PATH：显示当前 PATH 变量 档案与目录管理1234ls [参数] 目录名称选项与参数：-d:仅列出目录本身，而不显示目录内的档案数据-l:长数据串行出，包含档案的属性与权限等等数据 cp(复制档案或目录） 选项与参数：-a:当我们在进行备份的时候，某些需要特别注意的特殊权限档案，例如密码文件（&#x2F;etc&#x2F;shadow）以及一些配置文件，就不能直接以 cp 来复制，而必须要加上 -a 或者是 -p 等等-f:若目标文件已经存在时，再覆盖时会先询问动作的进行-p:连同档案的属性一起复制过去，而非使用默认属性-r:递归持续复制，用于目录的复制行为 rm(移除档案或目录） -r:递归删除-i:互动模式 mv(移动档案与目录，或更名) -f:强制-i:若目标档案已存在，会询问是否删除 档案内容查阅： cat：由第一行开始显示档案内容tac：从最后一行开始显示，可以看出 tac 是 cat 的倒着写！nl：显示的时候，顺道输出行号！more：一页一页的显示档案内容less 与 more 类似，但是比 more 更好的是，他可以往前翻页！head：只看头几行tail ：只看尾巴几行od：以二进制的方式读取档案内容！ 修改档案时间或建置新档：touch 三种时间状态 mtime:当“内容数据”发生变更时，就会更新这个时间 ctime:当“状态”变更时，就会更新这个时间。例如：权限 atime:当“档案的内容被取用”时，就会更新这个读取时间 最常用的用法 建立一个空档案 修订档案日期 档案与目录的默认权限与隐藏权限 档案预设权限：umask 参数：不加参数：以数字的方式代表 7 减去 x。x 为数字。假如数字为 0，即 7-0&#x3D;7。即拥有 rwx 权限-S:以符号类型的方式显示出权限 档案隐藏属性： chattr(配置文件案隐藏属性） 12345678910111213141516171819202122232425262728chattr [+-=][ASacdistu] 档案或目录名称选项与参数 :+：增加某一个特殊参数，其他原本存在参数则不动。-：移除某一个特殊参数，其他原本存在参数则不动。=：设定一定，且仅有后面接的参数A:当设定了 A 这个属性时，若你有存取此档案(或目录)时，他的访问时间atime 将不会被修改，可避免I/O 较慢的机器过度的存取磁盘。这对速度较慢的计算机有帮助S：一般档案是异步写入磁盘的(原理请参考第五章 sync的说明)，如果加上 S这个 属性时，当你进行任何档案的修改，该更动会『同步」写入磁盘中。a：当设定 a 之后，这个档案将只能增加数据，而不能删除也不能修改数据 只有 root才能设定这个属性。c：这个属性设定之后，将会自动的将此档案『压缩』，在读取的时候将会自动解压缩， 但是在储存的时候，将会先进行压缩后再储存(看来对于大档案似乎蛮有用的！）d:当dump程序被执行的时候，设定 d 属性将可使该档案(或目录)不会被dump 备份i：他可以让一个档案『不能被删除、改名、设定连结也无法写入或新增资料！」对于系统安全性有相当大的帮助！只有 root 能设定此属s：当档案设定了 s 属性时，如果这个档案被删除，他将会被完全的移除出这个硬件空间，所以如果误删了，完全无法救回来了喔！u：与 s 相反的，当使用 u 来配置文件案时，如果该档案被删除了，则数据内容其实还存在磁盘中，可以使用来救援该档案喔！ lsattr(显示档案隐藏属性） 选项与参数：-a：显示隐藏文件的属性-d:如果接的是目录，仅显示目录本身的属性而非目录内的文件名-R:连同子目录的数据也一并列出来 档案特殊权限; 设置特殊权限后，对应位置应出现小写 s。若为大写 S，即特殊权限的执行者也没有权限执行。即空权限 SUID SUID 权限仅对二进制程序(binary program)有效； 执行者对于该程序需要具有 x 的可执行权限； 本权限仅在执行该程序的过程中有效（run-time）; 执行者将具有该程序拥有者 (owner)的权限。 SGID SGID 对二进制程序有用； 程序执行者对于该程序来说，需具备 x 的权限； 执行者在执行的过程中将会获得该程序群组的支持！ 与 SUID 非常类似。对项目开发来说非常重要。涉及群组权限 SBIT 仅对目录有效，对档案没有效果 当用户对于此目录具有 w，x 权限，亦即具有写入的权限时； 当用户在该目录下建立档案或目录时，仅有自己与 root 才有权力删除该档案 观察文件类型:file如果你想要知道某个档案的基本数据，例如是属于 ASCII 或者是 data 档案，或者是 binary，且其中有没有使用到动态函式库（share library）等等的信息，就可以利用 file 这个指令来检阅 指令与档案的搜索 脚本文件名的搜寻： which（寻找【执行档】） 选项或参数：-a:将所有 PATH 目录中可以找到的指令均列出，而不止第一个被找到的指令名称 档案档名的搜寻： whereis(寻找特定档案) Linux 系统会将系统内的所有档案都记录在一个数据库档案里面，而当使用 whereis 或者是底下要说的 locate 时，都会以此数据库档案的内容为准， 因此，有的时后你还会发现使用这两个执行档时，会找到已经被杀掉的档案！而且也找不到最新的刚刚建立的档案呢！参数与选项：-b:只找 binary 格式的档案-m：只找在说明文件 manual 路径下的档案-s:只找 source 来源档案-u:搜寻不在上述三个项目当中的其他特殊档案 locate locate 寻找的数据是由『已建立的数据库 &#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;』 里的，不用直接在去硬盘当中存取数据选项与参数:-i:忽略大小写的差异 ;-r:后面可接正规表示法的显示方式 更新数据库指令：updatedb根据 &#x2F;etc&#x2F;updatedb.conf 的设定去搜寻系统硬盘内的文件名，并更新&#x2F;var&#x2F;lib&#x2F;mlocate 内的数据库档案； find 选项与参数 : 1. 与时间有关的选项： -mtime n : n 为数字，意义为在 n 天之前的【一天之内！被更动过内容的档案】-mtime +n : 列出在 n 天之前(不含 n 天本身)被更动过内容的档案档名 ;-mtime -n : 列出在 n 天之内(含 n 天本身)被更动过内容的档案档名.-newert file ：file 为一个存在的档案，列出比 file 还要新的档案档名 2. 与使用者或组名有关的参数： -uid n：n 为数字，这个数字是用户的账户 ID，即 UID&#x2F;etc&#x2F;passwd 里面与账号名称对应的数字-gid n ：n 为数字，这个数字是组名的 ID，亦即 GID，这个 GID 记录在&#x2F;etc&#x2F;group-user name : name 为使用者账号名称-group name : name 为组名，例如 users ;-nouser：寻找档案的拥有者不存在 &#x2F;etc&#x2F;passwd 的人 ！-nogroup：寻找档案的拥有群组不存在于 &#x2F;etc&#x2F;group 的档案！当你自行安装软件时，很可能该软件的属性当中并没有档案拥有者这是可能的！在这个时候，就可以使用-nouser 与-nogroup 搜寻 3. 与档案权限及名称有关的参数： -name filename：搜寻文件名为 filename 的档案-size [+-]SIZE：搜寻比 SIZE 还要大(+)或小(-)的档案。这个 SIZE 的规格有：c: 代表 byte ,k: 代表 1024bytes。所以，要找比 50KB 还要大的档案，就是『-size +50k ]-type TYPE：搜寻档案的类型为 TYPE 的，类型主要有：一般正规档案(f),装置档案 (b, c), 目录 (d), 连结档 (l), socket (s),及 FIFO (p) 等属性。-perm mode：搜寻档案权限『刚好等于」mode 的档案，这个 mode 为类似 chmod 的属性值。举例来说，-rwsr-xr-x 的属性为 4755 !【必须全部囊括 mode 的权限，即 4755】-perm +mode:搜索档案权限【包含任一 mode 的权限】的档案。即 4755 的档案，可以-perm -0777​ 第八章 Linux 磁盘与文件系统管理认识 EXT2 文件系统 文件系统特征 格式化 为什么需要进行『格式化』呢？这是因为每种操作系统所设定的文件属性&#x2F;权限并不相同， 为了存放这些档案所需的数据，因此就需要将分割槽进行格式化，以成为操作系统能够利用的『文件系统格式(filesystem)』。但现在已经有新技术可以将一个分割槽格式划分多个文件系统（例如 LVM），也能将多个分割槽合成一个文件系统（LVM,RAID） 如何运作 inode（权限与属性区块） 例如 Linux 的档案权限（rwx） 2. block（实际数据区块） 实际记录档案的内容，若档案太大，会占用多个 block 3. superblock（超级区块） 记录整个文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量等 如何读取 索引式文件系统 通过读取 inode 的信息来确定 block 号码 2. FAT文件系统 不存在 inode，所以每个区块记录下一个区块的信息。因此需要磁盘整理 linux 的 EXT2 文件系统 Ext2 文件系统在格式化的时候基本上是区分为多个区块群组 (block group)的，每个区块群组都有独立的 inode&#x2F;block&#x2F;superblock 系统 data block（资料区块） block 大小 1kb 2kb 4kb 最大单一档案限制 16gb 256gb 2tb 最大文件系统总容量 2tb 8tb 16tb 1. 基本限制 - 原则上，block的大小与数量在格式化完就不能够再改变了(除非重新格式化)； - 每个 block 内最多只能够放置一个档案的数据； - 承上，如果档案大于 block的大小，则一个档案会占用多个 block 数量； - 承上，若档案小于 block，则该 block 的剩余容量就不能够再被使用了(磁盘空间会浪费)。 inode table(inode 表格) 数据内容 该档案的存取模式(read&#x2F;write&#x2F;excute) ; 该档案的拥有者与群组(owner&#x2F;group)； 该档案的容量； 该档案建立或状态改变的时间(ctime) ; 最近一次的读取时间(atime)； 最近修改的时间(mtime)； 定义档案特性的旗标(flag)，如 SetUID. 该档案真正内容的指向 (pointer) ; 特征 每个 inode 大小均固定为 128bytes； 每个档案都仅会占用一个 inode 而已； 承上，因此文件系统能够建立的档案数量与 inode 的数量有关； 系统读取档案时需要先找到 inode，并分析 inode 所记录的权限与用户是否符合，若符合才能够开始实际读取 block 的内容。 遇到大文件时 superblock（超级区块） 主要信息 block 与 inode 的总量 ; 未使用与已使用的 inode &#x2F; block 数量； block 与 inode 的大小 (block 为 1, 2, 4K , inode 为 128 bytes) ; filesystem 的挂载时间、最近一次写入数据的时间、最近一次检验磁盘 (fsck) 的时间等文件系统的相关信息； 一个 valid bit 数值，若此文件系统已被挂载，则 valid bit 为 0，若未被挂载，则 valid bit 为 1 Filesystem Description (文件系统描述说明) 这个区段可以描述每个 block group 的开始与结束的 block 号码，以及说明每个区段 (superblock,bitmap, inodemap, data block) 分别介亍哪一个 block 号码之间 block bitmap (区块对照表) 从 block bitmap 当中可以知道哪些 block 是空的，因此我们的系统就能够很快速的找到可使用的空间来处置档案 inode bitmap (inode 对照表) inode bitmap 则是记录使用不未使用的 inode 号码 与目录树的关系 目录 当我们在 Linux 下的 ext2 文件系统建立一个目彔时， ext2 会分配一个 inode 不至少一块 block 给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码； 而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据。 2. 档案 建立一般档案时，ext2 会分类一个 inode 相对于该档案大小的 block 数量给该档案 3. file system大小与磁盘读取效能 随着文件系统增大，数据可存在的区块增多。分散的概率也就增大，随着数据分散，最终可能会导致低效读取的出现 4. 数据不一致状态 在早期的 Ext2 文件系统中，如果发生意外断电等错误，导致数据没有正常写入。 那系统在重新启动的时候，就会藉由 Superblock 当中记录的 valid bit (是否有挂载) 与 filesystem state (clean 与否) 等状态来判断是否强制强行数据一致性的检查！ 1. 日志式文件系统 如果在我们的 filesystem 当中规划出一个区块，该区块专门在记录写入或修订档案时的步骤， 那不就可以简化一致性检查的步骤了？也就是说： 1. 预备：当系统要写入一个档案时，会先在日志记录区块中纪录某个档案准备要写入的信息； 1. 实际写入：开始写入档案的权限与数据；开始更新 metadata 的数据； 1. 结束：完成数据与 metadata 的更新后，在日志记录区块当中完成该档案的纪录。 Linux 文件系统的运作 Linux 使用的方式是透过一个称为异步处理：当系统加载一个档案到内存后，如果该档案没有被更动过，则在内存区段的档案数据会被设定为干净(clean)的。 但如果内存中的档案数据被更改过了(例如你用 nano 去编辑过这个档案)，此时该内存中的数据会被设定为脏的 (Dirty)。此时所有的动作都还在内存中执行，并没有写入到磁盘中！系统会不定时的将内存中设定为 [Dirty』的数据写回磁盘，以保持磁盘与内存数据的一致性。可以通过 sync 来强制内存中设定为“Dirty”的档案写回到磁盘中 挂载点的意义 挂载点一定是目录，该目录为进入该文件系统的入口 linux VFS 整个 Linux 的系统都是透过一个名为 Virtual Filesystem Switch 的核心功能去读取 file system 的 文件系统的简单操作 磁盘与目录的容量 磁盘与目录的容量： df：列出文件系统的整体磁盘使用量 -h：以人们较易读的容量格式 (G&#x2F;M) 显示 2. du：评估文件系统的磁盘使用量（常用于在推估目录所占容量） 实体链接与符号链接：ln [-sf] 来源文件 目标文件 选项与参数：-s ：如果不加任何参数就进行连结，那就是 hard link，至亍 -s 就是 symboliclink一种是类似 Windows 的快捷方式功能的档案，可以帮助你快速的链接到目标档案(或目录)； 另一种则是透过文件系统的 inode 连结来产生新档名，而不是产生新档案！这种称为实体链接 (hard link)。 Hard Link (实体链接, 硬式连结或实际连结) hard link 只是再某个目录下新增一笔档名链接到某 inode 号码的关连记录 Symbolic Link (符号链接，亦即是快捷方式) 直接指向读取他 link 的那个档案的档名 1 1 1 磁盘的分割、格式化、检验与挂载设定开机挂载内存置换空间（swap）之建置文件系统的特殊观察与操作 1 1 11 1111111​ ​ ​ 1","tags":[{"name":"Linux","slug":"Linux","permalink":"http://liaozonglong.github.io/tags/Linux/"}],"categories":[]}]}